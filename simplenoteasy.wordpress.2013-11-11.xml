<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.5.1" created="2013-11-11 01:06" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Simple, Not Easy 简而无易</title>
	<link>http://allenlsy.com</link>
	<description>Work Hard and Work WELL</description>
	<pubDate>Mon, 11 Nov 2013 01:06:46 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://allenlsy.com</wp:base_site_url>
	<wp:base_blog_url>http://allenlsy.com</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>allenlsy</wp:author_login><wp:author_email>cafe@allenlsy.com</wp:author_email><wp:author_display_name><![CDATA[allenlsy]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>3</wp:term_id><wp:category_nicename>algorithm-suan-fa</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Algorithm]]></wp:cat_name><wp:category_description><![CDATA[Algorithm and data structure]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>5</wp:term_id><wp:category_nicename>basic-algo-ji-ben-suan-fa</wp:category_nicename><wp:category_parent>algorithm-suan-fa</wp:category_parent><wp:cat_name><![CDATA[Basic Algorithms]]></wp:cat_name><wp:category_description><![CDATA[Brute-force, greedy, recursion, diduction, simulation, searching, DP]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>6</wp:term_id><wp:category_nicename>computational-geometry-ji-suan-ji-he</wp:category_nicename><wp:category_parent>algorithm-suan-fa</wp:category_parent><wp:cat_name><![CDATA[Computational Geometry]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>7</wp:term_id><wp:category_nicename>computer-science</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Computer Science]]></wp:cat_name><wp:category_description><![CDATA[Really a Science]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>4</wp:term_id><wp:category_nicename>allenlsy-ri-ji-xin-de</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Daily Life]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>8</wp:term_id><wp:category_nicename>data-structure-shu-ju-jie-gou</wp:category_nicename><wp:category_parent>algorithm-suan-fa</wp:category_parent><wp:cat_name><![CDATA[Data Structure]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>9</wp:term_id><wp:category_nicename>graph-theory-tu-lun</wp:category_nicename><wp:category_parent>algorithm-suan-fa</wp:category_parent><wp:cat_name><![CDATA[Graph Theory]]></wp:cat_name><wp:category_description><![CDATA[Bipartite, network flow ...]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>10</wp:term_id><wp:category_nicename>mathematics-shu-xue</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Mathematics]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>14</wp:term_id><wp:category_nicename>poj-bei-da-ti-ku</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[POJ 北大题库]]></wp:cat_name><wp:category_description><![CDATA[acm.pku.edu.cn/OnlineJudge]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>15</wp:term_id><wp:category_nicename>reading-hai-na-bai-chuan</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Reading]]></wp:cat_name><wp:category_description><![CDATA[Some good articles]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>17</wp:term_id><wp:category_nicename>software-development-ruan-jian-kai-fa</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Software Development]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>uncategorized</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>80</wp:term_id><wp:category_nicename>web-development</wp:category_nicename><wp:category_parent>software-development-ruan-jian-kai-fa</wp:category_parent><wp:cat_name><![CDATA[Web Development]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>19</wp:term_id><wp:category_nicename>database-shu-ju-ku-she-ji-yu-shi-xian</wp:category_nicename><wp:category_parent>software-development-ruan-jian-kai-fa</wp:category_parent><wp:cat_name><![CDATA[Database]]></wp:cat_name><wp:category_description><![CDATA[SQL Server, MySQL, Oracle. More on database design]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>18</wp:term_id><wp:category_nicename>software-design</wp:category_nicename><wp:category_parent>software-development-ruan-jian-kai-fa</wp:category_parent><wp:cat_name><![CDATA[Design]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>22</wp:term_id><wp:category_nicename>programming-language-bian-cheng-yu-yan</wp:category_nicename><wp:category_parent>software-development-ruan-jian-kai-fa</wp:category_parent><wp:cat_name><![CDATA[Programming Languages]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>23</wp:term_id><wp:category_nicename>server-fu-wu-qi</wp:category_nicename><wp:category_parent>software-development-ruan-jian-kai-fa</wp:category_parent><wp:cat_name><![CDATA[Server]]></wp:cat_name></wp:category>
	<wp:tag><wp:term_id>75</wp:term_id><wp:tag_slug>acm</wp:tag_slug><wp:tag_name><![CDATA[acm]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>62</wp:term_id><wp:tag_slug>admems</wp:tag_slug><wp:tag_name><![CDATA[admems]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>60</wp:term_id><wp:tag_slug>architecture</wp:tag_slug><wp:tag_name><![CDATA[architecture]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>24</wp:term_id><wp:tag_slug>asp-net</wp:tag_slug><wp:tag_name><![CDATA[asp.Net]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>51</wp:term_id><wp:tag_slug>bipartite</wp:tag_slug><wp:tag_name><![CDATA[bipartite]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>88</wp:term_id><wp:tag_slug>c</wp:tag_slug><wp:tag_name><![CDATA[c]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>30</wp:term_id><wp:tag_slug>computational-geometry</wp:tag_slug><wp:tag_name><![CDATA[computational geometry]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>78</wp:term_id><wp:tag_slug>convex-hull</wp:tag_slug><wp:tag_name><![CDATA[convex hull]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>27</wp:term_id><wp:tag_slug>cryptography</wp:tag_slug><wp:tag_name><![CDATA[cryptography]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>81</wp:term_id><wp:tag_slug>css</wp:tag_slug><wp:tag_name><![CDATA[css]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>67</wp:term_id><wp:tag_slug>database</wp:tag_slug><wp:tag_name><![CDATA[database]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>66</wp:term_id><wp:tag_slug>db</wp:tag_slug><wp:tag_name><![CDATA[db]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>73</wp:term_id><wp:tag_slug>dependency-injection</wp:tag_slug><wp:tag_name><![CDATA[dependency injection]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>63</wp:term_id><wp:tag_slug>design</wp:tag_slug><wp:tag_name><![CDATA[design]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>72</wp:term_id><wp:tag_slug>di</wp:tag_slug><wp:tag_name><![CDATA[di]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>41</wp:term_id><wp:tag_slug>dynamic-programming</wp:tag_slug><wp:tag_name><![CDATA[dynamic programming]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>68</wp:term_id><wp:tag_slug>gtd</wp:tag_slug><wp:tag_name><![CDATA[GTD]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>29</wp:term_id><wp:tag_slug>interval-tree</wp:tag_slug><wp:tag_name><![CDATA[interval tree]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>74</wp:term_id><wp:tag_slug>ioc</wp:tag_slug><wp:tag_name><![CDATA[ioc]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>87</wp:term_id><wp:tag_slug>java</wp:tag_slug><wp:tag_name><![CDATA[java]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>34</wp:term_id><wp:tag_slug>number-theory</wp:tag_slug><wp:tag_name><![CDATA[number theory]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>35</wp:term_id><wp:tag_slug>oracle</wp:tag_slug><wp:tag_name><![CDATA[oracle]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>65</wp:term_id><wp:tag_slug>plsql</wp:tag_slug><wp:tag_name><![CDATA[plsql]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>83</wp:term_id><wp:tag_slug>rails</wp:tag_slug><wp:tag_name><![CDATA[rails]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>36</wp:term_id><wp:tag_slug>redhat</wp:tag_slug><wp:tag_name><![CDATA[redhat]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>82</wp:term_id><wp:tag_slug>ruby</wp:tag_slug><wp:tag_name><![CDATA[ruby]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>37</wp:term_id><wp:tag_slug>silverlight</wp:tag_slug><wp:tag_name><![CDATA[silverlight]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>76</wp:term_id><wp:tag_slug>singapore</wp:tag_slug><wp:tag_name><![CDATA[singapore]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>64</wp:term_id><wp:tag_slug>sql</wp:tag_slug><wp:tag_name><![CDATA[sql]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>38</wp:term_id><wp:tag_slug>sql-server</wp:tag_slug><wp:tag_name><![CDATA[sql server]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>85</wp:term_id><wp:tag_slug>tdd</wp:tag_slug><wp:tag_name><![CDATA[tdd]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>79</wp:term_id><wp:tag_slug>tesing</wp:tag_slug><wp:tag_name><![CDATA[tesing]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>84</wp:term_id><wp:tag_slug>testing</wp:tag_slug><wp:tag_name><![CDATA[testing]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>39</wp:term_id><wp:tag_slug>wcf</wp:tag_slug><wp:tag_name><![CDATA[WCF]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>40</wp:term_id><wp:tag_slug>web-service</wp:tag_slug><wp:tag_name><![CDATA[web service]]></wp:tag_name></wp:tag>
	<wp:term><wp:term_id>52</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug>directorybar</wp:term_slug><wp:term_name><![CDATA[DirectoryBar]]></wp:term_name></wp:term>
	<wp:term><wp:term_id>53</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug>pagemenu</wp:term_slug><wp:term_name><![CDATA[PageMenu]]></wp:term_name></wp:term>

	<generator>http://wordpress.org/?v=3.5.1</generator>

	<item>
		<title>选课效果</title>
		<link>http://allenlsy.com/?attachment_id=42</link>
		<pubDate>Wed, 30 Jun 2010 06:04:34 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/06/1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>42</wp:post_id>
		<wp:post_date>2010-06-30 14:04:34</wp:post_date>
		<wp:post_date_gmt>2010-06-30 06:04:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/06/1.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/06/1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"920";s:6:"height";s:3:"638";s:14:"hwstring_small";s:23:"height='88' width='128'";s:4:"file";s:13:"2010/06/1.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:13:"1-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:13:"1-300x208.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"208";}s:14:"post-thumbnail";a:3:{s:4:"file";s:13:"1-920x288.jpg";s:5:"width";s:3:"920";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:13:"1-920x288.jpg";s:5:"width";s:3:"920";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:13:"1-432x300.jpg";s:5:"width";s:3:"432";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391451]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>选课效果</title>
		<link>http://allenlsy.com/?attachment_id=44</link>
		<pubDate>Wed, 30 Jun 2010 06:13:19 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/06/11.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>44</wp:post_id>
		<wp:post_date>2010-06-30 14:13:19</wp:post_date>
		<wp:post_date_gmt>2010-06-30 06:13:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/06/11.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/06/11.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"920";s:6:"height";s:3:"638";s:14:"hwstring_small";s:23:"height='88' width='128'";s:4:"file";s:14:"2010/06/11.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:14:"11-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:14:"11-300x208.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"208";}s:14:"post-thumbnail";a:3:{s:4:"file";s:14:"11-920x288.jpg";s:5:"width";s:3:"920";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:14:"11-920x288.jpg";s:5:"width";s:3:"920";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:14:"11-432x300.jpg";s:5:"width";s:3:"432";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391452]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>0_1275142171icWU</title>
		<link>http://allenlsy.com/2010/05/5-yue-29-ri-2010-wang-yi-tiao-zhan-sai/0_1275142171icwu/</link>
		<pubDate>Wed, 30 Jun 2010 15:54:57 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/06/0_1275142171icwu.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>87</wp:post_id>
		<wp:post_date>2010-06-30 23:54:57</wp:post_date>
		<wp:post_date_gmt>2010-06-30 15:54:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>0_1275142171icwu</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>85</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/06/0_1275142171icwu.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/06/0_1275142171icwu.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"536";s:6:"height";s:3:"684";s:14:"hwstring_small";s:22:"height='96' width='75'";s:4:"file";s:28:"2010/06/0_1275142171icwu.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:28:"0_1275142171icwu-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:28:"0_1275142171icwu-235x300.jpg";s:5:"width";s:3:"235";s:6:"height";s:3:"300";}s:14:"post-thumbnail";a:3:{s:4:"file";s:28:"0_1275142171icwu-536x288.jpg";s:5:"width";s:3:"536";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:28:"0_1275142171icwu-536x288.jpg";s:5:"width";s:3:"536";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:28:"0_1275142171icwu-235x300.jpg";s:5:"width";s:3:"235";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391466]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>0_12751421763zr3</title>
		<link>http://allenlsy.com/2010/05/5-yue-29-ri-2010-wang-yi-tiao-zhan-sai/0_12751421763zr3/</link>
		<pubDate>Wed, 30 Jun 2010 15:55:45 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/06/0_12751421763zr3.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>88</wp:post_id>
		<wp:post_date>2010-06-30 23:55:45</wp:post_date>
		<wp:post_date_gmt>2010-06-30 15:55:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>0_12751421763zr3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>85</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/06/0_12751421763zr3.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/06/0_12751421763zr3.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"530";s:6:"height";s:3:"686";s:14:"hwstring_small";s:22:"height='96' width='74'";s:4:"file";s:28:"2010/06/0_12751421763zr3.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:28:"0_12751421763zr3-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:28:"0_12751421763zr3-231x300.jpg";s:5:"width";s:3:"231";s:6:"height";s:3:"300";}s:14:"post-thumbnail";a:3:{s:4:"file";s:28:"0_12751421763zr3-530x288.jpg";s:5:"width";s:3:"530";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:28:"0_12751421763zr3-530x288.jpg";s:5:"width";s:3:"530";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:28:"0_12751421763zr3-231x300.jpg";s:5:"width";s:3:"231";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391469]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>0_12751421820F62</title>
		<link>http://allenlsy.com/2010/05/5-yue-29-ri-2010-wang-yi-tiao-zhan-sai/0_12751421820f62/</link>
		<pubDate>Wed, 30 Jun 2010 15:56:18 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/06/0_12751421820f62.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>90</wp:post_id>
		<wp:post_date>2010-06-30 23:56:18</wp:post_date>
		<wp:post_date_gmt>2010-06-30 15:56:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>0_12751421820f62</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>85</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/06/0_12751421820f62.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/06/0_12751421820f62.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"547";s:6:"height";s:3:"699";s:14:"hwstring_small";s:22:"height='96' width='75'";s:4:"file";s:28:"2010/06/0_12751421820f62.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:28:"0_12751421820f62-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:28:"0_12751421820f62-234x300.jpg";s:5:"width";s:3:"234";s:6:"height";s:3:"300";}s:14:"post-thumbnail";a:3:{s:4:"file";s:28:"0_12751421820f62-547x288.jpg";s:5:"width";s:3:"547";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:28:"0_12751421820f62-547x288.jpg";s:5:"width";s:3:"547";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:28:"0_12751421820f62-234x300.jpg";s:5:"width";s:3:"234";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391470]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>0_1275142187b933</title>
		<link>http://allenlsy.com/2010/05/5-yue-29-ri-2010-wang-yi-tiao-zhan-sai/0_1275142187b933/</link>
		<pubDate>Wed, 30 Jun 2010 15:56:54 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/06/0_1275142187b933.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>91</wp:post_id>
		<wp:post_date>2010-06-30 23:56:54</wp:post_date>
		<wp:post_date_gmt>2010-06-30 15:56:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>0_1275142187b933</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>85</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/06/0_1275142187b933.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/06/0_1275142187b933.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"541";s:6:"height";s:3:"619";s:14:"hwstring_small";s:22:"height='96' width='83'";s:4:"file";s:28:"2010/06/0_1275142187b933.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:28:"0_1275142187b933-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:28:"0_1275142187b933-262x300.jpg";s:5:"width";s:3:"262";s:6:"height";s:3:"300";}s:14:"post-thumbnail";a:3:{s:4:"file";s:28:"0_1275142187b933-541x288.jpg";s:5:"width";s:3:"541";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:28:"0_1275142187b933-541x288.jpg";s:5:"width";s:3:"541";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:28:"0_1275142187b933-262x300.jpg";s:5:"width";s:3:"262";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391471]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>3-1-300x39</title>
		<link>http://allenlsy.com/2010/07/zhuan-bo-yi-lun/3-1-300x39/</link>
		<pubDate>Sat, 10 Jul 2010 09:44:52 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/07/3-1-300x39.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>125</wp:post_id>
		<wp:post_date>2010-07-10 17:44:52</wp:post_date>
		<wp:post_date_gmt>2010-07-10 09:44:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>3-1-300x39</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>124</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/07/3-1-300x39.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/07/3-1-300x39.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"300";s:6:"height";s:2:"39";s:14:"hwstring_small";s:23:"height='16' width='128'";s:4:"file";s:22:"2010/07/3-1-300x39.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"3-1-300x39-150x39.jpg";s:5:"width";s:3:"150";s:6:"height";s:2:"39";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391477]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>3-2-300x242</title>
		<link>http://allenlsy.com/2010/07/zhuan-bo-yi-lun/3-2-300x242/</link>
		<pubDate>Sat, 10 Jul 2010 09:45:54 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/07/3-2-300x242.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>126</wp:post_id>
		<wp:post_date>2010-07-10 17:45:54</wp:post_date>
		<wp:post_date_gmt>2010-07-10 09:45:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>3-2-300x242</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>124</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/07/3-2-300x242.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/07/3-2-300x242.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"300";s:6:"height";s:3:"242";s:14:"hwstring_small";s:23:"height='96' width='119'";s:4:"file";s:23:"2010/07/3-2-300x242.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"3-2-300x242-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391478]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-code2.jpg</title>
		<link>http://allenlsy.com/?attachment_id=154</link>
		<pubDate>Sun, 11 Jul 2010 02:58:03 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/07/cropped-code2.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[http://allenlsy.com/wp-content/uploads/2010/07/cropped-code2.jpg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>154</wp:post_id>
		<wp:post_date>2010-07-11 10:58:03</wp:post_date>
		<wp:post_date_gmt>2010-07-11 02:58:03</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cropped-code2-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/07/cropped-code2.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/07/cropped-code2.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:2:"50";s:6:"height";s:2:"50";s:14:"hwstring_small";s:22:"height='50' width='50'";s:4:"file";s:25:"2010/07/cropped-code2.jpg";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391486]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>3</title>
		<link>http://allenlsy.com/2010/07/dai-ma-da-quan-1-chuang-jian-gao-zhi-liang-de-dai-ma/attachment/3/</link>
		<pubDate>Fri, 16 Jul 2010 15:25:55 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/07/3.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>188</wp:post_id>
		<wp:post_date>2010-07-16 23:25:55</wp:post_date>
		<wp:post_date_gmt>2010-07-16 15:25:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>183</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/07/3.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/07/3.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"441";s:6:"height";s:3:"529";s:14:"hwstring_small";s:22:"height='96' width='80'";s:4:"file";s:13:"2010/07/3.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:13:"3-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:13:"3-250x300.jpg";s:5:"width";s:3:"250";s:6:"height";s:3:"300";}s:14:"post-thumbnail";a:3:{s:4:"file";s:13:"3-441x288.jpg";s:5:"width";s:3:"441";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:13:"3-441x288.jpg";s:5:"width";s:3:"441";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:13:"3-250x300.jpg";s:5:"width";s:3:"250";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391492]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1</title>
		<link>http://allenlsy.com/2010/07/dai-ma-da-quan-1-chuang-jian-gao-zhi-liang-de-dai-ma/1-3/</link>
		<pubDate>Fri, 16 Jul 2010 15:31:56 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/07/1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>189</wp:post_id>
		<wp:post_date>2010-07-16 23:31:56</wp:post_date>
		<wp:post_date_gmt>2010-07-16 15:31:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1-3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>183</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/07/1.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/07/1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"699";s:6:"height";s:3:"437";s:14:"hwstring_small";s:23:"height='80' width='128'";s:4:"file";s:13:"2010/07/1.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:13:"1-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:13:"1-300x187.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"187";}s:14:"post-thumbnail";a:3:{s:4:"file";s:13:"1-699x288.jpg";s:5:"width";s:3:"699";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:13:"1-699x288.jpg";s:5:"width";s:3:"699";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:13:"1-479x300.jpg";s:5:"width";s:3:"479";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391493]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2</title>
		<link>http://allenlsy.com/2010/07/dai-ma-da-quan-1-chuang-jian-gao-zhi-liang-de-dai-ma/attachment/2/</link>
		<pubDate>Fri, 16 Jul 2010 15:33:01 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/07/2.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>190</wp:post_id>
		<wp:post_date>2010-07-16 23:33:01</wp:post_date>
		<wp:post_date_gmt>2010-07-16 15:33:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>183</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/07/2.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/07/2.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"707";s:6:"height";s:3:"364";s:14:"hwstring_small";s:23:"height='65' width='128'";s:4:"file";s:13:"2010/07/2.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:13:"2-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:13:"2-300x154.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"154";}s:14:"post-thumbnail";a:3:{s:4:"file";s:13:"2-707x288.jpg";s:5:"width";s:3:"707";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:13:"2-707x288.jpg";s:5:"width";s:3:"707";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:13:"2-500x257.jpg";s:5:"width";s:3:"500";s:6:"height";s:3:"257";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391494]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>4</title>
		<link>http://allenlsy.com/2010/07/dai-ma-da-quan-1-chuang-jian-gao-zhi-liang-de-dai-ma/attachment/4/</link>
		<pubDate>Fri, 16 Jul 2010 15:34:24 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/07/4.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>191</wp:post_id>
		<wp:post_date>2010-07-16 23:34:24</wp:post_date>
		<wp:post_date_gmt>2010-07-16 15:34:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>4</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>183</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/07/4.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/07/4.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"680";s:6:"height";s:3:"356";s:14:"hwstring_small";s:23:"height='67' width='128'";s:4:"file";s:13:"2010/07/4.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:13:"4-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:13:"4-300x157.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"157";}s:14:"post-thumbnail";a:3:{s:4:"file";s:13:"4-680x288.jpg";s:5:"width";s:3:"680";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:13:"4-680x288.jpg";s:5:"width";s:3:"680";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:13:"4-500x261.jpg";s:5:"width";s:3:"500";s:6:"height";s:3:"261";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391496]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1</title>
		<link>http://allenlsy.com/2010/07/dai-ma-da-quan-2-chuang-jian-gao-zhi-liang-de-dai-ma/1-4/</link>
		<pubDate>Sat, 17 Jul 2010 02:37:11 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/07/11.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>194</wp:post_id>
		<wp:post_date>2010-07-17 10:37:11</wp:post_date>
		<wp:post_date_gmt>2010-07-17 02:37:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1-4</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>193</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/07/11.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/07/11.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"432";s:6:"height";s:3:"414";s:14:"hwstring_small";s:23:"height='96' width='100'";s:4:"file";s:14:"2010/07/11.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:14:"11-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:14:"11-300x287.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"287";}s:14:"post-thumbnail";a:3:{s:4:"file";s:14:"11-432x288.jpg";s:5:"width";s:3:"432";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:14:"11-432x288.jpg";s:5:"width";s:3:"432";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:14:"11-313x300.jpg";s:5:"width";s:3:"313";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391498]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2</title>
		<link>http://allenlsy.com/2010/07/dai-ma-da-quan-2-chuang-jian-gao-zhi-liang-de-dai-ma/2-2/</link>
		<pubDate>Sat, 17 Jul 2010 02:38:15 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/07/21.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>195</wp:post_id>
		<wp:post_date>2010-07-17 10:38:15</wp:post_date>
		<wp:post_date_gmt>2010-07-17 02:38:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>193</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/07/21.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/07/21.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"389";s:6:"height";s:3:"397";s:14:"hwstring_small";s:22:"height='96' width='94'";s:4:"file";s:14:"2010/07/21.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:14:"21-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:14:"21-293x300.jpg";s:5:"width";s:3:"293";s:6:"height";s:3:"300";}s:14:"post-thumbnail";a:3:{s:4:"file";s:14:"21-389x288.jpg";s:5:"width";s:3:"389";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:14:"21-389x288.jpg";s:5:"width";s:3:"389";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:14:"21-293x300.jpg";s:5:"width";s:3:"293";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391499]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1</title>
		<link>http://allenlsy.com/2010/07/CG1-Polygon-Triangulation-duo-bian-xing-fen-ge/1-5/</link>
		<pubDate>Sat, 24 Jul 2010 02:31:59 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/07/12.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>200</wp:post_id>
		<wp:post_date>2010-07-24 10:31:59</wp:post_date>
		<wp:post_date_gmt>2010-07-24 02:31:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1-5</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>199</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/07/12.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/07/12.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"476";s:6:"height";s:3:"256";s:14:"hwstring_small";s:23:"height='68' width='128'";s:4:"file";s:14:"2010/07/12.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:14:"12-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:14:"12-300x161.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"161";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391501]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2</title>
		<link>http://allenlsy.com/2010/07/CG1-Polygon-Triangulation-duo-bian-xing-fen-ge/2-3/</link>
		<pubDate>Sat, 24 Jul 2010 02:33:11 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/07/22.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>201</wp:post_id>
		<wp:post_date>2010-07-24 10:33:11</wp:post_date>
		<wp:post_date_gmt>2010-07-24 02:33:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2-3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>199</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/07/22.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/07/22.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"672";s:6:"height";s:3:"335";s:14:"hwstring_small";s:23:"height='63' width='128'";s:4:"file";s:14:"2010/07/22.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:14:"22-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:14:"22-300x149.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"149";}s:14:"post-thumbnail";a:3:{s:4:"file";s:14:"22-672x288.jpg";s:5:"width";s:3:"672";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:14:"22-672x288.jpg";s:5:"width";s:3:"672";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:14:"22-500x249.jpg";s:5:"width";s:3:"500";s:6:"height";s:3:"249";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391502]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>3</title>
		<link>http://allenlsy.com/2010/07/CG1-Polygon-Triangulation-duo-bian-xing-fen-ge/3-2/</link>
		<pubDate>Sat, 24 Jul 2010 02:34:34 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/07/31.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>202</wp:post_id>
		<wp:post_date>2010-07-24 10:34:34</wp:post_date>
		<wp:post_date_gmt>2010-07-24 02:34:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>3-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>199</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/07/31.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/07/31.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"680";s:6:"height";s:3:"284";s:14:"hwstring_small";s:23:"height='53' width='128'";s:4:"file";s:14:"2010/07/31.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:14:"31-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:14:"31-300x125.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"125";}s:13:"small-feature";a:3:{s:4:"file";s:14:"31-500x208.jpg";s:5:"width";s:3:"500";s:6:"height";s:3:"208";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391503]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0756_Chap8Ellipt14.png</title>
		<link>http://allenlsy.com/?attachment_id=614</link>
		<pubDate>Fri, 26 Nov 2010 07:57:13 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/1q/112610_0756_chap8ellipt14.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>614</wp:post_id>
		<wp:post_date>0000-00-00 00:00:00</wp:post_date>
		<wp:post_date_gmt>2010-11-26 07:57:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0756_chap8ellipt14-png-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/1q/112610_0756_chap8ellipt14.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/1q/112610_0756_chap8ellipt14.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"393";s:6:"height";s:3:"278";s:14:"hwstring_small";s:23:"height='90' width='128'";s:4:"file";s:37:"2010/1q/112610_0756_chap8ellipt14.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"112610_0756_chap8ellipt14-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:37:"112610_0756_chap8ellipt14-300x212.png";s:5:"width";s:3:"300";s:6:"height";s:3:"212";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391670]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0756_Chap8Ellipt16.png</title>
		<link>http://allenlsy.com/?attachment_id=615</link>
		<pubDate>Fri, 26 Nov 2010 07:57:24 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt161.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>615</wp:post_id>
		<wp:post_date>0000-00-00 00:00:00</wp:post_date>
		<wp:post_date_gmt>2010-11-26 07:57:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0756_chap8ellipt16-png-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt161.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0756_chap8ellipt161.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"445";s:6:"height";s:3:"227";s:14:"hwstring_small";s:23:"height='65' width='128'";s:4:"file";s:38:"2010/11/112610_0756_chap8ellipt161.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:38:"112610_0756_chap8ellipt161-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:38:"112610_0756_chap8ellipt161-300x153.png";s:5:"width";s:3:"300";s:6:"height";s:3:"153";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391671]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>4</title>
		<link>http://allenlsy.com/2010/07/CG1-Polygon-Triangulation-duo-bian-xing-fen-ge/4-2/</link>
		<pubDate>Sat, 24 Jul 2010 02:35:15 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/07/41.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>203</wp:post_id>
		<wp:post_date>2010-07-24 10:35:15</wp:post_date>
		<wp:post_date_gmt>2010-07-24 02:35:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>4-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>199</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/07/41.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/07/41.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"657";s:6:"height";s:3:"398";s:14:"hwstring_small";s:23:"height='77' width='128'";s:4:"file";s:14:"2010/07/41.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:14:"41-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:14:"41-300x181.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"181";}s:14:"post-thumbnail";a:3:{s:4:"file";s:14:"41-657x288.jpg";s:5:"width";s:3:"657";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:14:"41-657x288.jpg";s:5:"width";s:3:"657";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:14:"41-495x300.jpg";s:5:"width";s:3:"495";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391504]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>5</title>
		<link>http://allenlsy.com/2010/07/CG1-Polygon-Triangulation-duo-bian-xing-fen-ge/attachment/5/</link>
		<pubDate>Sat, 24 Jul 2010 02:36:06 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/07/5.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>204</wp:post_id>
		<wp:post_date>2010-07-24 10:36:06</wp:post_date>
		<wp:post_date_gmt>2010-07-24 02:36:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>5</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>199</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/07/5.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/07/5.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"679";s:6:"height";s:3:"411";s:14:"hwstring_small";s:23:"height='77' width='128'";s:4:"file";s:13:"2010/07/5.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:13:"5-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:13:"5-300x181.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"181";}s:14:"post-thumbnail";a:3:{s:4:"file";s:13:"5-679x288.jpg";s:5:"width";s:3:"679";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:13:"5-679x288.jpg";s:5:"width";s:3:"679";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:13:"5-495x300.jpg";s:5:"width";s:3:"495";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391505]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>6</title>
		<link>http://allenlsy.com/2010/07/CG1-Polygon-Triangulation-duo-bian-xing-fen-ge/attachment/6/</link>
		<pubDate>Sat, 24 Jul 2010 02:36:52 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/07/6.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>205</wp:post_id>
		<wp:post_date>2010-07-24 10:36:52</wp:post_date>
		<wp:post_date_gmt>2010-07-24 02:36:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>6</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>199</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/07/6.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/07/6.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"383";s:6:"height";s:3:"239";s:14:"hwstring_small";s:23:"height='79' width='128'";s:4:"file";s:13:"2010/07/6.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:13:"6-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:13:"6-300x187.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"187";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391506]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>7</title>
		<link>http://allenlsy.com/2010/07/CG1-Polygon-Triangulation-duo-bian-xing-fen-ge/attachment/7/</link>
		<pubDate>Sat, 24 Jul 2010 02:37:59 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/07/7.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>206</wp:post_id>
		<wp:post_date>2010-07-24 10:37:59</wp:post_date>
		<wp:post_date_gmt>2010-07-24 02:37:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>7</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>199</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/07/7.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/07/7.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"667";s:6:"height";s:3:"540";s:14:"hwstring_small";s:23:"height='96' width='118'";s:4:"file";s:13:"2010/07/7.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:13:"7-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:13:"7-300x242.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"242";}s:14:"post-thumbnail";a:3:{s:4:"file";s:13:"7-667x288.jpg";s:5:"width";s:3:"667";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:13:"7-667x288.jpg";s:5:"width";s:3:"667";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:13:"7-370x300.jpg";s:5:"width";s:3:"370";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391507]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>8</title>
		<link>http://allenlsy.com/2010/07/CG1-Polygon-Triangulation-duo-bian-xing-fen-ge/attachment/8/</link>
		<pubDate>Sat, 24 Jul 2010 02:38:40 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/07/8.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>207</wp:post_id>
		<wp:post_date>2010-07-24 10:38:40</wp:post_date>
		<wp:post_date_gmt>2010-07-24 02:38:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>8</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>199</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/07/8.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/07/8.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"659";s:6:"height";s:3:"284";s:14:"hwstring_small";s:23:"height='55' width='128'";s:4:"file";s:13:"2010/07/8.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:13:"8-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:13:"8-300x129.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"129";}s:13:"small-feature";a:3:{s:4:"file";s:13:"8-500x215.jpg";s:5:"width";s:3:"500";s:6:"height";s:3:"215";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391508]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1</title>
		<link>http://allenlsy.com/2010/08/Convex-Hulls-in-Two-Dimension-1-er-wei-tu-bao/1-6/</link>
		<pubDate>Mon, 09 Aug 2010 07:46:45 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/08/1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>215</wp:post_id>
		<wp:post_date>2010-08-09 15:46:45</wp:post_date>
		<wp:post_date_gmt>2010-08-09 07:46:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1-6</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>214</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/08/1.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"317";s:6:"height";s:3:"188";s:14:"hwstring_small";s:23:"height='75' width='128'";s:4:"file";s:13:"2010/08/1.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:13:"1-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:13:"1-300x177.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"177";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391512]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2</title>
		<link>http://allenlsy.com/2010/08/Convex-Hulls-in-Two-Dimension-1-er-wei-tu-bao/2-4/</link>
		<pubDate>Mon, 09 Aug 2010 07:46:58 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/08/2.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>216</wp:post_id>
		<wp:post_date>2010-08-09 15:46:58</wp:post_date>
		<wp:post_date_gmt>2010-08-09 07:46:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2-4</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>214</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/08/2.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/2.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"357";s:6:"height";s:3:"164";s:14:"hwstring_small";s:23:"height='58' width='128'";s:4:"file";s:13:"2010/08/2.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:13:"2-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:13:"2-300x137.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"137";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391513]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>3</title>
		<link>http://allenlsy.com/2010/08/Convex-Hulls-in-Two-Dimension-1-er-wei-tu-bao/3-3/</link>
		<pubDate>Mon, 09 Aug 2010 07:47:07 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/08/3.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>217</wp:post_id>
		<wp:post_date>2010-08-09 15:47:07</wp:post_date>
		<wp:post_date_gmt>2010-08-09 07:47:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>3-3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>214</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/08/3.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/3.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"606";s:6:"height";s:3:"263";s:14:"hwstring_small";s:23:"height='55' width='128'";s:4:"file";s:13:"2010/08/3.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:13:"3-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:13:"3-300x130.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"130";}s:13:"small-feature";a:3:{s:4:"file";s:13:"3-500x216.jpg";s:5:"width";s:3:"500";s:6:"height";s:3:"216";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391514]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>4</title>
		<link>http://allenlsy.com/2010/08/Convex-Hulls-in-Two-Dimension-1-er-wei-tu-bao/4-3/</link>
		<pubDate>Mon, 09 Aug 2010 07:47:14 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/08/4.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>218</wp:post_id>
		<wp:post_date>2010-08-09 15:47:14</wp:post_date>
		<wp:post_date_gmt>2010-08-09 07:47:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>4-3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>214</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/08/4.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/4.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"560";s:6:"height";s:3:"255";s:14:"hwstring_small";s:23:"height='58' width='128'";s:4:"file";s:13:"2010/08/4.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:13:"4-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:13:"4-300x136.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"136";}s:13:"small-feature";a:3:{s:4:"file";s:13:"4-500x227.jpg";s:5:"width";s:3:"500";s:6:"height";s:3:"227";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391515]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>5</title>
		<link>http://allenlsy.com/2010/08/Convex-Hulls-in-Two-Dimension-1-er-wei-tu-bao/5-2/</link>
		<pubDate>Mon, 09 Aug 2010 07:47:30 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/08/5.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>219</wp:post_id>
		<wp:post_date>2010-08-09 15:47:30</wp:post_date>
		<wp:post_date_gmt>2010-08-09 07:47:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>5-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>214</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/08/5.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/5.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"521";s:6:"height";s:3:"210";s:14:"hwstring_small";s:23:"height='51' width='128'";s:4:"file";s:13:"2010/08/5.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:13:"5-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:13:"5-300x120.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"120";}s:13:"small-feature";a:3:{s:4:"file";s:13:"5-500x201.jpg";s:5:"width";s:3:"500";s:6:"height";s:3:"201";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391518]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>6</title>
		<link>http://allenlsy.com/2010/08/Convex-Hulls-in-Two-Dimension-1-er-wei-tu-bao/6-2/</link>
		<pubDate>Mon, 09 Aug 2010 07:47:38 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/08/6.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>220</wp:post_id>
		<wp:post_date>2010-08-09 15:47:38</wp:post_date>
		<wp:post_date_gmt>2010-08-09 07:47:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>6-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>214</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/08/6.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/6.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"383";s:6:"height";s:3:"239";s:14:"hwstring_small";s:23:"height='79' width='128'";s:4:"file";s:13:"2010/08/6.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:13:"6-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:13:"6-300x187.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"187";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391519]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>7</title>
		<link>http://allenlsy.com/2010/08/Convex-Hulls-in-Two-Dimension-1-er-wei-tu-bao/7-2/</link>
		<pubDate>Mon, 09 Aug 2010 07:47:49 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/08/7.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>221</wp:post_id>
		<wp:post_date>2010-08-09 15:47:49</wp:post_date>
		<wp:post_date_gmt>2010-08-09 07:47:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>7-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>214</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/08/7.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/7.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"611";s:6:"height";s:3:"421";s:14:"hwstring_small";s:23:"height='88' width='128'";s:4:"file";s:13:"2010/08/7.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:13:"7-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:13:"7-300x206.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"206";}s:14:"post-thumbnail";a:3:{s:4:"file";s:13:"7-611x288.jpg";s:5:"width";s:3:"611";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:13:"7-611x288.jpg";s:5:"width";s:3:"611";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:13:"7-435x300.jpg";s:5:"width";s:3:"435";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391520]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>8</title>
		<link>http://allenlsy.com/2010/08/Convex-Hulls-in-Two-Dimension-1-er-wei-tu-bao/8-2/</link>
		<pubDate>Mon, 09 Aug 2010 07:48:01 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/08/8.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>222</wp:post_id>
		<wp:post_date>2010-08-09 15:48:01</wp:post_date>
		<wp:post_date_gmt>2010-08-09 07:48:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>8-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>214</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/08/8.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/8.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"675";s:6:"height";s:3:"411";s:14:"hwstring_small";s:23:"height='77' width='128'";s:4:"file";s:13:"2010/08/8.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:13:"8-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:13:"8-300x182.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"182";}s:14:"post-thumbnail";a:3:{s:4:"file";s:13:"8-675x288.jpg";s:5:"width";s:3:"675";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:13:"8-675x288.jpg";s:5:"width";s:3:"675";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:13:"8-492x300.jpg";s:5:"width";s:3:"492";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391521]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>9</title>
		<link>http://allenlsy.com/2010/08/Convex-Hulls-in-Two-Dimension-1-er-wei-tu-bao/attachment/9/</link>
		<pubDate>Mon, 09 Aug 2010 07:48:11 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/08/9.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>223</wp:post_id>
		<wp:post_date>2010-08-09 15:48:11</wp:post_date>
		<wp:post_date_gmt>2010-08-09 07:48:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>9</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>214</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/08/9.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/9.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"349";s:6:"height";s:3:"255";s:14:"hwstring_small";s:23:"height='93' width='128'";s:4:"file";s:13:"2010/08/9.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:13:"9-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:13:"9-300x219.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"219";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391522]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>10</title>
		<link>http://allenlsy.com/2010/08/Convex-Hulls-in-Two-Dimension-1-er-wei-tu-bao/attachment/10/</link>
		<pubDate>Thu, 12 Jul 2012 01:29:48 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/08/10.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>224</wp:post_id>
		<wp:post_date>2010-08-09 15:48:20</wp:post_date>
		<wp:post_date_gmt>2012-07-12 01:29:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>10</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>214</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/08/10.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/10.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"324";s:6:"height";s:3:"110";s:14:"hwstring_small";s:23:"height='43' width='128'";s:4:"file";s:14:"2010/08/10.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:14:"10-150x110.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"110";}s:6:"medium";a:3:{s:4:"file";s:14:"10-300x101.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"101";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391523]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>11</title>
		<link>http://allenlsy.com/2010/08/Convex-Hulls-in-Two-Dimension-1-er-wei-tu-bao/attachment/11/</link>
		<pubDate>Mon, 09 Aug 2010 07:48:29 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/08/11.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[<![CDTA[]]]]><![CDATA[>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>225</wp:post_id>
		<wp:post_date>2010-08-09 15:48:29</wp:post_date>
		<wp:post_date_gmt>2010-08-09 07:48:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>11</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>214</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/08/11.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/11.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"680";s:6:"height";s:3:"376";s:14:"hwstring_small";s:23:"height='70' width='128'";s:4:"file";s:14:"2010/08/11.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:14:"11-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:14:"11-300x165.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"165";}s:14:"post-thumbnail";a:3:{s:4:"file";s:14:"11-680x288.jpg";s:5:"width";s:3:"680";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:14:"11-680x288.jpg";s:5:"width";s:3:"680";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:14:"11-500x276.jpg";s:5:"width";s:3:"500";s:6:"height";s:3:"276";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391524]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>12</title>
		<link>http://allenlsy.com/2010/08/Convex-Hulls-in-Two-Dimension-1-er-wei-tu-bao/attachment/12/</link>
		<pubDate>Mon, 09 Aug 2010 07:48:38 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/08/12.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>226</wp:post_id>
		<wp:post_date>2010-08-09 15:48:38</wp:post_date>
		<wp:post_date_gmt>2010-08-09 07:48:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>12</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>214</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/08/12.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/12.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"426";s:6:"height";s:3:"127";s:14:"hwstring_small";s:23:"height='38' width='128'";s:4:"file";s:14:"2010/08/12.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:14:"12-150x127.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"127";}s:6:"medium";a:3:{s:4:"file";s:13:"12-300x89.jpg";s:5:"width";s:3:"300";s:6:"height";s:2:"89";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391525]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1</title>
		<link>http://allenlsy.com/2010/08/zhuan-li-zhi-ru-he-cheng-wei-acm-niu-ren/1-7/</link>
		<pubDate>Fri, 27 Aug 2010 02:04:50 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/08/13.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>236</wp:post_id>
		<wp:post_date>2010-08-27 10:04:50</wp:post_date>
		<wp:post_date_gmt>2010-08-27 02:04:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1-7</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>235</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/08/13.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/13.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"825";s:6:"height";s:3:"562";s:14:"hwstring_small";s:23:"height='87' width='128'";s:4:"file";s:14:"2010/08/13.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:14:"13-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:14:"13-300x204.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"204";}s:14:"post-thumbnail";a:3:{s:4:"file";s:14:"13-825x288.jpg";s:5:"width";s:3:"825";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:14:"13-825x288.jpg";s:5:"width";s:3:"825";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:14:"13-440x300.jpg";s:5:"width";s:3:"440";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391528]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2</title>
		<link>http://allenlsy.com/2010/08/zhuan-li-zhi-ru-he-cheng-wei-acm-niu-ren/2-5/</link>
		<pubDate>Fri, 27 Aug 2010 02:09:19 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/08/21.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>237</wp:post_id>
		<wp:post_date>2010-08-27 10:09:19</wp:post_date>
		<wp:post_date_gmt>2010-08-27 02:09:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2-5</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>235</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/08/21.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/08/21.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"837";s:6:"height";s:3:"630";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:14:"2010/08/21.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:14:"21-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:14:"21-300x225.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}s:14:"post-thumbnail";a:3:{s:4:"file";s:14:"21-837x288.jpg";s:5:"width";s:3:"837";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:14:"21-837x288.jpg";s:5:"width";s:3:"837";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:14:"21-398x300.jpg";s:5:"width";s:3:"398";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391529]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Untitled</title>
		<link>http://allenlsy.com/2010/09/POJ-2828/untitled/</link>
		<pubDate>Wed, 08 Sep 2010 09:05:33 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/09/untitled.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>261</wp:post_id>
		<wp:post_date>2010-09-08 17:05:33</wp:post_date>
		<wp:post_date_gmt>2010-09-08 09:05:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>untitled</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>260</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/09/untitled.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/09/untitled.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"478";s:6:"height";s:3:"296";s:14:"hwstring_small";s:23:"height='79' width='128'";s:4:"file";s:20:"2010/09/untitled.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"untitled-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"untitled-300x185.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"185";}s:14:"post-thumbnail";a:3:{s:4:"file";s:20:"untitled-478x288.jpg";s:5:"width";s:3:"478";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:20:"untitled-478x288.jpg";s:5:"width";s:3:"478";s:6:"height";s:3:"288";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391538]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1_thumb.jpg</title>
		<link>http://allenlsy.com/2010/09/jin-ri-de-gan-xiang-amp-shu-zhuang-shu-zu-xiao-jie/1_thumb-jpg-3/</link>
		<pubDate>Thu, 23 Sep 2010 15:17:12 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/09/1_thumb2.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>308</wp:post_id>
		<wp:post_date>2010-09-23 23:17:12</wp:post_date>
		<wp:post_date_gmt>2010-09-23 15:17:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1_thumb-jpg-3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>295</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/09/1_thumb2.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/09/1_thumb2.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"644";s:6:"height";s:3:"484";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:20:"2010/09/1_thumb2.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"1_thumb2-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"1_thumb2-300x225.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}s:14:"post-thumbnail";a:3:{s:4:"file";s:20:"1_thumb2-644x288.jpg";s:5:"width";s:3:"644";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:20:"1_thumb2-644x288.jpg";s:5:"width";s:3:"644";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:20:"1_thumb2-399x300.jpg";s:5:"width";s:3:"399";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391542]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>albumEvanescenceFallen_thumb.jpg</title>
		<link>http://allenlsy.com/?attachment_id=316</link>
		<pubDate>Fri, 24 Sep 2010 05:49:26 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/09/albumevanescencefallen_thumb.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>316</wp:post_id>
		<wp:post_date>2010-09-24 13:49:26</wp:post_date>
		<wp:post_date_gmt>2010-09-24 05:49:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>albumevanescencefallen_thumb-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/09/albumevanescencefallen_thumb.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/09/albumevanescencefallen_thumb.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"244";s:6:"height";s:3:"244";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:40:"2010/09/albumevanescencefallen_thumb.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:40:"albumevanescencefallen_thumb-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391543]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>test.jpg</title>
		<link>http://allenlsy.com/2010/09/POJ-2750/test-jpg/</link>
		<pubDate>Fri, 24 Sep 2010 08:21:01 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/09/test.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>322</wp:post_id>
		<wp:post_date>2010-09-24 16:21:01</wp:post_date>
		<wp:post_date_gmt>2010-09-24 08:21:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>test-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>324</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/09/test.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/09/test.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"574";s:6:"height";s:3:"360";s:14:"hwstring_small";s:23:"height='80' width='128'";s:4:"file";s:16:"2010/09/test.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:16:"test-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:16:"test-300x188.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"188";}s:14:"post-thumbnail";a:3:{s:4:"file";s:16:"test-574x288.jpg";s:5:"width";s:3:"574";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:16:"test-574x288.jpg";s:5:"width";s:3:"574";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:16:"test-478x300.jpg";s:5:"width";s:3:"478";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391545]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>test_thumb.jpg</title>
		<link>http://allenlsy.com/2010/09/POJ-2750/test_thumb-jpg/</link>
		<pubDate>Fri, 24 Sep 2010 08:21:04 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/09/test_thumb.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>323</wp:post_id>
		<wp:post_date>2010-09-24 16:21:04</wp:post_date>
		<wp:post_date_gmt>2010-09-24 08:21:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>test_thumb-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>324</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/09/test_thumb.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/09/test_thumb.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"578";s:6:"height";s:3:"364";s:14:"hwstring_small";s:23:"height='80' width='128'";s:4:"file";s:22:"2010/09/test_thumb.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"test_thumb-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:22:"test_thumb-300x188.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"188";}s:14:"post-thumbnail";a:3:{s:4:"file";s:22:"test_thumb-578x288.jpg";s:5:"width";s:3:"578";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:22:"test_thumb-578x288.jpg";s:5:"width";s:3:"578";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:22:"test_thumb-476x300.jpg";s:5:"width";s:3:"476";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391546]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>bg-banner-math_resize_resize.jpg</title>
		<link>http://allenlsy.com/?attachment_id=335</link>
		<pubDate>Sun, 26 Sep 2010 07:01:56 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/09/bg-banner-math_resize_resize.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[http://allenlsy.com/wp-content/uploads/2010/09/bg-banner-math_resize_resize.jpg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>335</wp:post_id>
		<wp:post_date>2010-09-26 15:01:56</wp:post_date>
		<wp:post_date_gmt>2010-09-26 07:01:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bg-banner-math_resize_resize-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/09/bg-banner-math_resize_resize.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/09/bg-banner-math_resize_resize.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"960";s:6:"height";s:2:"80";s:14:"hwstring_small";s:23:"height='10' width='128'";s:4:"file";s:40:"2010/09/bg-banner-math_resize_resize.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:39:"bg-banner-math_resize_resize-150x80.jpg";s:5:"width";s:3:"150";s:6:"height";s:2:"80";}s:6:"medium";a:3:{s:4:"file";s:39:"bg-banner-math_resize_resize-300x25.jpg";s:5:"width";s:3:"300";s:6:"height";s:2:"25";}s:13:"small-feature";a:3:{s:4:"file";s:39:"bg-banner-math_resize_resize-500x41.jpg";s:5:"width";s:3:"500";s:6:"height";s:2:"41";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391552]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>bg-banner-math_resize_resize1.jpg</title>
		<link>http://allenlsy.com/?attachment_id=336</link>
		<pubDate>Sun, 26 Sep 2010 07:02:55 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/09/bg-banner-math_resize_resize1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[http://allenlsy.com/wp-content/uploads/2010/09/bg-banner-math_resize_resize1.jpg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>336</wp:post_id>
		<wp:post_date>2010-09-26 15:02:55</wp:post_date>
		<wp:post_date_gmt>2010-09-26 07:02:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bg-banner-math_resize_resize1-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/09/bg-banner-math_resize_resize1.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/09/bg-banner-math_resize_resize1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"960";s:6:"height";s:3:"100";s:14:"hwstring_small";s:23:"height='13' width='128'";s:4:"file";s:41:"2010/09/bg-banner-math_resize_resize1.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:41:"bg-banner-math_resize_resize1-150x100.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"100";}s:6:"medium";a:3:{s:4:"file";s:40:"bg-banner-math_resize_resize1-300x31.jpg";s:5:"width";s:3:"300";s:6:"height";s:2:"31";}s:13:"small-feature";a:3:{s:4:"file";s:40:"bg-banner-math_resize_resize1-500x52.jpg";s:5:"width";s:3:"500";s:6:"height";s:2:"52";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391553]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1.jpg</title>
		<link>http://allenlsy.com/2010/10/rang-ji-suan-ji-lang-du-dian-zi-shu/1-jpg/</link>
		<pubDate>Fri, 01 Oct 2010 12:05:27 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/10/1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>384</wp:post_id>
		<wp:post_date>2010-10-01 20:05:27</wp:post_date>
		<wp:post_date_gmt>2010-10-01 12:05:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>394</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/10/1.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/10/1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"640";s:6:"height";s:3:"374";s:14:"hwstring_small";s:23:"height='74' width='128'";s:4:"file";s:13:"2010/10/1.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:13:"1-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:13:"1-300x175.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"175";}s:14:"post-thumbnail";a:3:{s:4:"file";s:13:"1-640x288.jpg";s:5:"width";s:3:"640";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:13:"1-640x288.jpg";s:5:"width";s:3:"640";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:13:"1-500x292.jpg";s:5:"width";s:3:"500";s:6:"height";s:3:"292";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391554]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1_thumb.jpg</title>
		<link>http://allenlsy.com/2010/10/rang-ji-suan-ji-lang-du-dian-zi-shu/1_thumb-jpg/</link>
		<pubDate>Fri, 01 Oct 2010 12:05:30 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/10/1_thumb.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>385</wp:post_id>
		<wp:post_date>2010-10-01 20:05:30</wp:post_date>
		<wp:post_date_gmt>2010-10-01 12:05:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1_thumb-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>394</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/10/1_thumb.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/10/1_thumb.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"644";s:6:"height";s:3:"378";s:14:"hwstring_small";s:23:"height='75' width='128'";s:4:"file";s:19:"2010/10/1_thumb.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"1_thumb-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:19:"1_thumb-300x176.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"176";}s:14:"post-thumbnail";a:3:{s:4:"file";s:19:"1_thumb-644x288.jpg";s:5:"width";s:3:"644";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:19:"1_thumb-644x288.jpg";s:5:"width";s:3:"644";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:19:"1_thumb-500x293.jpg";s:5:"width";s:3:"500";s:6:"height";s:3:"293";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391555]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2.jpg</title>
		<link>http://allenlsy.com/2010/10/rang-ji-suan-ji-lang-du-dian-zi-shu/2-jpg/</link>
		<pubDate>Fri, 01 Oct 2010 12:05:32 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/10/2.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>386</wp:post_id>
		<wp:post_date>2010-10-01 20:05:32</wp:post_date>
		<wp:post_date_gmt>2010-10-01 12:05:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>394</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/10/2.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/10/2.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"470";s:6:"height";s:3:"230";s:14:"hwstring_small";s:23:"height='62' width='128'";s:4:"file";s:13:"2010/10/2.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:13:"2-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:13:"2-300x146.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"146";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391556]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2_thumb.jpg</title>
		<link>http://allenlsy.com/2010/10/rang-ji-suan-ji-lang-du-dian-zi-shu/2_thumb-jpg/</link>
		<pubDate>Fri, 01 Oct 2010 12:05:35 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/10/2_thumb.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>387</wp:post_id>
		<wp:post_date>2010-10-01 20:05:35</wp:post_date>
		<wp:post_date_gmt>2010-10-01 12:05:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2_thumb-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>394</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/10/2_thumb.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/10/2_thumb.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"474";s:6:"height";s:3:"234";s:14:"hwstring_small";s:23:"height='63' width='128'";s:4:"file";s:19:"2010/10/2_thumb.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"2_thumb-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:19:"2_thumb-300x148.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"148";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391557]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>3.jpg</title>
		<link>http://allenlsy.com/2010/10/rang-ji-suan-ji-lang-du-dian-zi-shu/3-jpg/</link>
		<pubDate>Fri, 01 Oct 2010 12:05:37 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/10/3.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>388</wp:post_id>
		<wp:post_date>2010-10-01 20:05:37</wp:post_date>
		<wp:post_date_gmt>2010-10-01 12:05:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>3-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>394</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/10/3.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/10/3.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"136";s:6:"height";s:3:"119";s:14:"hwstring_small";s:23:"height='96' width='109'";s:4:"file";s:13:"2010/10/3.jpg";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391558]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>3_thumb.jpg</title>
		<link>http://allenlsy.com/2010/10/rang-ji-suan-ji-lang-du-dian-zi-shu/3_thumb-jpg/</link>
		<pubDate>Fri, 01 Oct 2010 12:05:39 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/10/3_thumb.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>389</wp:post_id>
		<wp:post_date>2010-10-01 20:05:39</wp:post_date>
		<wp:post_date_gmt>2010-10-01 12:05:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>3_thumb-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>394</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/10/3_thumb.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/10/3_thumb.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"140";s:6:"height";s:3:"123";s:14:"hwstring_small";s:23:"height='96' width='109'";s:4:"file";s:19:"2010/10/3_thumb.jpg";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391559]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>4.jpg</title>
		<link>http://allenlsy.com/2010/10/rang-ji-suan-ji-lang-du-dian-zi-shu/4-jpg/</link>
		<pubDate>Fri, 01 Oct 2010 12:05:44 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/10/4.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>390</wp:post_id>
		<wp:post_date>2010-10-01 20:05:44</wp:post_date>
		<wp:post_date_gmt>2010-10-01 12:05:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>4-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>394</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/10/4.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/10/4.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"291";s:6:"height";s:3:"148";s:14:"hwstring_small";s:23:"height='65' width='128'";s:4:"file";s:13:"2010/10/4.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:13:"4-150x148.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"148";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391560]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>4_thumb.jpg</title>
		<link>http://allenlsy.com/2010/10/rang-ji-suan-ji-lang-du-dian-zi-shu/4_thumb-jpg/</link>
		<pubDate>Fri, 01 Oct 2010 12:05:46 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/10/4_thumb.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>391</wp:post_id>
		<wp:post_date>2010-10-01 20:05:46</wp:post_date>
		<wp:post_date_gmt>2010-10-01 12:05:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>4_thumb-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>394</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/10/4_thumb.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/10/4_thumb.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"244";s:6:"height";s:3:"126";s:14:"hwstring_small";s:23:"height='66' width='128'";s:4:"file";s:19:"2010/10/4_thumb.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"4_thumb-150x126.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"126";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391562]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>5.jpg</title>
		<link>http://allenlsy.com/2010/10/rang-ji-suan-ji-lang-du-dian-zi-shu/5-jpg/</link>
		<pubDate>Fri, 01 Oct 2010 12:05:49 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/10/5.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>392</wp:post_id>
		<wp:post_date>2010-10-01 20:05:49</wp:post_date>
		<wp:post_date_gmt>2010-10-01 12:05:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>5-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>394</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/10/5.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/10/5.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"319";s:6:"height";s:3:"262";s:14:"hwstring_small";s:23:"height='96' width='116'";s:4:"file";s:13:"2010/10/5.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:13:"5-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:13:"5-300x246.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"246";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391563]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>5_thumb.jpg</title>
		<link>http://allenlsy.com/2010/10/rang-ji-suan-ji-lang-du-dian-zi-shu/5_thumb-jpg/</link>
		<pubDate>Fri, 01 Oct 2010 12:05:51 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/10/5_thumb.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>393</wp:post_id>
		<wp:post_date>2010-10-01 20:05:51</wp:post_date>
		<wp:post_date_gmt>2010-10-01 12:05:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>5_thumb-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>394</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/10/5_thumb.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/10/5_thumb.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"244";s:6:"height";s:3:"201";s:14:"hwstring_small";s:23:"height='96' width='116'";s:4:"file";s:19:"2010/10/5_thumb.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"5_thumb-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391564]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>image.png</title>
		<link>http://allenlsy.com/2010/11/IEEE-ruan-jian-gong-cheng-shu-yu-biao/image-png/</link>
		<pubDate>Tue, 02 Nov 2010 12:44:29 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/image.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>401</wp:post_id>
		<wp:post_date>2010-11-02 20:44:29</wp:post_date>
		<wp:post_date_gmt>2010-11-02 12:44:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>image-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>403</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/image.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/image.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"580";s:6:"height";s:3:"768";s:14:"hwstring_small";s:22:"height='96' width='72'";s:4:"file";s:17:"2010/11/image.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"image-226x300.png";s:5:"width";s:3:"226";s:6:"height";s:3:"300";}s:14:"post-thumbnail";a:3:{s:4:"file";s:17:"image-580x288.png";s:5:"width";s:3:"580";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:17:"image-580x288.png";s:5:"width";s:3:"580";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:17:"image-226x300.png";s:5:"width";s:3:"226";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391567]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>image_thumb.png</title>
		<link>http://allenlsy.com/2010/11/IEEE-ruan-jian-gong-cheng-shu-yu-biao/image_thumb-png/</link>
		<pubDate>Tue, 02 Nov 2010 12:44:33 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/image_thumb.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>402</wp:post_id>
		<wp:post_date>2010-11-02 20:44:33</wp:post_date>
		<wp:post_date_gmt>2010-11-02 12:44:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>image_thumb-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>403</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/image_thumb.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/image_thumb.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"496";s:6:"height";s:3:"657";s:14:"hwstring_small";s:22:"height='96' width='72'";s:4:"file";s:23:"2010/11/image_thumb.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"image_thumb-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:23:"image_thumb-226x300.png";s:5:"width";s:3:"226";s:6:"height";s:3:"300";}s:14:"post-thumbnail";a:3:{s:4:"file";s:23:"image_thumb-496x288.png";s:5:"width";s:3:"496";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:23:"image_thumb-496x288.png";s:5:"width";s:3:"496";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:23:"image_thumb-226x300.png";s:5:"width";s:3:"226";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391568]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1738_Chap6Aboutn1.png</title>
		<link>http://allenlsy.com/?attachment_id=412</link>
		<pubDate>Thu, 25 Nov 2010 17:38:11 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>412</wp:post_id>
		<wp:post_date>2010-11-26 01:38:11</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:38:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1738_chap6aboutn1-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1738_chap6aboutn1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"445";s:6:"height";s:2:"89";s:14:"hwstring_small";s:23:"height='25' width='128'";s:4:"file";s:36:"2010/11/112510_1738_chap6aboutn1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:35:"112510_1738_chap6aboutn1-150x89.png";s:5:"width";s:3:"150";s:6:"height";s:2:"89";}s:6:"medium";a:3:{s:4:"file";s:35:"112510_1738_chap6aboutn1-300x60.png";s:5:"width";s:3:"300";s:6:"height";s:2:"60";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391575]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1738_Chap6Aboutn2.png</title>
		<link>http://allenlsy.com/?attachment_id=413</link>
		<pubDate>Thu, 25 Nov 2010 17:38:14 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>413</wp:post_id>
		<wp:post_date>2010-11-26 01:38:14</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:38:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1738_chap6aboutn2-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn2.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1738_chap6aboutn2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"450";s:6:"height";s:2:"52";s:14:"hwstring_small";s:23:"height='14' width='128'";s:4:"file";s:36:"2010/11/112510_1738_chap6aboutn2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:35:"112510_1738_chap6aboutn2-150x52.png";s:5:"width";s:3:"150";s:6:"height";s:2:"52";}s:6:"medium";a:3:{s:4:"file";s:35:"112510_1738_chap6aboutn2-300x34.png";s:5:"width";s:3:"300";s:6:"height";s:2:"34";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391576]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1738_Chap6Aboutn3.png</title>
		<link>http://allenlsy.com/?attachment_id=414</link>
		<pubDate>Thu, 25 Nov 2010 17:38:16 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn3.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>414</wp:post_id>
		<wp:post_date>2010-11-26 01:38:16</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:38:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1738_chap6aboutn3-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn3.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1738_chap6aboutn3.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"438";s:6:"height";s:2:"33";s:14:"hwstring_small";s:22:"height='9' width='128'";s:4:"file";s:36:"2010/11/112510_1738_chap6aboutn3.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:35:"112510_1738_chap6aboutn3-150x33.png";s:5:"width";s:3:"150";s:6:"height";s:2:"33";}s:6:"medium";a:3:{s:4:"file";s:35:"112510_1738_chap6aboutn3-300x22.png";s:5:"width";s:3:"300";s:6:"height";s:2:"22";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391577]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1738_Chap6Aboutn4.png</title>
		<link>http://allenlsy.com/?attachment_id=415</link>
		<pubDate>Thu, 25 Nov 2010 17:38:19 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn4.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>415</wp:post_id>
		<wp:post_date>2010-11-26 01:38:19</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:38:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1738_chap6aboutn4-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn4.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1738_chap6aboutn4.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"462";s:6:"height";s:3:"105";s:14:"hwstring_small";s:23:"height='29' width='128'";s:4:"file";s:36:"2010/11/112510_1738_chap6aboutn4.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112510_1738_chap6aboutn4-150x105.png";s:5:"width";s:3:"150";s:6:"height";s:3:"105";}s:6:"medium";a:3:{s:4:"file";s:35:"112510_1738_chap6aboutn4-300x68.png";s:5:"width";s:3:"300";s:6:"height";s:2:"68";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391578]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1738_Chap6Aboutn5.png</title>
		<link>http://allenlsy.com/?attachment_id=416</link>
		<pubDate>Thu, 25 Nov 2010 17:38:21 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn5.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>416</wp:post_id>
		<wp:post_date>2010-11-26 01:38:21</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:38:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1738_chap6aboutn5-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn5.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1738_chap6aboutn5.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"405";s:6:"height";s:2:"90";s:14:"hwstring_small";s:23:"height='28' width='128'";s:4:"file";s:36:"2010/11/112510_1738_chap6aboutn5.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:35:"112510_1738_chap6aboutn5-150x90.png";s:5:"width";s:3:"150";s:6:"height";s:2:"90";}s:6:"medium";a:3:{s:4:"file";s:35:"112510_1738_chap6aboutn5-300x66.png";s:5:"width";s:3:"300";s:6:"height";s:2:"66";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391579]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1738_Chap6Aboutn6.png</title>
		<link>http://allenlsy.com/?attachment_id=417</link>
		<pubDate>Thu, 25 Nov 2010 17:38:23 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn6.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>417</wp:post_id>
		<wp:post_date>2010-11-26 01:38:23</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:38:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1738_chap6aboutn6-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn6.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1738_chap6aboutn6.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"334";s:6:"height";s:2:"34";s:14:"hwstring_small";s:23:"height='13' width='128'";s:4:"file";s:36:"2010/11/112510_1738_chap6aboutn6.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:35:"112510_1738_chap6aboutn6-150x34.png";s:5:"width";s:3:"150";s:6:"height";s:2:"34";}s:6:"medium";a:3:{s:4:"file";s:35:"112510_1738_chap6aboutn6-300x30.png";s:5:"width";s:3:"300";s:6:"height";s:2:"30";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391580]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1738_Chap6Aboutn7.png</title>
		<link>http://allenlsy.com/?attachment_id=418</link>
		<pubDate>Thu, 25 Nov 2010 17:38:25 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn7.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>418</wp:post_id>
		<wp:post_date>2010-11-26 01:38:25</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:38:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1738_chap6aboutn7-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn7.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1738_chap6aboutn7.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"404";s:6:"height";s:2:"91";s:14:"hwstring_small";s:23:"height='28' width='128'";s:4:"file";s:36:"2010/11/112510_1738_chap6aboutn7.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:35:"112510_1738_chap6aboutn7-150x91.png";s:5:"width";s:3:"150";s:6:"height";s:2:"91";}s:6:"medium";a:3:{s:4:"file";s:35:"112510_1738_chap6aboutn7-300x67.png";s:5:"width";s:3:"300";s:6:"height";s:2:"67";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391581]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1738_Chap6Aboutn8.png</title>
		<link>http://allenlsy.com/?attachment_id=419</link>
		<pubDate>Thu, 25 Nov 2010 17:38:28 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn8.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>419</wp:post_id>
		<wp:post_date>2010-11-26 01:38:28</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:38:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1738_chap6aboutn8-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn8.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1738_chap6aboutn8.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"549";s:6:"height";s:3:"281";s:14:"hwstring_small";s:23:"height='65' width='128'";s:4:"file";s:36:"2010/11/112510_1738_chap6aboutn8.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112510_1738_chap6aboutn8-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"112510_1738_chap6aboutn8-300x153.png";s:5:"width";s:3:"300";s:6:"height";s:3:"153";}s:13:"small-feature";a:3:{s:4:"file";s:36:"112510_1738_chap6aboutn8-500x255.png";s:5:"width";s:3:"500";s:6:"height";s:3:"255";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391582]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1738_Chap6Aboutn9.png</title>
		<link>http://allenlsy.com/?attachment_id=420</link>
		<pubDate>Thu, 25 Nov 2010 17:38:31 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn9.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>420</wp:post_id>
		<wp:post_date>2010-11-26 01:38:31</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:38:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1738_chap6aboutn9-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn9.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1738_chap6aboutn9.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"546";s:6:"height";s:3:"352";s:14:"hwstring_small";s:23:"height='82' width='128'";s:4:"file";s:36:"2010/11/112510_1738_chap6aboutn9.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112510_1738_chap6aboutn9-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"112510_1738_chap6aboutn9-300x193.png";s:5:"width";s:3:"300";s:6:"height";s:3:"193";}s:14:"post-thumbnail";a:3:{s:4:"file";s:36:"112510_1738_chap6aboutn9-546x288.png";s:5:"width";s:3:"546";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:36:"112510_1738_chap6aboutn9-546x288.png";s:5:"width";s:3:"546";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:36:"112510_1738_chap6aboutn9-465x300.png";s:5:"width";s:3:"465";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391583]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1738_Chap6Aboutn10.png</title>
		<link>http://allenlsy.com/?attachment_id=421</link>
		<pubDate>Thu, 25 Nov 2010 17:38:33 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn10.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>421</wp:post_id>
		<wp:post_date>2010-11-26 01:38:33</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:38:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1738_chap6aboutn10-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn10.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1738_chap6aboutn10.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"410";s:6:"height";s:2:"90";s:14:"hwstring_small";s:23:"height='28' width='128'";s:4:"file";s:37:"2010/11/112510_1738_chap6aboutn10.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112510_1738_chap6aboutn10-150x90.png";s:5:"width";s:3:"150";s:6:"height";s:2:"90";}s:6:"medium";a:3:{s:4:"file";s:36:"112510_1738_chap6aboutn10-300x65.png";s:5:"width";s:3:"300";s:6:"height";s:2:"65";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391584]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1738_Chap6Aboutn11.png</title>
		<link>http://allenlsy.com/?attachment_id=422</link>
		<pubDate>Thu, 25 Nov 2010 17:38:36 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn11.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>422</wp:post_id>
		<wp:post_date>2010-11-26 01:38:36</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:38:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1738_chap6aboutn11-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn11.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1738_chap6aboutn11.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"437";s:6:"height";s:3:"222";s:14:"hwstring_small";s:23:"height='65' width='128'";s:4:"file";s:37:"2010/11/112510_1738_chap6aboutn11.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"112510_1738_chap6aboutn11-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:37:"112510_1738_chap6aboutn11-300x152.png";s:5:"width";s:3:"300";s:6:"height";s:3:"152";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391587]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1738_Chap6Aboutn12.png</title>
		<link>http://allenlsy.com/?attachment_id=423</link>
		<pubDate>Thu, 25 Nov 2010 17:38:39 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn12.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>423</wp:post_id>
		<wp:post_date>2010-11-26 01:38:39</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:38:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1738_chap6aboutn12-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn12.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1738_chap6aboutn12.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"429";s:6:"height";s:3:"222";s:14:"hwstring_small";s:23:"height='66' width='128'";s:4:"file";s:37:"2010/11/112510_1738_chap6aboutn12.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"112510_1738_chap6aboutn12-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:37:"112510_1738_chap6aboutn12-300x155.png";s:5:"width";s:3:"300";s:6:"height";s:3:"155";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391588]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1738_Chap6Aboutn13.png</title>
		<link>http://allenlsy.com/?attachment_id=424</link>
		<pubDate>Thu, 25 Nov 2010 17:38:41 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn13.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>424</wp:post_id>
		<wp:post_date>2010-11-26 01:38:41</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:38:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1738_chap6aboutn13-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn13.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1738_chap6aboutn13.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"437";s:6:"height";s:3:"127";s:14:"hwstring_small";s:23:"height='37' width='128'";s:4:"file";s:37:"2010/11/112510_1738_chap6aboutn13.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"112510_1738_chap6aboutn13-150x127.png";s:5:"width";s:3:"150";s:6:"height";s:3:"127";}s:6:"medium";a:3:{s:4:"file";s:36:"112510_1738_chap6aboutn13-300x87.png";s:5:"width";s:3:"300";s:6:"height";s:2:"87";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391589]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1738_Chap6Aboutn14.png</title>
		<link>http://allenlsy.com/?attachment_id=425</link>
		<pubDate>Thu, 25 Nov 2010 17:38:44 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn14.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>425</wp:post_id>
		<wp:post_date>2010-11-26 01:38:44</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:38:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1738_chap6aboutn14-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn14.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1738_chap6aboutn14.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"484";s:6:"height";s:3:"354";s:14:"hwstring_small";s:23:"height='93' width='128'";s:4:"file";s:37:"2010/11/112510_1738_chap6aboutn14.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"112510_1738_chap6aboutn14-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:37:"112510_1738_chap6aboutn14-300x219.png";s:5:"width";s:3:"300";s:6:"height";s:3:"219";}s:14:"post-thumbnail";a:3:{s:4:"file";s:37:"112510_1738_chap6aboutn14-484x288.png";s:5:"width";s:3:"484";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:37:"112510_1738_chap6aboutn14-484x288.png";s:5:"width";s:3:"484";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:37:"112510_1738_chap6aboutn14-410x300.png";s:5:"width";s:3:"410";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391590]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1738_Chap6Aboutn15.png</title>
		<link>http://allenlsy.com/?attachment_id=426</link>
		<pubDate>Thu, 25 Nov 2010 17:38:46 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn15.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>426</wp:post_id>
		<wp:post_date>2010-11-26 01:38:46</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:38:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1738_chap6aboutn15-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn15.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1738_chap6aboutn15.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"587";s:6:"height";s:3:"200";s:14:"hwstring_small";s:23:"height='43' width='128'";s:4:"file";s:37:"2010/11/112510_1738_chap6aboutn15.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"112510_1738_chap6aboutn15-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:37:"112510_1738_chap6aboutn15-300x102.png";s:5:"width";s:3:"300";s:6:"height";s:3:"102";}s:13:"small-feature";a:3:{s:4:"file";s:37:"112510_1738_chap6aboutn15-500x170.png";s:5:"width";s:3:"500";s:6:"height";s:3:"170";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391591]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1738_Chap6Aboutn16.png</title>
		<link>http://allenlsy.com/?attachment_id=427</link>
		<pubDate>Thu, 25 Nov 2010 17:38:48 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn16.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>427</wp:post_id>
		<wp:post_date>2010-11-26 01:38:48</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:38:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1738_chap6aboutn16-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1738_chap6aboutn16.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1738_chap6aboutn16.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"285";s:6:"height";s:2:"40";s:14:"hwstring_small";s:23:"height='17' width='128'";s:4:"file";s:37:"2010/11/112510_1738_chap6aboutn16.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112510_1738_chap6aboutn16-150x40.png";s:5:"width";s:3:"150";s:6:"height";s:2:"40";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391592]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1747_Chap3Multim1.png</title>
		<link>http://allenlsy.com/?attachment_id=434</link>
		<pubDate>Thu, 25 Nov 2010 17:48:00 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1747_chap3multim1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>434</wp:post_id>
		<wp:post_date>2010-11-26 01:48:00</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:48:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1747_chap3multim1-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1747_chap3multim1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1747_chap3multim1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"281";s:6:"height";s:3:"180";s:14:"hwstring_small";s:23:"height='81' width='128'";s:4:"file";s:36:"2010/11/112510_1747_chap3multim1.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112510_1747_chap3multim1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391593]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1747_Chap3Multim2.png</title>
		<link>http://allenlsy.com/?attachment_id=435</link>
		<pubDate>Thu, 25 Nov 2010 17:48:04 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1747_chap3multim2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>435</wp:post_id>
		<wp:post_date>2010-11-26 01:48:04</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:48:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1747_chap3multim2-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1747_chap3multim2.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1747_chap3multim2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"465";s:6:"height";s:3:"213";s:14:"hwstring_small";s:23:"height='58' width='128'";s:4:"file";s:36:"2010/11/112510_1747_chap3multim2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112510_1747_chap3multim2-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"112510_1747_chap3multim2-300x137.png";s:5:"width";s:3:"300";s:6:"height";s:3:"137";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391594]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1747_Chap3Multim3.png</title>
		<link>http://allenlsy.com/?attachment_id=436</link>
		<pubDate>Thu, 25 Nov 2010 17:48:07 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1747_chap3multim3.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>436</wp:post_id>
		<wp:post_date>2010-11-26 01:48:07</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:48:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1747_chap3multim3-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1747_chap3multim3.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1747_chap3multim3.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"470";s:6:"height";s:3:"279";s:14:"hwstring_small";s:23:"height='75' width='128'";s:4:"file";s:36:"2010/11/112510_1747_chap3multim3.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112510_1747_chap3multim3-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"112510_1747_chap3multim3-300x178.png";s:5:"width";s:3:"300";s:6:"height";s:3:"178";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391595]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1747_Chap3Multim4.png</title>
		<link>http://allenlsy.com/?attachment_id=437</link>
		<pubDate>Thu, 25 Nov 2010 17:48:10 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1747_chap3multim4.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>437</wp:post_id>
		<wp:post_date>2010-11-26 01:48:10</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:48:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1747_chap3multim4-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1747_chap3multim4.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1747_chap3multim4.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"570";s:6:"height";s:3:"251";s:14:"hwstring_small";s:23:"height='56' width='128'";s:4:"file";s:36:"2010/11/112510_1747_chap3multim4.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112510_1747_chap3multim4-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"112510_1747_chap3multim4-300x132.png";s:5:"width";s:3:"300";s:6:"height";s:3:"132";}s:13:"small-feature";a:3:{s:4:"file";s:36:"112510_1747_chap3multim4-500x220.png";s:5:"width";s:3:"500";s:6:"height";s:3:"220";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391596]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1747_Chap3Multim5.png</title>
		<link>http://allenlsy.com/?attachment_id=438</link>
		<pubDate>Thu, 25 Nov 2010 17:48:15 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1747_chap3multim5.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>438</wp:post_id>
		<wp:post_date>2010-11-26 01:48:15</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:48:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1747_chap3multim5-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1747_chap3multim5.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1747_chap3multim5.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"558";s:6:"height";s:3:"267";s:14:"hwstring_small";s:23:"height='61' width='128'";s:4:"file";s:36:"2010/11/112510_1747_chap3multim5.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112510_1747_chap3multim5-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"112510_1747_chap3multim5-300x143.png";s:5:"width";s:3:"300";s:6:"height";s:3:"143";}s:13:"small-feature";a:3:{s:4:"file";s:36:"112510_1747_chap3multim5-500x239.png";s:5:"width";s:3:"500";s:6:"height";s:3:"239";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391597]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1747_Chap3Multim6.png</title>
		<link>http://allenlsy.com/?attachment_id=439</link>
		<pubDate>Thu, 25 Nov 2010 17:48:18 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1747_chap3multim6.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>439</wp:post_id>
		<wp:post_date>2010-11-26 01:48:18</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:48:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1747_chap3multim6-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1747_chap3multim6.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1747_chap3multim6.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"483";s:6:"height";s:3:"387";s:14:"hwstring_small";s:23:"height='96' width='119'";s:4:"file";s:36:"2010/11/112510_1747_chap3multim6.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112510_1747_chap3multim6-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"112510_1747_chap3multim6-300x240.png";s:5:"width";s:3:"300";s:6:"height";s:3:"240";}s:14:"post-thumbnail";a:3:{s:4:"file";s:36:"112510_1747_chap3multim6-483x288.png";s:5:"width";s:3:"483";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:36:"112510_1747_chap3multim6-483x288.png";s:5:"width";s:3:"483";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:36:"112510_1747_chap3multim6-374x300.png";s:5:"width";s:3:"374";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391598]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1747_Chap3Multim7.png</title>
		<link>http://allenlsy.com/?attachment_id=440</link>
		<pubDate>Thu, 25 Nov 2010 17:48:22 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1747_chap3multim7.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>440</wp:post_id>
		<wp:post_date>2010-11-26 01:48:22</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:48:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1747_chap3multim7-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1747_chap3multim7.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1747_chap3multim7.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"585";s:6:"height";s:3:"211";s:14:"hwstring_small";s:23:"height='46' width='128'";s:4:"file";s:36:"2010/11/112510_1747_chap3multim7.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112510_1747_chap3multim7-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"112510_1747_chap3multim7-300x108.png";s:5:"width";s:3:"300";s:6:"height";s:3:"108";}s:13:"small-feature";a:3:{s:4:"file";s:36:"112510_1747_chap3multim7-500x180.png";s:5:"width";s:3:"500";s:6:"height";s:3:"180";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391599]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1747_Chap3Multim8.png</title>
		<link>http://allenlsy.com/?attachment_id=441</link>
		<pubDate>Thu, 25 Nov 2010 17:48:26 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1747_chap3multim8.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>441</wp:post_id>
		<wp:post_date>2010-11-26 01:48:26</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:48:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1747_chap3multim8-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1747_chap3multim8.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1747_chap3multim8.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"270";s:6:"height";s:2:"38";s:14:"hwstring_small";s:23:"height='18' width='128'";s:4:"file";s:36:"2010/11/112510_1747_chap3multim8.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:35:"112510_1747_chap3multim8-150x38.png";s:5:"width";s:3:"150";s:6:"height";s:2:"38";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391600]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1747_Chap3Multim9.png</title>
		<link>http://allenlsy.com/?attachment_id=442</link>
		<pubDate>Thu, 25 Nov 2010 17:48:29 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1747_chap3multim9.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>442</wp:post_id>
		<wp:post_date>2010-11-26 01:48:29</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:48:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1747_chap3multim9-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1747_chap3multim9.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1747_chap3multim9.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"493";s:6:"height";s:3:"270";s:14:"hwstring_small";s:23:"height='70' width='128'";s:4:"file";s:36:"2010/11/112510_1747_chap3multim9.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112510_1747_chap3multim9-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"112510_1747_chap3multim9-300x164.png";s:5:"width";s:3:"300";s:6:"height";s:3:"164";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391601]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1747_Chap3Multim10.png</title>
		<link>http://allenlsy.com/?attachment_id=443</link>
		<pubDate>Thu, 25 Nov 2010 17:48:32 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1747_chap3multim10.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>443</wp:post_id>
		<wp:post_date>2010-11-26 01:48:32</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:48:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1747_chap3multim10-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1747_chap3multim10.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1747_chap3multim10.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"261";s:6:"height";s:3:"239";s:14:"hwstring_small";s:23:"height='96' width='104'";s:4:"file";s:37:"2010/11/112510_1747_chap3multim10.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"112510_1747_chap3multim10-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391602]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1747_Chap3Multim11.png</title>
		<link>http://allenlsy.com/?attachment_id=444</link>
		<pubDate>Thu, 25 Nov 2010 17:48:36 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1747_chap3multim11.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>444</wp:post_id>
		<wp:post_date>2010-11-26 01:48:36</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:48:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1747_chap3multim11-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1747_chap3multim11.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1747_chap3multim11.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"681";s:6:"height";s:3:"108";s:14:"hwstring_small";s:23:"height='20' width='128'";s:4:"file";s:37:"2010/11/112510_1747_chap3multim11.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"112510_1747_chap3multim11-150x108.png";s:5:"width";s:3:"150";s:6:"height";s:3:"108";}s:6:"medium";a:3:{s:4:"file";s:36:"112510_1747_chap3multim11-300x47.png";s:5:"width";s:3:"300";s:6:"height";s:2:"47";}s:13:"small-feature";a:3:{s:4:"file";s:36:"112510_1747_chap3multim11-500x79.png";s:5:"width";s:3:"500";s:6:"height";s:2:"79";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391603]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1747_Chap3Multim12.png</title>
		<link>http://allenlsy.com/?attachment_id=445</link>
		<pubDate>Thu, 25 Nov 2010 17:48:40 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1747_chap3multim12.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>445</wp:post_id>
		<wp:post_date>2010-11-26 01:48:40</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:48:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1747_chap3multim12-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1747_chap3multim12.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1747_chap3multim12.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"256";s:6:"height";s:3:"244";s:14:"hwstring_small";s:23:"height='96' width='100'";s:4:"file";s:37:"2010/11/112510_1747_chap3multim12.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"112510_1747_chap3multim12-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391604]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1747_Chap3Multim13.png</title>
		<link>http://allenlsy.com/?attachment_id=446</link>
		<pubDate>Thu, 25 Nov 2010 17:48:43 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1747_chap3multim13.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>446</wp:post_id>
		<wp:post_date>2010-11-26 01:48:43</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:48:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1747_chap3multim13-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1747_chap3multim13.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1747_chap3multim13.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"514";s:6:"height";s:3:"515";s:14:"hwstring_small";s:22:"height='96' width='95'";s:4:"file";s:37:"2010/11/112510_1747_chap3multim13.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"112510_1747_chap3multim13-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:37:"112510_1747_chap3multim13-300x300.png";s:5:"width";s:3:"300";s:6:"height";s:3:"300";}s:14:"post-thumbnail";a:3:{s:4:"file";s:37:"112510_1747_chap3multim13-514x288.png";s:5:"width";s:3:"514";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:37:"112510_1747_chap3multim13-514x288.png";s:5:"width";s:3:"514";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:37:"112510_1747_chap3multim13-299x300.png";s:5:"width";s:3:"299";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391605]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112510_1747_Chap3Multim14.png</title>
		<link>http://allenlsy.com/?attachment_id=447</link>
		<pubDate>Thu, 25 Nov 2010 17:48:47 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112510_1747_chap3multim14.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>447</wp:post_id>
		<wp:post_date>2010-11-26 01:48:47</wp:post_date>
		<wp:post_date_gmt>2010-11-25 17:48:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112510_1747_chap3multim14-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112510_1747_chap3multim14.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112510_1747_chap3multim14.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"456";s:6:"height";s:3:"318";s:14:"hwstring_small";s:23:"height='89' width='128'";s:4:"file";s:37:"2010/11/112510_1747_chap3multim14.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"112510_1747_chap3multim14-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:37:"112510_1747_chap3multim14-300x209.png";s:5:"width";s:3:"300";s:6:"height";s:3:"209";}s:14:"post-thumbnail";a:3:{s:4:"file";s:37:"112510_1747_chap3multim14-456x288.png";s:5:"width";s:3:"456";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:37:"112510_1747_chap3multim14-456x288.png";s:5:"width";s:3:"456";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:37:"112510_1747_chap3multim14-430x300.png";s:5:"width";s:3:"430";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391606]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0604_Chap7Public1.png</title>
		<link>http://allenlsy.com/?attachment_id=453</link>
		<pubDate>Fri, 26 Nov 2010 06:04:28 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0604_chap7public1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>453</wp:post_id>
		<wp:post_date>2010-11-26 14:04:28</wp:post_date>
		<wp:post_date_gmt>2010-11-26 06:04:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0604_chap7public1-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0604_chap7public1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0604_chap7public1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"443";s:6:"height";s:3:"281";s:14:"hwstring_small";s:23:"height='81' width='128'";s:4:"file";s:36:"2010/11/112610_0604_chap7public1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112610_0604_chap7public1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"112610_0604_chap7public1-300x190.png";s:5:"width";s:3:"300";s:6:"height";s:3:"190";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391608]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0604_Chap7Public2.png</title>
		<link>http://allenlsy.com/?attachment_id=454</link>
		<pubDate>Fri, 26 Nov 2010 06:04:33 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0604_chap7public2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>454</wp:post_id>
		<wp:post_date>2010-11-26 14:04:33</wp:post_date>
		<wp:post_date_gmt>2010-11-26 06:04:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0604_chap7public2-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0604_chap7public2.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0604_chap7public2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"445";s:6:"height";s:3:"282";s:14:"hwstring_small";s:23:"height='81' width='128'";s:4:"file";s:36:"2010/11/112610_0604_chap7public2.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391609]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0604_Chap7Public3.png</title>
		<link>http://allenlsy.com/?attachment_id=455</link>
		<pubDate>Fri, 26 Nov 2010 06:04:38 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0604_chap7public3.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>455</wp:post_id>
		<wp:post_date>2010-11-26 14:04:38</wp:post_date>
		<wp:post_date_gmt>2010-11-26 06:04:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0604_chap7public3-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0604_chap7public3.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0604_chap7public3.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"476";s:6:"height";s:3:"346";s:14:"hwstring_small";s:23:"height='93' width='128'";s:4:"file";s:36:"2010/11/112610_0604_chap7public3.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112610_0604_chap7public3-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"112610_0604_chap7public3-300x218.png";s:5:"width";s:3:"300";s:6:"height";s:3:"218";}s:14:"post-thumbnail";a:3:{s:4:"file";s:36:"112610_0604_chap7public3-476x288.png";s:5:"width";s:3:"476";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:36:"112610_0604_chap7public3-476x288.png";s:5:"width";s:3:"476";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:36:"112610_0604_chap7public3-412x300.png";s:5:"width";s:3:"412";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391610]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0604_Chap7Public4.png</title>
		<link>http://allenlsy.com/?attachment_id=456</link>
		<pubDate>Fri, 26 Nov 2010 06:04:45 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0604_chap7public4.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>456</wp:post_id>
		<wp:post_date>2010-11-26 14:04:45</wp:post_date>
		<wp:post_date_gmt>2010-11-26 06:04:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0604_chap7public4-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0604_chap7public4.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0604_chap7public4.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"474";s:6:"height";s:3:"319";s:14:"hwstring_small";s:23:"height='86' width='128'";s:4:"file";s:36:"2010/11/112610_0604_chap7public4.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112610_0604_chap7public4-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"112610_0604_chap7public4-300x201.png";s:5:"width";s:3:"300";s:6:"height";s:3:"201";}s:14:"post-thumbnail";a:3:{s:4:"file";s:36:"112610_0604_chap7public4-474x288.png";s:5:"width";s:3:"474";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:36:"112610_0604_chap7public4-474x288.png";s:5:"width";s:3:"474";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:36:"112610_0604_chap7public4-445x300.png";s:5:"width";s:3:"445";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391611]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0604_Chap7Public5.png</title>
		<link>http://allenlsy.com/?attachment_id=457</link>
		<pubDate>Fri, 26 Nov 2010 06:04:52 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0604_chap7public5.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>457</wp:post_id>
		<wp:post_date>2010-11-26 14:04:52</wp:post_date>
		<wp:post_date_gmt>2010-11-26 06:04:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0604_chap7public5-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0604_chap7public5.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0604_chap7public5.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"459";s:6:"height";s:3:"253";s:14:"hwstring_small";s:23:"height='70' width='128'";s:4:"file";s:36:"2010/11/112610_0604_chap7public5.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112610_0604_chap7public5-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"112610_0604_chap7public5-300x165.png";s:5:"width";s:3:"300";s:6:"height";s:3:"165";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391612]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0604_Chap7Public7.png</title>
		<link>http://allenlsy.com/?attachment_id=458</link>
		<pubDate>Fri, 26 Nov 2010 06:05:12 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0604_chap7public7.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>458</wp:post_id>
		<wp:post_date>2010-11-26 14:05:12</wp:post_date>
		<wp:post_date_gmt>2010-11-26 06:05:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0604_chap7public7-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0604_chap7public7.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0604_chap7public7.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"440";s:6:"height";s:3:"253";s:14:"hwstring_small";s:23:"height='73' width='128'";s:4:"file";s:36:"2010/11/112610_0604_chap7public7.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112610_0604_chap7public7-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"112610_0604_chap7public7-300x172.png";s:5:"width";s:3:"300";s:6:"height";s:3:"172";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391613]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0604_Chap7Public8.png</title>
		<link>http://allenlsy.com/?attachment_id=459</link>
		<pubDate>Fri, 26 Nov 2010 06:05:16 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0604_chap7public8.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>459</wp:post_id>
		<wp:post_date>2010-11-26 14:05:16</wp:post_date>
		<wp:post_date_gmt>2010-11-26 06:05:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0604_chap7public8-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0604_chap7public8.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0604_chap7public8.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"487";s:6:"height";s:3:"325";s:14:"hwstring_small";s:23:"height='85' width='128'";s:4:"file";s:36:"2010/11/112610_0604_chap7public8.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112610_0604_chap7public8-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"112610_0604_chap7public8-300x200.png";s:5:"width";s:3:"300";s:6:"height";s:3:"200";}s:14:"post-thumbnail";a:3:{s:4:"file";s:36:"112610_0604_chap7public8-487x288.png";s:5:"width";s:3:"487";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:36:"112610_0604_chap7public8-487x288.png";s:5:"width";s:3:"487";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:36:"112610_0604_chap7public8-449x300.png";s:5:"width";s:3:"449";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391614]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0604_Chap7Public9.png</title>
		<link>http://allenlsy.com/?attachment_id=460</link>
		<pubDate>Fri, 26 Nov 2010 06:05:18 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0604_chap7public9.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>460</wp:post_id>
		<wp:post_date>2010-11-26 14:05:18</wp:post_date>
		<wp:post_date_gmt>2010-11-26 06:05:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0604_chap7public9-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0604_chap7public9.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0604_chap7public9.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"495";s:6:"height";s:3:"309";s:14:"hwstring_small";s:23:"height='79' width='128'";s:4:"file";s:36:"2010/11/112610_0604_chap7public9.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112610_0604_chap7public9-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"112610_0604_chap7public9-300x187.png";s:5:"width";s:3:"300";s:6:"height";s:3:"187";}s:14:"post-thumbnail";a:3:{s:4:"file";s:36:"112610_0604_chap7public9-495x288.png";s:5:"width";s:3:"495";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:36:"112610_0604_chap7public9-495x288.png";s:5:"width";s:3:"495";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:36:"112610_0604_chap7public9-480x300.png";s:5:"width";s:3:"480";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391615]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0604_Chap7Public10.png</title>
		<link>http://allenlsy.com/?attachment_id=461</link>
		<pubDate>Fri, 26 Nov 2010 06:05:22 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0604_chap7public10.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>461</wp:post_id>
		<wp:post_date>2010-11-26 14:05:22</wp:post_date>
		<wp:post_date_gmt>2010-11-26 06:05:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0604_chap7public10-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0604_chap7public10.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0604_chap7public10.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"476";s:6:"height";s:3:"244";s:14:"hwstring_small";s:23:"height='65' width='128'";s:4:"file";s:37:"2010/11/112610_0604_chap7public10.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"112610_0604_chap7public10-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:37:"112610_0604_chap7public10-300x153.png";s:5:"width";s:3:"300";s:6:"height";s:3:"153";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391616]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0604_Chap7Public11.png</title>
		<link>http://allenlsy.com/?attachment_id=462</link>
		<pubDate>Fri, 26 Nov 2010 06:05:25 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0604_chap7public11.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>462</wp:post_id>
		<wp:post_date>2010-11-26 14:05:25</wp:post_date>
		<wp:post_date_gmt>2010-11-26 06:05:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0604_chap7public11-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0604_chap7public11.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0604_chap7public11.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"481";s:6:"height";s:3:"264";s:14:"hwstring_small";s:23:"height='70' width='128'";s:4:"file";s:37:"2010/11/112610_0604_chap7public11.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"112610_0604_chap7public11-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:37:"112610_0604_chap7public11-300x164.png";s:5:"width";s:3:"300";s:6:"height";s:3:"164";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391617]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0604_Chap7Public12.png</title>
		<link>http://allenlsy.com/?attachment_id=463</link>
		<pubDate>Fri, 26 Nov 2010 06:05:28 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0604_chap7public12.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>463</wp:post_id>
		<wp:post_date>2010-11-26 14:05:28</wp:post_date>
		<wp:post_date_gmt>2010-11-26 06:05:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0604_chap7public12-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0604_chap7public12.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0604_chap7public12.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"498";s:6:"height";s:3:"278";s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:37:"2010/11/112610_0604_chap7public12.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"112610_0604_chap7public12-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:37:"112610_0604_chap7public12-300x167.png";s:5:"width";s:3:"300";s:6:"height";s:3:"167";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391618]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0606_Chap7Public1.png</title>
		<link>http://allenlsy.com/?attachment_id=465</link>
		<pubDate>Fri, 26 Nov 2010 06:06:19 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0606_chap7public1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>465</wp:post_id>
		<wp:post_date>2010-11-26 14:06:19</wp:post_date>
		<wp:post_date_gmt>2010-11-26 06:06:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0606_chap7public1-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0606_chap7public1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0606_chap7public1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"443";s:6:"height";s:3:"281";s:14:"hwstring_small";s:23:"height='81' width='128'";s:4:"file";s:36:"2010/11/112610_0606_chap7public1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112610_0606_chap7public1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"112610_0606_chap7public1-300x190.png";s:5:"width";s:3:"300";s:6:"height";s:3:"190";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391619]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0606_Chap7Public2.png</title>
		<link>http://allenlsy.com/?attachment_id=466</link>
		<pubDate>Fri, 26 Nov 2010 06:06:20 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0606_chap7public2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>466</wp:post_id>
		<wp:post_date>2010-11-26 14:06:20</wp:post_date>
		<wp:post_date_gmt>2010-11-26 06:06:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0606_chap7public2-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0606_chap7public2.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0606_chap7public2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"445";s:6:"height";s:3:"282";s:14:"hwstring_small";s:23:"height='81' width='128'";s:4:"file";s:36:"2010/11/112610_0606_chap7public2.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391620]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0606_Chap7Public3.png</title>
		<link>http://allenlsy.com/?attachment_id=467</link>
		<pubDate>Fri, 26 Nov 2010 06:06:24 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0606_chap7public3.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>467</wp:post_id>
		<wp:post_date>2010-11-26 14:06:24</wp:post_date>
		<wp:post_date_gmt>2010-11-26 06:06:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0606_chap7public3-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0606_chap7public3.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0606_chap7public3.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"476";s:6:"height";s:3:"346";s:14:"hwstring_small";s:23:"height='93' width='128'";s:4:"file";s:36:"2010/11/112610_0606_chap7public3.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112610_0606_chap7public3-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"112610_0606_chap7public3-300x218.png";s:5:"width";s:3:"300";s:6:"height";s:3:"218";}s:14:"post-thumbnail";a:3:{s:4:"file";s:36:"112610_0606_chap7public3-476x288.png";s:5:"width";s:3:"476";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:36:"112610_0606_chap7public3-476x288.png";s:5:"width";s:3:"476";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:36:"112610_0606_chap7public3-412x300.png";s:5:"width";s:3:"412";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391621]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0606_Chap7Public4.png</title>
		<link>http://allenlsy.com/?attachment_id=468</link>
		<pubDate>Fri, 26 Nov 2010 06:06:30 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0606_chap7public4.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>468</wp:post_id>
		<wp:post_date>2010-11-26 14:06:30</wp:post_date>
		<wp:post_date_gmt>2010-11-26 06:06:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0606_chap7public4-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0606_chap7public4.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0606_chap7public4.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"474";s:6:"height";s:3:"319";s:14:"hwstring_small";s:23:"height='86' width='128'";s:4:"file";s:36:"2010/11/112610_0606_chap7public4.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112610_0606_chap7public4-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"112610_0606_chap7public4-300x201.png";s:5:"width";s:3:"300";s:6:"height";s:3:"201";}s:14:"post-thumbnail";a:3:{s:4:"file";s:36:"112610_0606_chap7public4-474x288.png";s:5:"width";s:3:"474";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:36:"112610_0606_chap7public4-474x288.png";s:5:"width";s:3:"474";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:36:"112610_0606_chap7public4-445x300.png";s:5:"width";s:3:"445";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391622]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0606_Chap7Public5.png</title>
		<link>http://allenlsy.com/?attachment_id=469</link>
		<pubDate>Fri, 26 Nov 2010 06:06:39 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0606_chap7public5.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>469</wp:post_id>
		<wp:post_date>2010-11-26 14:06:39</wp:post_date>
		<wp:post_date_gmt>2010-11-26 06:06:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0606_chap7public5-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0606_chap7public5.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0606_chap7public5.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"459";s:6:"height";s:3:"253";s:14:"hwstring_small";s:23:"height='70' width='128'";s:4:"file";s:36:"2010/11/112610_0606_chap7public5.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112610_0606_chap7public5-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"112610_0606_chap7public5-300x165.png";s:5:"width";s:3:"300";s:6:"height";s:3:"165";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391623]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0606_Chap7Public6.png</title>
		<link>http://allenlsy.com/?attachment_id=470</link>
		<pubDate>Fri, 26 Nov 2010 06:07:00 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0606_chap7public6.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>470</wp:post_id>
		<wp:post_date>2010-11-26 14:07:00</wp:post_date>
		<wp:post_date_gmt>2010-11-26 06:07:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0606_chap7public6-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0606_chap7public6.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0606_chap7public6.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"484";s:6:"height";s:3:"366";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:36:"2010/11/112610_0606_chap7public6.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112610_0606_chap7public6-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"112610_0606_chap7public6-300x226.png";s:5:"width";s:3:"300";s:6:"height";s:3:"226";}s:14:"post-thumbnail";a:3:{s:4:"file";s:36:"112610_0606_chap7public6-484x288.png";s:5:"width";s:3:"484";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:36:"112610_0606_chap7public6-484x288.png";s:5:"width";s:3:"484";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:36:"112610_0606_chap7public6-396x300.png";s:5:"width";s:3:"396";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391624]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0606_Chap7Public7.png</title>
		<link>http://allenlsy.com/?attachment_id=471</link>
		<pubDate>Fri, 26 Nov 2010 06:07:03 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0606_chap7public7.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>471</wp:post_id>
		<wp:post_date>2010-11-26 14:07:03</wp:post_date>
		<wp:post_date_gmt>2010-11-26 06:07:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0606_chap7public7-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0606_chap7public7.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0606_chap7public7.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"440";s:6:"height";s:3:"253";s:14:"hwstring_small";s:23:"height='73' width='128'";s:4:"file";s:36:"2010/11/112610_0606_chap7public7.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112610_0606_chap7public7-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"112610_0606_chap7public7-300x172.png";s:5:"width";s:3:"300";s:6:"height";s:3:"172";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391625]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0606_Chap7Public8.png</title>
		<link>http://allenlsy.com/?attachment_id=472</link>
		<pubDate>Fri, 26 Nov 2010 06:07:07 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0606_chap7public8.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>472</wp:post_id>
		<wp:post_date>2010-11-26 14:07:07</wp:post_date>
		<wp:post_date_gmt>2010-11-26 06:07:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0606_chap7public8-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0606_chap7public8.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0606_chap7public8.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"487";s:6:"height";s:3:"325";s:14:"hwstring_small";s:23:"height='85' width='128'";s:4:"file";s:36:"2010/11/112610_0606_chap7public8.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112610_0606_chap7public8-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"112610_0606_chap7public8-300x200.png";s:5:"width";s:3:"300";s:6:"height";s:3:"200";}s:14:"post-thumbnail";a:3:{s:4:"file";s:36:"112610_0606_chap7public8-487x288.png";s:5:"width";s:3:"487";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:36:"112610_0606_chap7public8-487x288.png";s:5:"width";s:3:"487";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:36:"112610_0606_chap7public8-449x300.png";s:5:"width";s:3:"449";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391626]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0606_Chap7Public9.png</title>
		<link>http://allenlsy.com/?attachment_id=473</link>
		<pubDate>Fri, 26 Nov 2010 06:07:11 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0606_chap7public9.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>473</wp:post_id>
		<wp:post_date>2010-11-26 14:07:11</wp:post_date>
		<wp:post_date_gmt>2010-11-26 06:07:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0606_chap7public9-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0606_chap7public9.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0606_chap7public9.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"495";s:6:"height";s:3:"309";s:14:"hwstring_small";s:23:"height='79' width='128'";s:4:"file";s:36:"2010/11/112610_0606_chap7public9.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112610_0606_chap7public9-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"112610_0606_chap7public9-300x187.png";s:5:"width";s:3:"300";s:6:"height";s:3:"187";}s:14:"post-thumbnail";a:3:{s:4:"file";s:36:"112610_0606_chap7public9-495x288.png";s:5:"width";s:3:"495";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:36:"112610_0606_chap7public9-495x288.png";s:5:"width";s:3:"495";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:36:"112610_0606_chap7public9-480x300.png";s:5:"width";s:3:"480";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391627]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0606_Chap7Public10.png</title>
		<link>http://allenlsy.com/?attachment_id=474</link>
		<pubDate>Fri, 26 Nov 2010 06:07:16 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0606_chap7public10.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>474</wp:post_id>
		<wp:post_date>2010-11-26 14:07:16</wp:post_date>
		<wp:post_date_gmt>2010-11-26 06:07:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0606_chap7public10-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0606_chap7public10.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0606_chap7public10.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"476";s:6:"height";s:3:"244";s:14:"hwstring_small";s:23:"height='65' width='128'";s:4:"file";s:37:"2010/11/112610_0606_chap7public10.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"112610_0606_chap7public10-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:37:"112610_0606_chap7public10-300x153.png";s:5:"width";s:3:"300";s:6:"height";s:3:"153";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391629]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0606_Chap7Public11.png</title>
		<link>http://allenlsy.com/?attachment_id=475</link>
		<pubDate>Fri, 26 Nov 2010 06:07:22 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0606_chap7public11.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>475</wp:post_id>
		<wp:post_date>2010-11-26 14:07:22</wp:post_date>
		<wp:post_date_gmt>2010-11-26 06:07:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0606_chap7public11-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0606_chap7public11.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0606_chap7public11.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"481";s:6:"height";s:3:"264";s:14:"hwstring_small";s:23:"height='70' width='128'";s:4:"file";s:37:"2010/11/112610_0606_chap7public11.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"112610_0606_chap7public11-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:37:"112610_0606_chap7public11-300x164.png";s:5:"width";s:3:"300";s:6:"height";s:3:"164";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391630]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0606_Chap7Public12.png</title>
		<link>http://allenlsy.com/?attachment_id=476</link>
		<pubDate>Fri, 26 Nov 2010 06:07:26 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0606_chap7public12.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>476</wp:post_id>
		<wp:post_date>2010-11-26 14:07:26</wp:post_date>
		<wp:post_date_gmt>2010-11-26 06:07:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0606_chap7public12-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0606_chap7public12.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0606_chap7public12.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"498";s:6:"height";s:3:"278";s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:37:"2010/11/112610_0606_chap7public12.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"112610_0606_chap7public12-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:37:"112610_0606_chap7public12-300x167.png";s:5:"width";s:3:"300";s:6:"height";s:3:"167";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391631]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0756_Chap8Ellipt1.png</title>
		<link>http://allenlsy.com/?attachment_id=483</link>
		<pubDate>Fri, 26 Nov 2010 07:56:22 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>483</wp:post_id>
		<wp:post_date>2010-11-26 15:56:22</wp:post_date>
		<wp:post_date_gmt>2010-11-26 07:56:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0756_chap8ellipt1-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0756_chap8ellipt1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"334";s:6:"height";s:2:"31";s:14:"hwstring_small";s:23:"height='11' width='128'";s:4:"file";s:36:"2010/11/112610_0756_chap8ellipt1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:35:"112610_0756_chap8ellipt1-150x31.png";s:5:"width";s:3:"150";s:6:"height";s:2:"31";}s:6:"medium";a:3:{s:4:"file";s:35:"112610_0756_chap8ellipt1-300x27.png";s:5:"width";s:3:"300";s:6:"height";s:2:"27";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391632]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0756_Chap8Ellipt2.png</title>
		<link>http://allenlsy.com/?attachment_id=484</link>
		<pubDate>Fri, 26 Nov 2010 07:56:26 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>484</wp:post_id>
		<wp:post_date>2010-11-26 15:56:26</wp:post_date>
		<wp:post_date_gmt>2010-11-26 07:56:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0756_chap8ellipt2-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt2.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0756_chap8ellipt2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"130";s:6:"height";s:2:"30";s:14:"hwstring_small";s:23:"height='29' width='128'";s:4:"file";s:36:"2010/11/112610_0756_chap8ellipt2.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391633]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0756_Chap8Ellipt3.png</title>
		<link>http://allenlsy.com/?attachment_id=485</link>
		<pubDate>Fri, 26 Nov 2010 07:56:30 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt3.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>485</wp:post_id>
		<wp:post_date>2010-11-26 15:56:30</wp:post_date>
		<wp:post_date_gmt>2010-11-26 07:56:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0756_chap8ellipt3-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt3.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0756_chap8ellipt3.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"360";s:6:"height";s:3:"247";s:14:"hwstring_small";s:23:"height='87' width='128'";s:4:"file";s:36:"2010/11/112610_0756_chap8ellipt3.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112610_0756_chap8ellipt3-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"112610_0756_chap8ellipt3-300x205.png";s:5:"width";s:3:"300";s:6:"height";s:3:"205";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391634]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0756_Chap8Ellipt4.png</title>
		<link>http://allenlsy.com/?attachment_id=486</link>
		<pubDate>Fri, 26 Nov 2010 07:56:33 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt4.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>486</wp:post_id>
		<wp:post_date>2010-11-26 15:56:33</wp:post_date>
		<wp:post_date_gmt>2010-11-26 07:56:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0756_chap8ellipt4-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt4.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0756_chap8ellipt4.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"388";s:6:"height";s:3:"235";s:14:"hwstring_small";s:23:"height='77' width='128'";s:4:"file";s:36:"2010/11/112610_0756_chap8ellipt4.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112610_0756_chap8ellipt4-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"112610_0756_chap8ellipt4-300x181.png";s:5:"width";s:3:"300";s:6:"height";s:3:"181";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391635]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0756_Chap8Ellipt5.png</title>
		<link>http://allenlsy.com/?attachment_id=487</link>
		<pubDate>Fri, 26 Nov 2010 07:56:37 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt5.png</guid>
		<description></description>
		<content:encoded><![CDATA[<![CDATA]]]]><![CDATA[>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>487</wp:post_id>
		<wp:post_date>2010-11-26 15:56:37</wp:post_date>
		<wp:post_date_gmt>2010-11-26 07:56:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0756_chap8ellipt5-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt5.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0756_chap8ellipt5.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"383";s:6:"height";s:3:"226";s:14:"hwstring_small";s:23:"height='75' width='128'";s:4:"file";s:36:"2010/11/112610_0756_chap8ellipt5.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112610_0756_chap8ellipt5-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:36:"112610_0756_chap8ellipt5-300x177.png";s:5:"width";s:3:"300";s:6:"height";s:3:"177";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391636]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0756_Chap8Ellipt6.png</title>
		<link>http://allenlsy.com/?attachment_id=488</link>
		<pubDate>Fri, 26 Nov 2010 07:56:40 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt6.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>488</wp:post_id>
		<wp:post_date>2010-11-26 15:56:40</wp:post_date>
		<wp:post_date_gmt>2010-11-26 07:56:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0756_chap8ellipt6-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt6.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0756_chap8ellipt6.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"346";s:6:"height";s:3:"139";s:14:"hwstring_small";s:23:"height='51' width='128'";s:4:"file";s:36:"2010/11/112610_0756_chap8ellipt6.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112610_0756_chap8ellipt6-150x139.png";s:5:"width";s:3:"150";s:6:"height";s:3:"139";}s:6:"medium";a:3:{s:4:"file";s:36:"112610_0756_chap8ellipt6-300x120.png";s:5:"width";s:3:"300";s:6:"height";s:3:"120";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391637]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0756_Chap8Ellipt7.png</title>
		<link>http://allenlsy.com/?attachment_id=489</link>
		<pubDate>Fri, 26 Nov 2010 07:56:44 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt7.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>489</wp:post_id>
		<wp:post_date>2010-11-26 15:56:44</wp:post_date>
		<wp:post_date_gmt>2010-11-26 07:56:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0756_chap8ellipt7-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt7.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0756_chap8ellipt7.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"331";s:6:"height";s:3:"145";s:14:"hwstring_small";s:23:"height='56' width='128'";s:4:"file";s:36:"2010/11/112610_0756_chap8ellipt7.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112610_0756_chap8ellipt7-150x145.png";s:5:"width";s:3:"150";s:6:"height";s:3:"145";}s:6:"medium";a:3:{s:4:"file";s:36:"112610_0756_chap8ellipt7-300x131.png";s:5:"width";s:3:"300";s:6:"height";s:3:"131";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391638]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0756_Chap8Ellipt8.png</title>
		<link>http://allenlsy.com/?attachment_id=490</link>
		<pubDate>Fri, 26 Nov 2010 07:56:46 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt8.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>490</wp:post_id>
		<wp:post_date>2010-11-26 15:56:46</wp:post_date>
		<wp:post_date_gmt>2010-11-26 07:56:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0756_chap8ellipt8-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt8.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0756_chap8ellipt8.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"338";s:6:"height";s:2:"49";s:14:"hwstring_small";s:23:"height='18' width='128'";s:4:"file";s:36:"2010/11/112610_0756_chap8ellipt8.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:35:"112610_0756_chap8ellipt8-150x49.png";s:5:"width";s:3:"150";s:6:"height";s:2:"49";}s:6:"medium";a:3:{s:4:"file";s:35:"112610_0756_chap8ellipt8-300x43.png";s:5:"width";s:3:"300";s:6:"height";s:2:"43";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391639]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0756_Chap8Ellipt9.png</title>
		<link>http://allenlsy.com/?attachment_id=491</link>
		<pubDate>Fri, 26 Nov 2010 07:56:51 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt9.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>491</wp:post_id>
		<wp:post_date>2010-11-26 15:56:51</wp:post_date>
		<wp:post_date_gmt>2010-11-26 07:56:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0756_chap8ellipt9-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt9.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0756_chap8ellipt9.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"349";s:6:"height";s:3:"137";s:14:"hwstring_small";s:23:"height='50' width='128'";s:4:"file";s:36:"2010/11/112610_0756_chap8ellipt9.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112610_0756_chap8ellipt9-150x137.png";s:5:"width";s:3:"150";s:6:"height";s:3:"137";}s:6:"medium";a:3:{s:4:"file";s:36:"112610_0756_chap8ellipt9-300x117.png";s:5:"width";s:3:"300";s:6:"height";s:3:"117";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391640]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0756_Chap8Ellipt10.png</title>
		<link>http://allenlsy.com/?attachment_id=492</link>
		<pubDate>Fri, 26 Nov 2010 07:56:55 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt10.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>492</wp:post_id>
		<wp:post_date>2010-11-26 15:56:55</wp:post_date>
		<wp:post_date_gmt>2010-11-26 07:56:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0756_chap8ellipt10-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt10.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0756_chap8ellipt10.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"396";s:6:"height";s:2:"56";s:14:"hwstring_small";s:23:"height='18' width='128'";s:4:"file";s:37:"2010/11/112610_0756_chap8ellipt10.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112610_0756_chap8ellipt10-150x56.png";s:5:"width";s:3:"150";s:6:"height";s:2:"56";}s:6:"medium";a:3:{s:4:"file";s:36:"112610_0756_chap8ellipt10-300x42.png";s:5:"width";s:3:"300";s:6:"height";s:2:"42";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391641]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0756_Chap8Ellipt11.png</title>
		<link>http://allenlsy.com/?attachment_id=493</link>
		<pubDate>Fri, 26 Nov 2010 07:56:57 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt11.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>493</wp:post_id>
		<wp:post_date>2010-11-26 15:56:57</wp:post_date>
		<wp:post_date_gmt>2010-11-26 07:56:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0756_chap8ellipt11-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt11.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0756_chap8ellipt11.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"346";s:6:"height";s:2:"52";s:14:"hwstring_small";s:23:"height='19' width='128'";s:4:"file";s:37:"2010/11/112610_0756_chap8ellipt11.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112610_0756_chap8ellipt11-150x52.png";s:5:"width";s:3:"150";s:6:"height";s:2:"52";}s:6:"medium";a:3:{s:4:"file";s:36:"112610_0756_chap8ellipt11-300x45.png";s:5:"width";s:3:"300";s:6:"height";s:2:"45";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391642]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0756_Chap8Ellipt12.png</title>
		<link>http://allenlsy.com/?attachment_id=499</link>
		<pubDate>Fri, 26 Nov 2010 07:57:04 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt12.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>499</wp:post_id>
		<wp:post_date>2010-11-26 15:57:04</wp:post_date>
		<wp:post_date_gmt>2010-11-26 07:57:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0756_chap8ellipt12-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt12.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0756_chap8ellipt12.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"363";s:6:"height";s:3:"253";s:14:"hwstring_small";s:23:"height='89' width='128'";s:4:"file";s:37:"2010/11/112610_0756_chap8ellipt12.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"112610_0756_chap8ellipt12-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:37:"112610_0756_chap8ellipt12-300x209.png";s:5:"width";s:3:"300";s:6:"height";s:3:"209";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391643]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0756_Chap8Ellipt13.png</title>
		<link>http://allenlsy.com/?attachment_id=500</link>
		<pubDate>Fri, 26 Nov 2010 07:57:09 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt13.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>500</wp:post_id>
		<wp:post_date>2010-11-26 15:57:09</wp:post_date>
		<wp:post_date_gmt>2010-11-26 07:57:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0756_chap8ellipt13-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt13.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0756_chap8ellipt13.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"414";s:6:"height";s:3:"263";s:14:"hwstring_small";s:23:"height='81' width='128'";s:4:"file";s:37:"2010/11/112610_0756_chap8ellipt13.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"112610_0756_chap8ellipt13-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:37:"112610_0756_chap8ellipt13-300x190.png";s:5:"width";s:3:"300";s:6:"height";s:3:"190";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391644]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0756_Chap8Ellipt14.png</title>
		<link>http://allenlsy.com/?attachment_id=501</link>
		<pubDate>Fri, 26 Nov 2010 07:57:13 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt14.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>501</wp:post_id>
		<wp:post_date>2010-11-26 15:57:13</wp:post_date>
		<wp:post_date_gmt>2010-11-26 07:57:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0756_chap8ellipt14-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt14.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0756_chap8ellipt14.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"393";s:6:"height";s:3:"278";s:14:"hwstring_small";s:23:"height='90' width='128'";s:4:"file";s:37:"2010/11/112610_0756_chap8ellipt14.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"112610_0756_chap8ellipt14-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:37:"112610_0756_chap8ellipt14-300x212.png";s:5:"width";s:3:"300";s:6:"height";s:3:"212";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391645]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0756_Chap8Ellipt15.png</title>
		<link>http://allenlsy.com/?attachment_id=502</link>
		<pubDate>Fri, 26 Nov 2010 07:57:19 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt15.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>502</wp:post_id>
		<wp:post_date>2010-11-26 15:57:19</wp:post_date>
		<wp:post_date_gmt>2010-11-26 07:57:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0756_chap8ellipt15-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt15.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0756_chap8ellipt15.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"387";s:6:"height";s:3:"213";s:14:"hwstring_small";s:23:"height='70' width='128'";s:4:"file";s:37:"2010/11/112610_0756_chap8ellipt15.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"112610_0756_chap8ellipt15-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:37:"112610_0756_chap8ellipt15-300x165.png";s:5:"width";s:3:"300";s:6:"height";s:3:"165";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391646]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0756_Chap8Ellipt16.png</title>
		<link>http://allenlsy.com/?attachment_id=503</link>
		<pubDate>Fri, 26 Nov 2010 07:57:24 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt16.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>503</wp:post_id>
		<wp:post_date>2010-11-26 15:57:24</wp:post_date>
		<wp:post_date_gmt>2010-11-26 07:57:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0756_chap8ellipt16-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt16.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0756_chap8ellipt16.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"445";s:6:"height";s:3:"227";s:14:"hwstring_small";s:23:"height='65' width='128'";s:4:"file";s:37:"2010/11/112610_0756_chap8ellipt16.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"112610_0756_chap8ellipt16-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:37:"112610_0756_chap8ellipt16-300x153.png";s:5:"width";s:3:"300";s:6:"height";s:3:"153";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391647]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0756_Chap8Ellipt17.png</title>
		<link>http://allenlsy.com/?attachment_id=504</link>
		<pubDate>Fri, 26 Nov 2010 07:57:27 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt17.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[<!CDATA[]]]]><![CDATA[>]]></excerpt:encoded>
		<wp:post_id>504</wp:post_id>
		<wp:post_date>2010-11-26 15:57:27</wp:post_date>
		<wp:post_date_gmt>2010-11-26 07:57:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0756_chap8ellipt17-png</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt17.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0756_chap8ellipt17.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"343";s:6:"height";s:2:"84";s:14:"hwstring_small";s:23:"height='31' width='128'";s:4:"file";s:37:"2010/11/112610_0756_chap8ellipt17.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"112610_0756_chap8ellipt17-150x84.png";s:5:"width";s:3:"150";s:6:"height";s:2:"84";}s:6:"medium";a:3:{s:4:"file";s:36:"112610_0756_chap8ellipt17-300x73.png";s:5:"width";s:3:"300";s:6:"height";s:2:"73";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391648]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>image.png</title>
		<link>http://allenlsy.com/?attachment_id=505</link>
		<pubDate>Sun, 19 Dec 2010 03:33:36 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/12/image.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>505</wp:post_id>
		<wp:post_date>2010-12-19 11:33:36</wp:post_date>
		<wp:post_date_gmt>2010-12-19 03:33:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>image-png-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/12/image.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/12/image.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"630";s:6:"height";s:3:"317";s:14:"hwstring_small";s:23:"height='64' width='128'";s:4:"file";s:17:"2010/12/image.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"image-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"image-300x150.png";s:5:"width";s:3:"300";s:6:"height";s:3:"150";}s:14:"post-thumbnail";a:3:{s:4:"file";s:17:"image-630x288.png";s:5:"width";s:3:"630";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:17:"image-630x288.png";s:5:"width";s:3:"630";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:17:"image-500x251.png";s:5:"width";s:3:"500";s:6:"height";s:3:"251";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391649]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>IMG_0031.jpg</title>
		<link>http://allenlsy.com/?attachment_id=509</link>
		<pubDate>Thu, 30 Dec 2010 06:08:49 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/12/img_0031.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>509</wp:post_id>
		<wp:post_date>2010-12-30 14:08:49</wp:post_date>
		<wp:post_date_gmt>2010-12-30 06:08:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>img_0031-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/12/img_0031.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/12/img_0031.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1024";s:6:"height";s:3:"765";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:20:"2010/12/img_0031.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"img_0031-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"img_0031-300x224.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"224";}s:14:"post-thumbnail";a:3:{s:4:"file";s:21:"img_0031-1000x288.jpg";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:21:"img_0031-1000x288.jpg";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:20:"img_0031-401x300.jpg";s:5:"width";s:3:"401";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391650]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>IMG_0031_thumb.jpg</title>
		<link>http://allenlsy.com/?attachment_id=510</link>
		<pubDate>Thu, 30 Dec 2010 06:08:52 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/12/img_0031_thumb.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>510</wp:post_id>
		<wp:post_date>2010-12-30 14:08:52</wp:post_date>
		<wp:post_date_gmt>2010-12-30 06:08:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>img_0031_thumb-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/12/img_0031_thumb.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/12/img_0031_thumb.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"630";s:6:"height";s:3:"471";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:26:"2010/12/img_0031_thumb.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:26:"img_0031_thumb-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:26:"img_0031_thumb-300x224.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"224";}s:14:"post-thumbnail";a:3:{s:4:"file";s:26:"img_0031_thumb-630x288.jpg";s:5:"width";s:3:"630";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:26:"img_0031_thumb-630x288.jpg";s:5:"width";s:3:"630";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:26:"img_0031_thumb-401x300.jpg";s:5:"width";s:3:"401";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391651]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>IMG_0140</title>
		<link>http://allenlsy.com/2011/04/Redhat-can-guan/img_0140/</link>
		<pubDate>Wed, 13 Apr 2011 16:11:56 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2011/04/img_0140.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>514</wp:post_id>
		<wp:post_date>2011-04-14 00:11:56</wp:post_date>
		<wp:post_date_gmt>2011-04-13 16:11:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>img_0140</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>513</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2011/04/img_0140.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/04/img_0140.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"2592";s:6:"height";s:4:"1936";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:20:"2011/04/img_0140.jpg";s:5:"sizes";a:6:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"img_0140-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"img_0140-300x224.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"224";}s:5:"large";a:3:{s:4:"file";s:21:"img_0140-1024x764.jpg";s:5:"width";s:4:"1024";s:6:"height";s:3:"764";}s:14:"post-thumbnail";a:3:{s:4:"file";s:21:"img_0140-1000x288.jpg";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:21:"img_0140-1000x288.jpg";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:20:"img_0140-401x300.jpg";s:5:"width";s:3:"401";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:3:"2.8";s:6:"credit";s:0:"";s:6:"camera";s:8:"iPhone 4";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1302715500";s:9:"copyright";s:0:"";s:12:"focal_length";s:4:"3.85";s:3:"iso";s:3:"400";s:13:"shutter_speed";s:17:"0.066666666666667";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391655]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>IMG_0142</title>
		<link>http://allenlsy.com/2011/04/Redhat-can-guan/img_0142/</link>
		<pubDate>Wed, 13 Apr 2011 16:13:27 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2011/04/img_0142.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>515</wp:post_id>
		<wp:post_date>2011-04-14 00:13:27</wp:post_date>
		<wp:post_date_gmt>2011-04-13 16:13:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>img_0142</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>513</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2011/04/img_0142.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/04/img_0142.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"2592";s:6:"height";s:4:"1936";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:20:"2011/04/img_0142.jpg";s:5:"sizes";a:6:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"img_0142-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"img_0142-300x224.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"224";}s:5:"large";a:3:{s:4:"file";s:21:"img_0142-1024x764.jpg";s:5:"width";s:4:"1024";s:6:"height";s:3:"764";}s:14:"post-thumbnail";a:3:{s:4:"file";s:21:"img_0142-1000x288.jpg";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:21:"img_0142-1000x288.jpg";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:20:"img_0142-401x300.jpg";s:5:"width";s:3:"401";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:3:"2.8";s:6:"credit";s:0:"";s:6:"camera";s:8:"iPhone 4";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1302715890";s:9:"copyright";s:0:"";s:12:"focal_length";s:4:"3.85";s:3:"iso";s:3:"100";s:13:"shutter_speed";s:17:"0.066666666666667";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391656]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>dsc04066.jpg</title>
		<link>http://allenlsy.com/?attachment_id=521</link>
		<pubDate>Fri, 15 Apr 2011 13:18:48 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2011/04/dsc04066.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[http://allenlsy.com/wp-content/uploads/2011/04/dsc04066.jpg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>521</wp:post_id>
		<wp:post_date>2011-04-15 21:18:48</wp:post_date>
		<wp:post_date_gmt>2011-04-15 13:18:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dsc04066-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2011/04/dsc04066.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/04/dsc04066.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1920";s:6:"height";s:4:"1080";s:14:"hwstring_small";s:23:"height='72' width='128'";s:4:"file";s:20:"2011/04/dsc04066.jpg";s:5:"sizes";a:6:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"dsc04066-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"dsc04066-300x168.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}s:5:"large";a:3:{s:4:"file";s:21:"dsc04066-1024x576.jpg";s:5:"width";s:4:"1024";s:6:"height";s:3:"576";}s:14:"post-thumbnail";a:3:{s:4:"file";s:21:"dsc04066-1000x288.jpg";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:21:"dsc04066-1000x288.jpg";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:20:"dsc04066-500x281.jpg";s:5:"width";s:3:"500";s:6:"height";s:3:"281";}}s:10:"image_meta";a:10:{s:8:"aperture";s:3:"3.5";s:6:"credit";s:0:"";s:6:"camera";s:8:"DSC-T200";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1302644193";s:9:"copyright";s:0:"";s:12:"focal_length";s:3:"5.8";s:3:"iso";s:3:"125";s:13:"shutter_speed";s:5:"0.025";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391657]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>dsc04069.jpg</title>
		<link>http://allenlsy.com/?attachment_id=522</link>
		<pubDate>Fri, 15 Apr 2011 19:16:35 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2011/04/dsc04069.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[http://allenlsy.com/wp-content/uploads/2011/04/dsc04069.jpg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>522</wp:post_id>
		<wp:post_date>2011-04-16 03:16:35</wp:post_date>
		<wp:post_date_gmt>2011-04-15 19:16:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dsc04069-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2011/04/dsc04069.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/04/dsc04069.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1440";s:6:"height";s:3:"810";s:14:"hwstring_small";s:23:"height='72' width='128'";s:4:"file";s:20:"2011/04/dsc04069.jpg";s:5:"sizes";a:6:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"dsc04069-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"dsc04069-300x168.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}s:5:"large";a:3:{s:4:"file";s:21:"dsc04069-1024x576.jpg";s:5:"width";s:4:"1024";s:6:"height";s:3:"576";}s:14:"post-thumbnail";a:3:{s:4:"file";s:21:"dsc04069-1000x288.jpg";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:21:"dsc04069-1000x288.jpg";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:20:"dsc04069-500x281.jpg";s:5:"width";s:3:"500";s:6:"height";s:3:"281";}}s:10:"image_meta";a:10:{s:8:"aperture";s:3:"3.5";s:6:"credit";s:0:"";s:6:"camera";s:8:"DSC-T200";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1302923392";s:9:"copyright";s:0:"";s:12:"focal_length";s:3:"5.8";s:3:"iso";s:3:"400";s:13:"shutter_speed";s:17:"0.066666666666667";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391658]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>dsc040691.jpg</title>
		<link>http://allenlsy.com/?attachment_id=523</link>
		<pubDate>Fri, 15 Apr 2011 19:25:24 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2011/04/dsc040691.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[http://allenlsy.com/wp-content/uploads/2011/04/dsc040691.jpg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>523</wp:post_id>
		<wp:post_date>2011-04-16 03:25:24</wp:post_date>
		<wp:post_date_gmt>2011-04-15 19:25:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dsc040691-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2011/04/dsc040691.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/04/dsc040691.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1440";s:6:"height";s:3:"810";s:14:"hwstring_small";s:23:"height='72' width='128'";s:4:"file";s:21:"2011/04/dsc040691.jpg";s:5:"sizes";a:6:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"dsc040691-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:21:"dsc040691-300x168.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}s:5:"large";a:3:{s:4:"file";s:22:"dsc040691-1024x576.jpg";s:5:"width";s:4:"1024";s:6:"height";s:3:"576";}s:14:"post-thumbnail";a:3:{s:4:"file";s:22:"dsc040691-1000x288.jpg";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:22:"dsc040691-1000x288.jpg";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:21:"dsc040691-500x281.jpg";s:5:"width";s:3:"500";s:6:"height";s:3:"281";}}s:10:"image_meta";a:10:{s:8:"aperture";s:3:"3.5";s:6:"credit";s:0:"";s:6:"camera";s:8:"DSC-T200";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1302923392";s:9:"copyright";s:0:"";s:12:"focal_length";s:3:"5.8";s:3:"iso";s:3:"400";s:13:"shutter_speed";s:17:"0.066666666666667";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_is_custom_background</wp:meta_key>
			<wp:meta_value><![CDATA[catch-box]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391659]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Untitled</title>
		<link>http://allenlsy.com/?attachment_id=542</link>
		<pubDate>Tue, 03 May 2011 06:14:11 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2011/05/untitled.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>542</wp:post_id>
		<wp:post_date>2011-05-03 14:14:11</wp:post_date>
		<wp:post_date_gmt>2011-05-03 06:14:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>untitled-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2011/05/untitled.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/untitled.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"566";s:6:"height";s:2:"45";s:14:"hwstring_small";s:23:"height='10' width='128'";s:4:"file";s:20:"2011/05/untitled.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"untitled-150x45.jpg";s:5:"width";s:3:"150";s:6:"height";s:2:"45";}s:6:"medium";a:3:{s:4:"file";s:19:"untitled-300x23.jpg";s:5:"width";s:3:"300";s:6:"height";s:2:"23";}s:13:"small-feature";a:3:{s:4:"file";s:19:"untitled-500x39.jpg";s:5:"width";s:3:"500";s:6:"height";s:2:"39";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391662]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>112610_0756_Chap8Ellipt10npng</title>
		<link>http://allenlsy.com/?attachment_id=608</link>
		<pubDate>Fri, 26 Nov 2010 07:56:55 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt101.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>608</wp:post_id>
		<wp:post_date>2010-11-26 15:56:55</wp:post_date>
		<wp:post_date_gmt>2010-11-26 07:56:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>112610_0756_chap8ellipt10-png-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/11/112610_0756_chap8ellipt101.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/112610_0756_chap8ellipt101.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"396";s:6:"height";s:2:"56";s:14:"hwstring_small";s:23:"height='18' width='128'";s:4:"file";s:38:"2010/11/112610_0756_chap8ellipt101.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"112610_0756_chap8ellipt101-150x56.png";s:5:"width";s:3:"150";s:6:"height";s:2:"56";}s:6:"medium";a:3:{s:4:"file";s:37:"112610_0756_chap8ellipt101-300x42.png";s:5:"width";s:3:"300";s:6:"height";s:2:"42";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391669]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>code2</title>
		<link>http://allenlsy.com/?attachment_id=634</link>
		<pubDate>Thu, 12 Jul 2012 15:23:34 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2012/07/code2.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>634</wp:post_id>
		<wp:post_date>2012-07-12 15:23:34</wp:post_date>
		<wp:post_date_gmt>2012-07-12 15:23:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>code2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2012/07/code2.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/07/code2.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"308";s:6:"height";s:3:"308";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:17:"2012/07/code2.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"code2-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"code2-300x300.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"300";}s:14:"post-thumbnail";a:3:{s:4:"file";s:17:"code2-300x125.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"125";}s:15:"featured-header";a:3:{s:4:"file";s:17:"code2-300x125.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"125";}s:15:"featured-slider";a:3:{s:4:"file";s:17:"code2-308x270.jpg";s:5:"width";s:3:"308";s:6:"height";s:3:"270";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391673]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-bg-banner-math_resize_resize.jpg</title>
		<link>http://allenlsy.com/?attachment_id=635</link>
		<pubDate>Thu, 12 Jul 2012 15:32:14 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2010/09/cropped-bg-banner-math_resize_resize.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[http://allenlsy.com/wp-content/uploads/2010/09/cropped-bg-banner-math_resize_resize.jpg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>635</wp:post_id>
		<wp:post_date>2012-07-12 15:32:14</wp:post_date>
		<wp:post_date_gmt>2012-07-12 15:32:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cropped-bg-banner-math_resize_resize-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2010/09/cropped-bg-banner-math_resize_resize.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/09/cropped-bg-banner-math_resize_resize.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_context</wp:meta_key>
			<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"300";s:6:"height";s:3:"125";s:14:"hwstring_small";s:23:"height='53' width='128'";s:4:"file";s:48:"2010/09/cropped-bg-banner-math_resize_resize.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:48:"cropped-bg-banner-math_resize_resize-150x125.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"125";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_is_custom_header</wp:meta_key>
			<wp:meta_value><![CDATA[catch-box]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391674]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>h_large_J2M8_292e0000694c2f76</title>
		<link>http://allenlsy.com/about-me/h_large_j2m8_292e0000694c2f76/</link>
		<pubDate>Mon, 16 Jul 2012 11:25:53 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2012/07/h_large_J2M8_292e0000694c2f76.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>710</wp:post_id>
		<wp:post_date>2012-07-16 11:25:53</wp:post_date>
		<wp:post_date_gmt>2012-07-16 11:25:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>h_large_j2m8_292e0000694c2f76</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>691</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2012/07/h_large_J2M8_292e0000694c2f76.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/07/h_large_J2M8_292e0000694c2f76.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"242";s:6:"height";s:3:"310";s:14:"hwstring_small";s:22:"height='96' width='74'";s:4:"file";s:41:"2012/07/h_large_J2M8_292e0000694c2f76.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:41:"h_large_J2M8_292e0000694c2f76-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:41:"h_large_J2M8_292e0000694c2f76-234x300.jpg";s:5:"width";s:3:"234";s:6:"height";s:3:"300";}s:14:"post-thumbnail";a:3:{s:4:"file";s:41:"h_large_J2M8_292e0000694c2f76-242x125.jpg";s:5:"width";s:3:"242";s:6:"height";s:3:"125";}s:15:"featured-header";a:3:{s:4:"file";s:41:"h_large_J2M8_292e0000694c2f76-242x125.jpg";s:5:"width";s:3:"242";s:6:"height";s:3:"125";}s:15:"featured-slider";a:3:{s:4:"file";s:41:"h_large_J2M8_292e0000694c2f76-242x270.jpg";s:5:"width";s:3:"242";s:6:"height";s:3:"270";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-mianyang1.jpg</title>
		<link>http://allenlsy.com/?attachment_id=716</link>
		<pubDate>Thu, 26 Jul 2012 12:37:47 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2012/07/cropped-mianyang1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[http://allenlsy.com/wp-content/uploads/2012/07/cropped-mianyang1.jpg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>716</wp:post_id>
		<wp:post_date>2012-07-26 12:37:47</wp:post_date>
		<wp:post_date_gmt>2012-07-26 12:37:47</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cropped-mianyang1-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2012/07/cropped-mianyang1.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/07/cropped-mianyang1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_context</wp:meta_key>
			<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"300";s:6:"height";s:3:"125";s:14:"hwstring_small";s:23:"height='53' width='128'";s:4:"file";s:29:"2012/07/cropped-mianyang1.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:29:"cropped-mianyang1-150x125.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"125";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_is_custom_header</wp:meta_key>
			<wp:meta_value><![CDATA[catch-box]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Cookie</title>
		<link>http://allenlsy.com/?attachment_id=718</link>
		<pubDate>Mon, 30 Jul 2012 11:45:54 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2012/07/Cookie6.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[This is a cookie]]></excerpt:encoded>
		<wp:post_id>718</wp:post_id>
		<wp:post_date>2012-07-30 11:45:54</wp:post_date>
		<wp:post_date_gmt>2012-07-30 11:45:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cookie</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2012/07/Cookie6.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/07/Cookie6.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"382";s:6:"height";s:3:"380";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:19:"2012/07/Cookie6.gif";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"Cookie6-150x150.gif";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:19:"Cookie6-300x298.gif";s:5:"width";s:3:"300";s:6:"height";s:3:"298";}s:14:"post-thumbnail";a:3:{s:4:"file";s:19:"Cookie6-300x125.gif";s:5:"width";s:3:"300";s:6:"height";s:3:"125";}s:15:"featured-header";a:3:{s:4:"file";s:19:"Cookie6-300x125.gif";s:5:"width";s:3:"300";s:6:"height";s:3:"125";}s:15:"featured-slider";a:3:{s:4:"file";s:19:"Cookie6-382x270.gif";s:5:"width";s:3:"382";s:6:"height";s:3:"270";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>al96</title>
		<link>http://allenlsy.com/?attachment_id=720</link>
		<pubDate>Mon, 13 Aug 2012 09:05:59 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2012/08/al966.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>720</wp:post_id>
		<wp:post_date>2012-08-13 09:05:59</wp:post_date>
		<wp:post_date_gmt>2012-08-13 09:05:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>al96</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2012/08/al966.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/08/al966.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"370";s:6:"height";s:3:"370";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:17:"2012/08/al966.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"al966-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"al966-300x300.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"300";}s:14:"post-thumbnail";a:3:{s:4:"file";s:17:"al966-300x125.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"125";}s:15:"featured-header";a:3:{s:4:"file";s:17:"al966-300x125.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"125";}s:15:"featured-slider";a:3:{s:4:"file";s:17:"al966-370x270.jpg";s:5:"width";s:3:"370";s:6:"height";s:3:"270";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>al_2_120_2</title>
		<link>http://allenlsy.com/?attachment_id=721</link>
		<pubDate>Mon, 13 Aug 2012 11:01:29 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2012/08/al_2_120_26.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>721</wp:post_id>
		<wp:post_date>2012-08-13 11:01:29</wp:post_date>
		<wp:post_date_gmt>2012-08-13 11:01:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>al_2_120_2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2012/08/al_2_120_26.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/08/al_2_120_26.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"424";s:6:"height";s:3:"424";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:23:"2012/08/al_2_120_26.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"al_2_120_26-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:23:"al_2_120_26-300x300.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"300";}s:14:"post-thumbnail";a:3:{s:4:"file";s:23:"al_2_120_26-300x125.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"125";}s:15:"featured-header";a:3:{s:4:"file";s:23:"al_2_120_26-300x125.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"125";}s:15:"featured-slider";a:3:{s:4:"file";s:23:"al_2_120_26-424x270.jpg";s:5:"width";s:3:"424";s:6:"height";s:3:"270";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>WcfOverviewDiagram_thumb_8</title>
		<link>http://allenlsy.com/2011/06/net-4-0-zhong-chu-xian-de-ji-ge-service-de-qu-bie-he-jie-shi/wcfoverviewdiagram_thumb_8/</link>
		<pubDate>Sun, 02 Sep 2012 08:26:23 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2012/09/WcfOverviewDiagram_thumb_8.png</guid>
		<description></description>
		<content:encoded><![CDATA[WcfOverviewDiagram_thumb_8]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>726</wp:post_id>
		<wp:post_date>2012-09-02 08:26:23</wp:post_date>
		<wp:post_date_gmt>2012-09-02 08:26:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wcfoverviewdiagram_thumb_8</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>559</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2012/09/WcfOverviewDiagram_thumb_8.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/09/WcfOverviewDiagram_thumb_8.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"484";s:6:"height";s:3:"364";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:38:"2012/09/WcfOverviewDiagram_thumb_8.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:38:"WcfOverviewDiagram_thumb_8-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:38:"WcfOverviewDiagram_thumb_8-300x225.png";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-52563357201007280927402779944345522_018.jpg</title>
		<link>http://allenlsy.com/?attachment_id=732</link>
		<pubDate>Sun, 02 Sep 2012 12:34:30 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2012/09/cropped-52563357201007280927402779944345522_018.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[http://allenlsy.com/wp-content/uploads/2012/09/cropped-52563357201007280927402779944345522_018.jpg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>732</wp:post_id>
		<wp:post_date>2012-09-02 12:34:30</wp:post_date>
		<wp:post_date_gmt>2012-09-02 12:34:30</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cropped-52563357201007280927402779944345522_018-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2012/09/cropped-52563357201007280927402779944345522_018.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/09/cropped-52563357201007280927402779944345522_018.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_context</wp:meta_key>
			<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"960";s:6:"height";s:3:"200";s:14:"hwstring_small";s:23:"height='26' width='128'";s:4:"file";s:59:"2012/09/cropped-52563357201007280927402779944345522_018.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:59:"cropped-52563357201007280927402779944345522_018-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:58:"cropped-52563357201007280927402779944345522_018-300x62.jpg";s:5:"width";s:3:"300";s:6:"height";s:2:"62";}s:14:"post-thumbnail";a:3:{s:4:"file";s:59:"cropped-52563357201007280927402779944345522_018-640x200.jpg";s:5:"width";s:3:"640";s:6:"height";s:3:"200";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_is_custom_header</wp:meta_key>
			<wp:meta_value><![CDATA[mon-cahier]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1</title>
		<link>http://allenlsy.com/2012/09/admems-jia-gou-fang-fa-1-zong-shu/1-8/</link>
		<pubDate>Fri, 14 Sep 2012 05:41:27 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2012/09/1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>767</wp:post_id>
		<wp:post_date>2012-09-14 13:41:27</wp:post_date>
		<wp:post_date_gmt>2012-09-14 05:41:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1-8</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>762</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2012/09/1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/09/1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"705";s:6:"height";s:3:"297";s:14:"hwstring_small";s:23:"height='53' width='128'";s:4:"file";s:13:"2012/09/1.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:13:"1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:13:"1-300x126.png";s:5:"width";s:3:"300";s:6:"height";s:3:"126";}s:14:"post-thumbnail";a:3:{s:4:"file";s:13:"1-640x200.png";s:5:"width";s:3:"640";s:6:"height";s:3:"200";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>二维需求观</title>
		<link>http://allenlsy.com/2012/09/admems-jia-gou-fang-fa-2-pre-architecture/2-6/</link>
		<pubDate>Fri, 14 Sep 2012 06:59:37 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2012/09/2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[二维需求观]]></excerpt:encoded>
		<wp:post_id>777</wp:post_id>
		<wp:post_date>2012-09-14 14:59:37</wp:post_date>
		<wp:post_date_gmt>2012-09-14 06:59:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2-6</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>775</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2012/09/2.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/09/2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"300";s:6:"height";s:3:"234";s:14:"hwstring_small";s:23:"height='96' width='123'";s:4:"file";s:13:"2012/09/2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:13:"2-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:14:"post-thumbnail";a:3:{s:4:"file";s:13:"2-300x200.png";s:5:"width";s:3:"300";s:6:"height";s:3:"200";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2</title>
		<link>http://allenlsy.com/2012/09/admems-jia-gou-fang-fa-2-pre-architecture/2-7/</link>
		<pubDate>Fri, 14 Sep 2012 07:00:39 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2012/09/21.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>778</wp:post_id>
		<wp:post_date>2012-09-14 15:00:39</wp:post_date>
		<wp:post_date_gmt>2012-09-14 07:00:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2-7</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>775</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2012/09/21.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/09/21.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"300";s:6:"height";s:3:"234";s:14:"hwstring_small";s:23:"height='96' width='123'";s:4:"file";s:14:"2012/09/21.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:14:"21-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:14:"post-thumbnail";a:3:{s:4:"file";s:14:"21-300x200.png";s:5:"width";s:3:"300";s:6:"height";s:3:"200";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>二维需求观</title>
		<link>http://allenlsy.com/2012/09/admems-jia-gou-fang-fa-2-pre-architecture/2-8/</link>
		<pubDate>Fri, 14 Sep 2012 07:01:02 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2012/09/22.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[二维需求观]]></excerpt:encoded>
		<wp:post_id>779</wp:post_id>
		<wp:post_date>2012-09-14 15:01:02</wp:post_date>
		<wp:post_date_gmt>2012-09-14 07:01:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2-8</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>775</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2012/09/22.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/09/22.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"300";s:6:"height";s:3:"202";s:14:"hwstring_small";s:23:"height='86' width='128'";s:4:"file";s:14:"2012/09/22.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:14:"22-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:14:"post-thumbnail";a:3:{s:4:"file";s:14:"22-300x200.png";s:5:"width";s:3:"300";s:6:"height";s:3:"200";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>需求层次-需求方面矩阵</title>
		<link>http://allenlsy.com/2012/09/admems-jia-gou-fang-fa-2-pre-architecture/3-4/</link>
		<pubDate>Fri, 14 Sep 2012 07:04:51 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2012/09/3.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[需求层次-需求方面矩阵]]></excerpt:encoded>
		<wp:post_id>780</wp:post_id>
		<wp:post_date>2012-09-14 15:04:51</wp:post_date>
		<wp:post_date_gmt>2012-09-14 07:04:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>3-4</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>775</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2012/09/3.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/09/3.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"631";s:6:"height";s:3:"394";s:14:"hwstring_small";s:23:"height='79' width='128'";s:4:"file";s:13:"2012/09/3.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:13:"3-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:13:"3-300x187.png";s:5:"width";s:3:"300";s:6:"height";s:3:"187";}s:14:"post-thumbnail";a:3:{s:4:"file";s:13:"3-631x200.png";s:5:"width";s:3:"631";s:6:"height";s:3:"200";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>mianyang banner</title>
		<link>http://allenlsy.com/?attachment_id=819</link>
		<pubDate>Fri, 21 Sep 2012 01:52:04 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2012/09/mianyang-banner.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>819</wp:post_id>
		<wp:post_date>2012-09-21 09:52:04</wp:post_date>
		<wp:post_date_gmt>2012-09-21 01:52:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mianyang-banner</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2012/09/mianyang-banner.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/09/mianyang-banner.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"960";s:6:"height";s:3:"200";s:14:"hwstring_small";s:23:"height='26' width='128'";s:4:"file";s:27:"2012/09/mianyang-banner.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:27:"mianyang-banner-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:26:"mianyang-banner-300x62.jpg";s:5:"width";s:3:"300";s:6:"height";s:2:"62";}s:14:"post-thumbnail";a:3:{s:4:"file";s:27:"mianyang-banner-640x200.jpg";s:5:"width";s:3:"640";s:6:"height";s:3:"200";}}s:10:"image_meta";a:10:{s:8:"aperture";s:2:"11";s:6:"credit";s:0:"";s:6:"camera";s:9:"NIKON D90";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1277153214";s:9:"copyright";s:0:"";s:12:"focal_length";s:2:"18";s:3:"iso";s:3:"200";s:13:"shutter_speed";s:2:"30";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_is_custom_header</wp:meta_key>
			<wp:meta_value><![CDATA[mon-cahier]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-mianyang-banner1.jpg</title>
		<link>http://allenlsy.com/?attachment_id=820</link>
		<pubDate>Fri, 21 Sep 2012 04:57:58 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2012/09/cropped-mianyang-banner1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[http://allenlsy.com/wp-content/uploads/2012/09/cropped-mianyang-banner1.jpg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>820</wp:post_id>
		<wp:post_date>2012-09-21 12:57:58</wp:post_date>
		<wp:post_date_gmt>2012-09-21 04:57:58</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cropped-mianyang-banner1-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2012/09/cropped-mianyang-banner1.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/09/cropped-mianyang-banner1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_context</wp:meta_key>
			<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"960";s:6:"height";s:3:"199";s:14:"hwstring_small";s:23:"height='26' width='128'";s:4:"file";s:36:"2012/09/cropped-mianyang-banner1.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:36:"cropped-mianyang-banner1-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:35:"cropped-mianyang-banner1-300x62.jpg";s:5:"width";s:3:"300";s:6:"height";s:2:"62";}s:14:"post-thumbnail";a:3:{s:4:"file";s:36:"cropped-mianyang-banner1-640x199.jpg";s:5:"width";s:3:"640";s:6:"height";s:3:"199";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_is_custom_header</wp:meta_key>
			<wp:meta_value><![CDATA[mon-cahier]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_63d791a4e6accd32a04875f12e6296b9</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>al_2_120_2</title>
		<link>http://allenlsy.com/?attachment_id=827</link>
		<pubDate>Tue, 09 Oct 2012 16:12:18 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2012/10/al_2_120_2.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>827</wp:post_id>
		<wp:post_date>2012-10-10 00:12:18</wp:post_date>
		<wp:post_date_gmt>2012-10-09 16:12:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>al-2-120-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2012/10/al_2_120_2.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/10/al_2_120_2.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"424";s:6:"height";s:3:"424";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:22:"2012/10/al_2_120_2.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"al_2_120_2-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:22:"al_2_120_2-300x300.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"300";}s:14:"post-thumbnail";a:3:{s:4:"file";s:22:"al_2_120_2-424x200.jpg";s:5:"width";s:3:"424";s:6:"height";s:3:"200";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>mianyang banner</title>
		<link>http://allenlsy.com/?attachment_id=828</link>
		<pubDate>Wed, 10 Oct 2012 01:27:25 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2012/10/mianyang-banner.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>828</wp:post_id>
		<wp:post_date>2012-10-10 09:27:25</wp:post_date>
		<wp:post_date_gmt>2012-10-10 01:27:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mianyang-banner-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2012/10/mianyang-banner.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/10/mianyang-banner.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"4286";s:6:"height";s:3:"807";s:14:"hwstring_small";s:23:"height='24' width='128'";s:4:"file";s:27:"2012/10/mianyang-banner.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:3:{s:4:"file";s:27:"mianyang-banner-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:26:"mianyang-banner-300x56.jpg";s:5:"width";s:3:"300";s:6:"height";s:2:"56";}s:5:"large";a:3:{s:4:"file";s:28:"mianyang-banner-1024x192.jpg";s:5:"width";s:4:"1024";s:6:"height";s:3:"192";}s:14:"post-thumbnail";a:3:{s:4:"file";s:27:"mianyang-banner-640x200.jpg";s:5:"width";s:3:"640";s:6:"height";s:3:"200";}}s:10:"image_meta";a:10:{s:8:"aperture";s:2:"11";s:6:"credit";s:0:"";s:6:"camera";s:9:"NIKON D90";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1277153214";s:9:"copyright";s:0:"";s:12:"focal_length";s:2:"18";s:3:"iso";s:3:"200";s:13:"shutter_speed";s:2:"30";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>多阶段方法</title>
		<link>http://allenlsy.com/2012/09/admems-jia-gou-fang-fa-1-zong-shu/screen-shot-2012-10-23-at-11-07-33-pm/</link>
		<pubDate>Tue, 23 Oct 2012 15:34:38 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2012/09/Screen-Shot-2012-10-23-at-11.07.33-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>831</wp:post_id>
		<wp:post_date>2012-10-23 23:34:38</wp:post_date>
		<wp:post_date_gmt>2012-10-23 15:34:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2012-10-23-at-11-07-33-pm</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>762</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2012/09/Screen-Shot-2012-10-23-at-11.07.33-PM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/09/Screen-Shot-2012-10-23-at-11.07.33-PM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"478";s:6:"height";s:3:"196";s:14:"hwstring_small";s:23:"height='52' width='128'";s:4:"file";s:49:"2012/09/Screen-Shot-2012-10-23-at-11.07.33-PM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:49:"Screen-Shot-2012-10-23-at-11.07.33-PM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:49:"Screen-Shot-2012-10-23-at-11.07.33-PM-300x123.png";s:5:"width";s:3:"300";s:6:"height";s:3:"123";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>二维需求观</title>
		<link>http://allenlsy.com/2012/09/admems-jia-gou-fang-fa-2-pre-architecture/screen-shot-2012-10-24-at-12-08-49-am/</link>
		<pubDate>Tue, 23 Oct 2012 16:07:52 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2012/09/Screen-Shot-2012-10-24-at-12.08.49-AM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>833</wp:post_id>
		<wp:post_date>2012-10-24 00:07:52</wp:post_date>
		<wp:post_date_gmt>2012-10-23 16:07:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2012-10-24-at-12-08-49-am</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>775</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2012/09/Screen-Shot-2012-10-24-at-12.08.49-AM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/09/Screen-Shot-2012-10-24-at-12.08.49-AM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"323";s:6:"height";s:3:"219";s:14:"hwstring_small";s:23:"height='86' width='128'";s:4:"file";s:49:"2012/09/Screen-Shot-2012-10-24-at-12.08.49-AM.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:49:"Screen-Shot-2012-10-24-at-12.08.49-AM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:49:"Screen-Shot-2012-10-24-at-12.08.49-AM-300x203.png";s:5:"width";s:3:"300";s:6:"height";s:3:"203";}s:14:"post-thumbnail";a:3:{s:4:"file";s:49:"Screen-Shot-2012-10-24-at-12.08.49-AM-323x200.png";s:5:"width";s:3:"323";s:6:"height";s:3:"200";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>需求方面矩阵</title>
		<link>http://allenlsy.com/2012/09/admems-jia-gou-fang-fa-2-pre-architecture/screen-shot-2012-10-24-at-12-10-45-am/</link>
		<pubDate>Tue, 23 Oct 2012 16:09:54 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2012/09/Screen-Shot-2012-10-24-at-12.10.45-AM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>834</wp:post_id>
		<wp:post_date>2012-10-24 00:09:54</wp:post_date>
		<wp:post_date_gmt>2012-10-23 16:09:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2012-10-24-at-12-10-45-am</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>775</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2012/09/Screen-Shot-2012-10-24-at-12.10.45-AM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/09/Screen-Shot-2012-10-24-at-12.10.45-AM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"676";s:6:"height";s:3:"423";s:14:"hwstring_small";s:23:"height='80' width='128'";s:4:"file";s:49:"2012/09/Screen-Shot-2012-10-24-at-12.10.45-AM.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:49:"Screen-Shot-2012-10-24-at-12.10.45-AM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:49:"Screen-Shot-2012-10-24-at-12.10.45-AM-300x187.png";s:5:"width";s:3:"300";s:6:"height";s:3:"187";}s:14:"post-thumbnail";a:3:{s:4:"file";s:49:"Screen-Shot-2012-10-24-at-12.10.45-AM-640x200.png";s:5:"width";s:3:"640";s:6:"height";s:3:"200";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen Shot 2012-10-24 at 8.24.16 PM</title>
		<link>http://allenlsy.com/about-me/screen-shot-2012-10-24-at-8-24-16-pm/</link>
		<pubDate>Wed, 24 Oct 2012 12:23:34 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2012/07/Screen-Shot-2012-10-24-at-8.24.16-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>840</wp:post_id>
		<wp:post_date>2012-10-24 20:23:34</wp:post_date>
		<wp:post_date_gmt>2012-10-24 12:23:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen-shot-2012-10-24-at-8-24-16-pm</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>691</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2012/07/Screen-Shot-2012-10-24-at-8.24.16-PM.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/07/Screen-Shot-2012-10-24-at-8.24.16-PM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"778";s:6:"height";s:4:"1028";s:14:"hwstring_small";s:22:"height='96' width='72'";s:4:"file";s:48:"2012/07/Screen-Shot-2012-10-24-at-8.24.16-PM.png";s:5:"sizes";a:4:{s:9:"thumbnail";a:3:{s:4:"file";s:48:"Screen-Shot-2012-10-24-at-8.24.16-PM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:48:"Screen-Shot-2012-10-24-at-8.24.16-PM-227x300.png";s:5:"width";s:3:"227";s:6:"height";s:3:"300";}s:5:"large";a:3:{s:4:"file";s:49:"Screen-Shot-2012-10-24-at-8.24.16-PM-774x1024.png";s:5:"width";s:3:"774";s:6:"height";s:4:"1024";}s:14:"post-thumbnail";a:3:{s:4:"file";s:48:"Screen-Shot-2012-10-24-at-8.24.16-PM-640x200.png";s:5:"width";s:3:"640";s:6:"height";s:3:"200";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://allenlsy.com/2012/07/494/</link>
		<pubDate>Thu, 12 Jul 2012 01:30:26 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=494</guid>
		<description></description>
		<content:encoded><![CDATA[算法，数据结构]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>494</wp:post_id>
		<wp:post_date>2012-07-12 01:30:26</wp:post_date>
		<wp:post_date_gmt>2012-07-12 01:30:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>494</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="directorybar"><![CDATA[DirectoryBar]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://allenlsy.com/2012/07/496/</link>
		<pubDate>Thu, 12 Jul 2012 01:30:26 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=496</guid>
		<description></description>
		<content:encoded><![CDATA[多边形，多面体，凸包…]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>496</wp:post_id>
		<wp:post_date>2012-07-12 01:30:26</wp:post_date>
		<wp:post_date_gmt>2012-07-12 01:30:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>496</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>3</wp:post_parent>
		<wp:menu_order>3</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="directorybar"><![CDATA[DirectoryBar]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[494]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://allenlsy.com/2012/07/497/</link>
		<pubDate>Thu, 12 Jul 2012 01:30:26 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=497</guid>
		<description></description>
		<content:encoded><![CDATA[线性结构，各种树（Trie, 线段树…)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>497</wp:post_id>
		<wp:post_date>2012-07-12 01:30:26</wp:post_date>
		<wp:post_date_gmt>2012-07-12 01:30:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>497</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>3</wp:post_parent>
		<wp:menu_order>4</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="directorybar"><![CDATA[DirectoryBar]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[494]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://allenlsy.com/2012/07/498/</link>
		<pubDate>Thu, 12 Jul 2012 01:30:26 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=498</guid>
		<description></description>
		<content:encoded><![CDATA[基本的知识点是很多的，网络流，二分图]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>498</wp:post_id>
		<wp:post_date>2012-07-12 01:30:26</wp:post_date>
		<wp:post_date_gmt>2012-07-12 01:30:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>498</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>3</wp:post_parent>
		<wp:menu_order>5</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="directorybar"><![CDATA[DirectoryBar]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[494]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[9]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://allenlsy.com/2012/07/543/</link>
		<pubDate>Thu, 12 Jul 2012 01:30:47 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=543</guid>
		<description></description>
		<content:encoded><![CDATA[痛苦，伟大，重生：尘世间一迷途小书童]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>543</wp:post_id>
		<wp:post_date>2012-07-12 01:30:47</wp:post_date>
		<wp:post_date_gmt>2012-07-12 01:30:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>543</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>14</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="directorybar"><![CDATA[DirectoryBar]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://allenlsy.com/2012/07/610/</link>
		<pubDate>Thu, 12 Jul 2012 01:37:15 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=610</guid>
		<description></description>
		<content:encoded><![CDATA[枚举，贪心，递归，递推，模拟，搜索，动态规划]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>610</wp:post_id>
		<wp:post_date>2012-07-12 01:37:15</wp:post_date>
		<wp:post_date_gmt>2012-07-12 01:37:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>610</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>3</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="directorybar"><![CDATA[DirectoryBar]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[494]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>01</title>
		<link>http://allenlsy.com/2012/11/admems-jia-gou-fang-fa-3-conceptual-architecture/attachment/01/</link>
		<pubDate>Fri, 02 Nov 2012 08:41:22 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2012/11/01.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>845</wp:post_id>
		<wp:post_date>2012-11-02 16:41:22</wp:post_date>
		<wp:post_date_gmt>2012-11-02 08:41:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>01</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>844</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2012/11/01.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/11/01.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"330";s:6:"height";s:3:"244";s:14:"hwstring_small";s:23:"height='94' width='128'";s:4:"file";s:14:"2012/11/01.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:14:"01-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:14:"01-300x221.png";s:5:"width";s:3:"300";s:6:"height";s:3:"221";}s:14:"post-thumbnail";a:3:{s:4:"file";s:14:"01-330x200.png";s:5:"width";s:3:"330";s:6:"height";s:3:"200";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>02</title>
		<link>http://allenlsy.com/2012/11/admems-jia-gou-fang-fa-3-conceptual-architecture/attachment/02/</link>
		<pubDate>Fri, 02 Nov 2012 08:59:07 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2012/11/02.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>846</wp:post_id>
		<wp:post_date>2012-11-02 16:59:07</wp:post_date>
		<wp:post_date_gmt>2012-11-02 08:59:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>02</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>844</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2012/11/02.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/11/02.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"496";s:6:"height";s:3:"238";s:14:"hwstring_small";s:23:"height='61' width='128'";s:4:"file";s:14:"2012/11/02.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:14:"02-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:14:"02-300x143.png";s:5:"width";s:3:"300";s:6:"height";s:3:"143";}s:14:"post-thumbnail";a:3:{s:4:"file";s:14:"02-496x200.png";s:5:"width";s:3:"496";s:6:"height";s:3:"200";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>03</title>
		<link>http://allenlsy.com/2012/11/admems-jia-gou-fang-fa-3-conceptual-architecture/attachment/03/</link>
		<pubDate>Fri, 02 Nov 2012 09:04:38 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2012/11/03.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>847</wp:post_id>
		<wp:post_date>2012-11-02 17:04:38</wp:post_date>
		<wp:post_date_gmt>2012-11-02 09:04:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>03</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>844</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2012/11/03.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/11/03.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"485";s:6:"height";s:3:"323";s:14:"hwstring_small";s:23:"height='85' width='128'";s:4:"file";s:14:"2012/11/03.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:14:"03-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:14:"03-300x199.png";s:5:"width";s:3:"300";s:6:"height";s:3:"199";}s:14:"post-thumbnail";a:3:{s:4:"file";s:14:"03-485x200.png";s:5:"width";s:3:"485";s:6:"height";s:3:"200";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>04</title>
		<link>http://allenlsy.com/2012/11/admems-jia-gou-fang-fa-3-conceptual-architecture/attachment/04/</link>
		<pubDate>Fri, 02 Nov 2012 09:05:27 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2012/11/04.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>848</wp:post_id>
		<wp:post_date>2012-11-02 17:05:27</wp:post_date>
		<wp:post_date_gmt>2012-11-02 09:05:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>04</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>844</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2012/11/04.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/11/04.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"562";s:6:"height";s:3:"502";s:14:"hwstring_small";s:23:"height='96' width='107'";s:4:"file";s:14:"2012/11/04.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:14:"04-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:14:"04-300x267.png";s:5:"width";s:3:"300";s:6:"height";s:3:"267";}s:14:"post-thumbnail";a:3:{s:4:"file";s:14:"04-562x200.png";s:5:"width";s:3:"562";s:6:"height";s:3:"200";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>04</title>
		<link>http://allenlsy.com/2012/11/admems-jia-gou-fang-fa-3-conceptual-architecture/04-2/</link>
		<pubDate>Fri, 02 Nov 2012 09:06:13 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2012/11/041.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>849</wp:post_id>
		<wp:post_date>2012-11-02 17:06:13</wp:post_date>
		<wp:post_date_gmt>2012-11-02 09:06:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>04-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>844</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2012/11/041.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/11/041.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"455";s:6:"height";s:3:"301";s:14:"hwstring_small";s:23:"height='84' width='128'";s:4:"file";s:15:"2012/11/041.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:15:"041-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:15:"041-300x198.png";s:5:"width";s:3:"300";s:6:"height";s:3:"198";}s:14:"post-thumbnail";a:3:{s:4:"file";s:15:"041-455x200.png";s:5:"width";s:3:"455";s:6:"height";s:3:"200";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>05</title>
		<link>http://allenlsy.com/2012/11/admems-jia-gou-fang-fa-3-conceptual-architecture/attachment/05/</link>
		<pubDate>Fri, 02 Nov 2012 09:19:08 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2012/11/05.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>850</wp:post_id>
		<wp:post_date>2012-11-02 17:19:08</wp:post_date>
		<wp:post_date_gmt>2012-11-02 09:19:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>05</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>844</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2012/11/05.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/11/05.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"575";s:6:"height";s:3:"213";s:14:"hwstring_small";s:23:"height='47' width='128'";s:4:"file";s:14:"2012/11/05.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:14:"05-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:14:"05-300x111.png";s:5:"width";s:3:"300";s:6:"height";s:3:"111";}s:14:"post-thumbnail";a:3:{s:4:"file";s:14:"05-575x200.png";s:5:"width";s:3:"575";s:6:"height";s:3:"200";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>within-temptation</title>
		<link>http://allenlsy.com/2012/11/hand-of-sorrow-by-within-temptation/within-temptation-within-temptation-15412356-1280-800/</link>
		<pubDate>Sun, 11 Nov 2012 06:07:12 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2012/11/within-temptation-within-temptation-15412356-1280-800.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>871</wp:post_id>
		<wp:post_date>2012-11-11 14:07:12</wp:post_date>
		<wp:post_date_gmt>2012-11-11 06:07:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>within-temptation-within-temptation-15412356-1280-800</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>864</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2012/11/within-temptation-within-temptation-15412356-1280-800.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/11/within-temptation-within-temptation-15412356-1280-800.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1280";s:6:"height";s:3:"800";s:14:"hwstring_small";s:23:"height='80' width='128'";s:4:"file";s:65:"2012/11/within-temptation-within-temptation-15412356-1280-800.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:3:{s:4:"file";s:65:"within-temptation-within-temptation-15412356-1280-800-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:65:"within-temptation-within-temptation-15412356-1280-800-300x187.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"187";}s:5:"large";a:3:{s:4:"file";s:66:"within-temptation-within-temptation-15412356-1280-800-1024x640.jpg";s:5:"width";s:4:"1024";s:6:"height";s:3:"640";}s:14:"post-thumbnail";a:3:{s:4:"file";s:65:"within-temptation-within-temptation-15412356-1280-800-640x200.jpg";s:5:"width";s:3:"640";s:6:"height";s:3:"200";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>convert-0 2</title>
		<link>http://allenlsy.com/?attachment_id=965</link>
		<pubDate>Sat, 04 May 2013 05:47:34 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2013/05/convert-0-2.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>965</wp:post_id>
		<wp:post_date>2013-05-04 13:47:34</wp:post_date>
		<wp:post_date_gmt>2013-05-04 05:47:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>convert-0-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2013/05/convert-0-2.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/05/convert-0-2.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1000;s:6:"height";i:302;s:4:"file";s:23:"2013/05/convert-0-2.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:23:"convert-0-2-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:22:"convert-0-2-300x90.jpg";s:5:"width";i:300;s:6:"height";i:90;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:23:"convert-0-2-640x200.jpg";s:5:"width";i:640;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-convert-0-2.jpg</title>
		<link>http://allenlsy.com/?attachment_id=966</link>
		<pubDate>Sat, 04 May 2013 05:48:29 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2013/05/cropped-convert-0-2.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[http://allenlsy.com/wp-content/uploads/2013/05/cropped-convert-0-2.jpg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>966</wp:post_id>
		<wp:post_date>2013-05-04 13:48:29</wp:post_date>
		<wp:post_date_gmt>2013-05-04 05:48:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cropped-convert-0-2-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2013/05/cropped-convert-0-2.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/05/cropped-convert-0-2.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_context</wp:meta_key>
			<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:960;s:6:"height";i:200;s:4:"file";s:31:"2013/05/cropped-convert-0-2.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:31:"cropped-convert-0-2-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:30:"cropped-convert-0-2-300x62.jpg";s:5:"width";i:300;s:6:"height";i:62;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:31:"cropped-convert-0-2-640x200.jpg";s:5:"width";i:640;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_is_custom_header</wp:meta_key>
			<wp:meta_value><![CDATA[mon-cahier]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_9a05fbe716cfcf198a4c02cc998d6638</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Effective_Java</title>
		<link>http://allenlsy.com/2013/05/notes-of-effective-java-6-methods/effective-java/</link>
		<pubDate>Thu, 16 May 2013 06:14:31 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2013/05/Effective_Java.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1011</wp:post_id>
		<wp:post_date>2013-05-16 14:14:31</wp:post_date>
		<wp:post_date_gmt>2013-05-16 06:14:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>effective-java</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1010</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2013/05/Effective_Java.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/05/Effective_Java.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:250;s:6:"height";i:294;s:4:"file";s:26:"2013/05/Effective_Java.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:26:"Effective_Java-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:26:"Effective_Java-250x200.jpg";s:5:"width";i:250;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>pic1</title>
		<link>http://allenlsy.com/2013/05/c-essence-1-x86-assembly-programming-basic/pic1/</link>
		<pubDate>Sat, 18 May 2013 03:26:44 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2013/05/pic1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1026</wp:post_id>
		<wp:post_date>2013-05-18 11:26:44</wp:post_date>
		<wp:post_date_gmt>2013-05-18 03:26:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pic1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1023</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2013/05/pic1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/05/pic1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:571;s:6:"height";i:463;s:4:"file";s:16:"2013/05/pic1.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:16:"pic1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:16:"pic1-300x243.png";s:5:"width";i:300;s:6:"height";i:243;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:16:"pic1-571x200.png";s:5:"width";i:571;s:6:"height";i:200;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>pic1</title>
		<link>http://allenlsy.com/2013/05/c-essence-2-c-and-assembly/pic1-2/</link>
		<pubDate>Sat, 18 May 2013 13:32:45 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/wp-content/uploads/2013/05/pic11.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1032</wp:post_id>
		<wp:post_date>2013-05-18 21:32:45</wp:post_date>
		<wp:post_date_gmt>2013-05-18 13:32:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pic1-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1031</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2013/05/pic11.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/05/pic11.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:553;s:6:"height";i:314;s:4:"file";s:17:"2013/05/pic11.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:17:"pic11-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:17:"pic11-300x170.png";s:5:"width";i:300;s:6:"height";i:170;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:17:"pic11-553x200.png";s:5:"width";i:553;s:6:"height";i:200;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>foto-1.jpg</title>
		<link>http://allenlsy.com/2013/07/gallery/foto-1-jpg/</link>
		<pubDate>Tue, 23 Jul 2013 08:23:06 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false"></guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1076</wp:post_id>
		<wp:post_date>2013-07-23 16:23:06</wp:post_date>
		<wp:post_date_gmt>2013-07-23 08:23:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>foto-1-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1075</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2013/07/foto-1.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/07/foto-1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1355;s:6:"height";i:900;s:4:"file";s:18:"2013/07/foto-1.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:18:"foto-1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:18:"foto-1-300x199.jpg";s:5:"width";i:300;s:6:"height";i:199;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:19:"foto-1-1024x680.jpg";s:5:"width";i:1024;s:6:"height";i:680;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:18:"foto-1-640x200.jpg";s:5:"width";i:640;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";d:6.29999999999999982236431605997495353221893310546875;s:6:"credit";s:0:"";s:6:"camera";s:9:"NIKON D90";s:7:"caption";s:0:"";s:17:"created_timestamp";i:1370951864;s:9:"copyright";s:0:"";s:12:"focal_length";s:2:"80";s:3:"iso";i:0;s:13:"shutter_speed";s:5:"0.001";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>gllr_link_url</wp:meta_key>
			<wp:meta_value><![CDATA[daf]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>foto-0.jpg</title>
		<link>http://allenlsy.com/2013/07/gallery/foto-0-jpg/</link>
		<pubDate>Tue, 23 Jul 2013 08:23:06 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false"></guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1077</wp:post_id>
		<wp:post_date>2013-07-23 16:23:06</wp:post_date>
		<wp:post_date_gmt>2013-07-23 08:23:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>foto-0-jpg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1075</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://allenlsy.com/wp-content/uploads/2013/07/foto-0.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/07/foto-0.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:900;s:6:"height";i:1355;s:4:"file";s:18:"2013/07/foto-0.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:18:"foto-0-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:18:"foto-0-199x300.jpg";s:5:"width";i:199;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:19:"foto-0-680x1024.jpg";s:5:"width";i:680;s:6:"height";i:1024;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:18:"foto-0-640x200.jpg";s:5:"width";i:640;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:10:{s:8:"aperture";d:4;s:6:"credit";s:0:"";s:6:"camera";s:9:"NIKON D90";s:7:"caption";s:0:"";s:17:"created_timestamp";i:1370949670;s:9:"copyright";s:0:"";s:12:"focal_length";s:2:"17";s:3:"iso";i:0;s:13:"shutter_speed";s:5:"0.002";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>gllr_link_url</wp:meta_key>
			<wp:meta_value><![CDATA[fdaf]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>排列组合 母函数 笔记</title>
		<link>http://allenlsy.com/2010/01/pai-lie-zu-he-mu-han-shu-bi-ji/</link>
		<pubDate>Sat, 09 Jan 2010 14:52:26 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.wordpress.com/?p=71</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1．          圆排列</h2>
圆排列个数 =P(n, r)/r= n!/(  r*(n-r)! )

例：8人围着餐桌吃饭，多少种就座方式？

Ans: P(8, 8)/8=7!
<h2>2．          重排列</h2>
<ol>
	<li><strong>无限重排列</strong>：n个不同元素中取r个按次序排列，每个元素可取无限次，总数为n<sup>r</sup>。</li>
	<li><strong>有限重排列：</strong>r个不同色彩球放入n个标号的盒子，第i种彩球有r<sub>i</sub>个，总数为P(n, r) /  (r<sub>1</sub>!* r<sub>2</sub>!*… r<sub>t</sub>!)</li>
</ol>
<h2>3．          非重组合：每个元素最多出现一次</h2>
C(n, r)
<h2>4．          重组合</h2>
N个不同的元素中取r个元素，允许重复取，不考虑顺序。总数为C(n+r-1,  r)
<h2>5．          母函数</h2>
<p style="padding-left:30px;"><strong>a. 引出</strong></p>
<p style="padding-left:60px;">(x<sub>1</sub>+ x<sub>2</sub>+…  +x<sub>k</sub>)<sup>n</sup>的组合数学意义是将n个无区别的球放入k个编号不同的盒子里，每个盒子球数不限。多项式展开后，x<sub>1</sub><sup>n1</sup> *x<sub>2</sub><sup>n2</sup>*…* x<sub>k</sub><sup>nk</sup>通过幂可以表示一组解。而这个项的系数为</p>
<p style="padding-left:60px;">C(n, n<sub>1</sub>)*  C(n-n<sub>1</sub>, n<sub>2</sub>)*…*  C(n-n<sub>1</sub>-n<sub>2</sub>-…-n<sub>k-1</sub>, n<sub>k</sub>)=n!/  (n<sub>1</sub>!n<sub>2</sub>!…n<sub>k</sub>! )</p>
<p style="padding-left:60px;">各系数之和为k<sup>n</sup>。</p>
<p style="padding-left:30px;"><strong>b. </strong><strong>普通母函数</strong></p>
<p style="padding-left:60px;">一个序列{a<sub>n</sub>}，称a<sub>0</sub>+a<sub>1</sub>x+  a<sub>2</sub>x<sup>2</sup>+…+ a<sub>n</sub>x<sup>n</sup>+…这个多项式为{a<sub>n</sub>}的普通母函数。</p>
<p style="padding-left:60px;"><strong>例1</strong>：（天平称物问题）有质量n<sub>1</sub>，n<sub>2</sub>…n<sub>k</sub>整数克的砝码，要称i克物体，物体在左，砝码在右。共有多少种不同的称法？</p>
<p style="padding-left:60px;"><strong>解</strong>：设有a<sub>i</sub>种方法，则</p>
<p style="padding-left:60px;">(1+x<sup>n1</sup>)  (1+x<sup>n2</sup>)…(1+x<sup>nk</sup>)=∑ a<sub>i</sub> x<sup>i</sup></p>
<p style="padding-left:60px;">1表示(1+x<sup>nj</sup>)中提供1，砝码n<sub>j</sub>没有用上。</p>
<p style="padding-left:60px;">a<sub>i</sub>为所求。</p>
<p style="padding-left:60px;">注：多项式展开后，还可以看出能称出哪些重量</p>
<p style="padding-left:60px;">经验：始终记得，一个括号内一次仅有一个项被取，用于提供给展开式的某一项</p>
<p style="padding-left:60px;"><strong>例2</strong>：（重复取物）有n种不同的物品，每种物品分别能最多取b<sub>1</sub>，b<sub>2</sub>…  b<sub>n</sub>件。从中可重复的取r件物品有多少种不同的取法？</p>
<p style="padding-left:60px;"><strong>解：</strong>设有a<sub>r</sub>种不同的取法。则</p>
<p style="padding-left:60px;">(1+x+x<sup>2</sup>+…+x<sup>b1</sup>)  (1+x+x<sup>2</sup>+…+x<sup>b2</sup>)…  (1+x+x<sup>2</sup>+…+x<sup>bn</sup>)=a<sub>0</sub>+a<sub>1</sub>x+  a<sub>2</sub>x<sup>2</sup>+…+ a<sub>r</sub>x<sup>r</sup>+…</p>
<p style="padding-left:60px;">展开式中x<sup>r</sup>的来源x<sup>m1</sup>x<sup>m2</sup>…x<sup>mn</sup>=x<sup>r</sup></p>
<p style="padding-left:60px;">于是成了重组合问题，答案为C(n+r-1,  r)</p>
<p style="padding-left:60px;"><strong>例3</strong><strong>：</strong>整数拆分：整数r拆分成k<sub>1</sub>，k<sub>2</sub>…  k<sub>m</sub>的和，k<sub>i</sub>允许最多重复n<sub>i</sub>次。求拆分方案数。</p>
<p style="padding-left:60px;"><strong>解：</strong>这是求k<sub>1</sub>b<sub>1</sub>+  k<sub>2</sub>b<sub>2</sub>+…+ k<sub>m</sub>b<sub>m</sub>=r的不定方程的非负整数解的个数，0&lt;=  b<sub>i</sub>&lt;= n<sub>i</sub> 。</p>
<p style="padding-left:60px;">考虑(1+x<sup>k1</sup>+x<sup>k1*2</sup>+x<sup>k1*3</sup>+…+x<sup>k1*n1</sup>)(  1+x<sup>k2</sup>+x<sup>k2*2</sup>+x<sup>k2*3</sup>+…+x<sup>k2*n2</sup>)…(  1+x<sup>kn</sup>+x<sup>kn*2</sup>+x<sup>kn*3</sup>+…++x<sup>km*nm</sup>)</p>
<p style="padding-left:60px;">则答案是x<sup>2</sup>的系数</p>
<p style="padding-left:30px;"><strong>c. </strong><strong>指数母函数</strong></p>
<p style="padding-left:60px;">N个元素中，a<sub>i</sub>重复了n<sub>i</sub>次，求从中取r个元素的排列数为b<sub>r</sub>。</p>
<p style="padding-left:60px;">设取m<sub>i</sub>个a<sub>i</sub>，∑m<sub>i</sub>=r。则相互不同的排列数为r! / ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>71</wp:post_id>
		<wp:post_date>2010-01-09 22:52:26</wp:post_date>
		<wp:post_date_gmt>2010-01-09 14:52:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pai-lie-zu-he-mu-han-shu-bi-ji</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mathematics-shu-xue"><![CDATA[Mathematics]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1277910078]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1277910078]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391459]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>置换群 Polya定理 基础 笔记</title>
		<link>http://allenlsy.com/2010/01/zhi-huan-qun-Polya-ding-li-ji-chu-bi-ji/</link>
		<pubDate>Tue, 05 Jan 2010 15:01:52 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.wordpress.com/?p=73</guid>
		<description></description>
		<content:encoded><![CDATA[<h2><span style="color:#99ccff;">1.     等价关系</span></h2>
<p style="padding-left:30px;"><strong>表示二元集合的方法：</strong></p>
<p style="padding-left:30px;">1．(a,b)CR：a, b 之间有R关系</p>
<p style="padding-left:30px;">2．<strong>关系矩阵：</strong>用矩阵Z，Z<sub>i,j</sub>表示X<sub>i</sub>和Y<sub>j</sub>是否有关系，有则为1，无则为0</p>
<p style="padding-left:60px;"><strong>等价关系：</strong>满足以下三个性质</p>
<p style="padding-left:60px;"><strong>自反性：</strong>(a,a)CR</p>
<p style="padding-left:60px;"><strong>对称性：</strong>(a,b)CR =&gt;  (b,a)CR</p>
<p style="padding-left:60px;"><strong>传递性：</strong>(a,b)CR，(b,c)CR  =&gt;(a,c)CR</p>
<p style="padding-left:60px;"><strong> </strong><strong>等价类：</strong>将等价的元素归入一个集合</p>
<p style="padding-left:60px;">[a]<sub>R</sub>={x|xCA, (a,x) C 等价关系R}</p>
<p style="padding-left:60px;">显然等价类非空，因为至少有(a,a)  CR</p>

<h2><span style="color:#99ccff;">2.     置换群</span></h2>
<p style="padding-left:30px;"><strong>群：</strong>满足四个性质的集合G，集合中的元素有运算*</p>
<p style="padding-left:30px;"><strong>封闭性：</strong>a, bCG =&gt;  a*bCR</p>
<p style="padding-left:30px;"><strong>结合性：</strong>a*(b*c)=(a*b)*c</p>
<p style="padding-left:30px;"><strong>单位元e</strong><strong>存在：</strong>对于G中任何元素a，a*e=e*a=a</p>
<p style="padding-left:30px;"><strong>逆元存在：</strong>对于G中任何元素a，存在b，s.t.  a*b=b*a=e</p>
<p style="padding-left:30px;"><strong>则称G</strong><strong>是对于运算*</strong><strong>的群</stron'></p>
<p style="padding-left:30px;"><strong>置换：有限集G</strong><strong>到有限集G</strong><strong>的一一变换</strong></p>
<p style="padding-left:30px;"><strong>置换群：</strong></p>
<p style="padding-left:60px;">1．  含有n个元素的群G有n!个不同的置换</p>
<p style="padding-left:60px;">2．  <strong>m</strong><strong>阶循环：</strong>一个置换中有m个元素变化，n-m个不变</p>
<p style="padding-left:60px;">3．  当所有元素都不动时，称为单位元e</p>
<p style="padding-left:60px;">4．  置换的表示：(1,3,4,2)表示1-&gt;3, 3-&gt;4,  4-&gt;2, 2-&gt;1</p>
<p style="padding-left:60px;">5．  <strong>S<sub>n</sub></strong><strong>：</strong>n个元素的所有置换方式的集合，|<strong~ </strong>S<sub>n </sub>|=n!</p>
<p style="padding-left:60px;">6．  置换循环分解成换位的乘积时，换位个数的奇偶性不变</p>

<h2><span style="color:#99ccff;">3．  Burnside引理</span></h2>
<p style="padding-left:30px;"><strong>C<sub>k</sub></strong><strong>：</strong>k阶循环在一个置换中出现的次数是C<sub>k</sub>，用(k)<sup>Ck</sup>表示</p>
<p style="padding-left:30px;">因此，S<sub>n</sub>中的置换都可以用</p>
<p style="padding-left:30px;">(1)<sup> C1</sup> (2)<sup> C2</sup>…(n)<sup> Cn</sup></p>
<p style="padding-left:30px;">表示。</p>
<p style="padding-left:30px;">其中，<strong>∑(k*C<sub>k</sub>)=n</strong></p>
<p style="padding-left:30px;"><strong>共轭类：具有相同(1)<sup> C1</sup> (2)<sup> C2</sup>…(n)<sup> Cn</sup></strong><strong>格式的置换群体</strong></p>
<p style="padding-left:30px;">同一共轭类中的元素个数为</p>
<p style="padding-left:30px;">n!/ (<strong>∑C<sub>k</sub>!*∑k<sup>Ck</sup>)</strong></p>
<p style="padding-left:30px;"><strong>K</strong><strong>不动置换类：</strong>G是S<sub>n</sub>的一个子群，<strong>Z<sub>k</sub></strong>表示G中k不动的置换群。k所属的等价类记为<strong>E<sub>k</sub></strong>。有</p>
<p style="padding-left:30px;">|E<sub>k</sub>|<strong>*</strong>|Z<sub>k</sub>|=|G|</p>
<p style="padding-left:30px;">例如：G={e, (12), (34),  (12)(34) }</p>
<p style="padding-left:30px;">E<sub>1</sub>=E<sub>2</sub>={1, 2}，Z<sub>1</sub>=Z<sub>2</sub>={e, (34)  }，|E<sub>1</sub>|<strong>*</strong>|Z<sub>1</sub>|=2*2=4=|G|</p>
<p style="padding-left:30px;"><strong>Burnside</strong><strong>引理：</strong></p>
<p style="padding-left:30px;">设G={a<sub>1</sub>,  a<sub>2</sub> … a<sub>n</sub>}，a<sub>i</sub>都是置换，其中a<sub>1</sub>=e。</p>
<p style="padding-left:30px;"><strong>C<sub>j</sub>(a<sub>k</sub>)</strong>表示置换a<sub>k</sub>中j阶循环的个数</p>
<p style="padding-left:30px;"><strong>L=</strong>∑|Z<sub>k</sub>|/|G|，L表示N集合中引出不同等价类的数目</p>
<p style="padding-left:30px;">也就是G群中，用m种颜色给n个对象进行染色的不同方案数</p>

<h2><span style="color:#99ccff;">4．  Polya定理</span></h2>
<p style="padding-left:30px;">对于置换群G={  g<sub>1</sub>, g<sub>2</sub> … g<sub>n</sub> }，g<sub>i</sub>的<strong>循环节</strong>数记为c(g<sub>i</sub>)。例如g<sub>3</sub>=(13)(24)，则c(g<sub>3</sub>)=2</p>
<p style="padding-left:30px;"><strong>L=</strong>∑m<sup>c(gi)</sup>/|G|</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>73</wp:post_id>
		<wp:post_date>2010-01-05 23:01:52</wp:post_date>
		<wp:post_date_gmt>2010-01-05 15:01:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>zhi-huan-qun-Polya-ding-li-ji-chu-bi-ji</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mathematics-shu-xue"><![CDATA[Mathematics]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1277910256]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1277910256]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391460]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1567282622]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[ 二分图匹配 ] 匈牙利算法 和 KM算法 总结</title>
		<link>http://allenlsy.com/2009/12/er-fen-tu-pi-pei-xiong-ya-li-suan-fa-he-KM-suan-fa/</link>
		<pubDate>Mon, 14 Dec 2009 15:05:26 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.wordpress.com/?p=76</guid>
		<description></description>
		<content:encoded><![CDATA[前言：

高中时候老师讲这个就听得迷迷糊糊，有一晚花了通宵看KM的Pascal代码，大概知道过程了，后来老师说不是重点，所以忘的差不多了。都知道二分图匹配是个难点，我这周花了些时间研究了一下这两个算法，总结一下
<h2>1.  基本概念</h2>
<p style="padding-left:30px;">M代表匹配集合</p>
<p style="padding-left:30px;"><strong>未盖点</strong>：不与任何一条属于M的边相连的点</p>
<p style="padding-left:30px;"><strong>交错轨</strong>：属于M的边与不属于M的边交替出现的轨（链）</p>
<p style="padding-left:30px;"><strong>可增广轨</strong>：两端点是未盖点的交错轨</p>
<p style="padding-left:30px;">判断M是最大匹配的标准：  M中不存在可增广轨</p>

<h2>2.  最大匹配，匈牙利算法</h2>
<p style="padding-left:30px;">时间复杂度：O(|V||E|)</p>
<p style="padding-left:30px;">原理：</p>
<p style="padding-left:30px;">寻找M的可增广轨P，P包含2k+1条边，其中k条属于M，k+1条不属于M。修改M为M&amp;P。即  这条轨进行与M进行对称差分运算。</p>
<p style="padding-left:30px;">所谓对称差分运算，就是比如X和Y都是集合，X &amp; Y=( X 并 Y ) - ( x 交  Y )</p>
<p style="padding-left:30px;">有一个定理是：M &amp;  P的边数是 |M|+1，因此对称差分运算扩大了M</p>
<p style="padding-left:30px;"></p>
<p style="padding-left:30px;">实现：</p>
<p style="padding-left:30px;">关于这个实现，有DFS和BFS两种方法。先列出DFS的代码，带注释。这段代码来自中山大学的教材</p>
<p style="padding-left:30px;">核心部分在dfs(x)，来寻找可增广轨。如果找到的话，在Hungarian()中，最大匹配数加一。这是用了刚才提到的定理。大家可以想想初始状态是什么，又是如何变化的</p>
<p style="padding-left:30px;"></p>
 
<pre class="lang:c++ decode:true " >#include &lt;iostream&gt;
#define F(i,a,b) for (int i=a;i&lt;=b;i++)
#define maxn 1002
using namespace std;
bool mk[maxn], map[maxn][maxn];
int match[maxn], n, m;
bool dfs(int x) //寻找增广链,true表示找到
{
	for (int i=1;i&lt;=m;i++)
	{
		if ( map[x][i] &amp;&amp; !mk[i] )
		{
			mk[i]=true;
			int t=match[i];
			match[i]=x;
			if (t==0 || dfs(t))
				return true;
			match[i]=t;
		}
	}
	return false;
}
int hungarian()
{
	int max_=0;
	F(i,1,n)
	{
		memset(mk, false, sizeof(mk));
		if ( dfs(i) )
			max_++;
	}
	return max_;
}
int main()
{
	freopen ("in.txt","r",stdin);
	memset(map, false, sizeof(map));
	cin &gt;&gt; n &gt;&gt; m;
	int a, b;
	while (cin &gt;&gt; a &gt;&gt; b)
	{
		map[a][b]=true;
	}
	cout &lt;&lt; hungarian() &lt;&lt; endl;
	F(i,1,m)
		if (match[i]!=0)
			cout &lt;&lt; match[i] &lt;&lt; " " &lt;&lt; i &lt;&lt; endl;
	return 0;
}
/* http://blog.csdn.net/akof1314/archive/2009/08/07/4421262.aspxiageProblem.png
in.txt
5 5
1 1
1 2
2 2
2 3
3 2
3 5
4 3
5 3
5 4
5 5
out.txt
5
剩下是匹配结果
*/</pre> 

<p style="padding-left:30px;"></p>
<p style="padding-left:30px;">第二种方法BFS，来自我的学长cnhawk</p>
<p style="padding-left:30px;">核心步骤还是寻找可增广链，过程是：</p>
<p style="padding-left:30px;">1.从左的一个未匹配点开始，把所有她相连的点加入队列</p>
<p style="padding-left:30px;">2.如果在右边找到一个未匹配点，则找到可增广链</p>
<p style="padding-left:30px;">3.如果在右边找到的是一个匹配的点，则看它是从左边哪个点匹配而来的，将那个点出发的所有右边点加入队列</p>
<p style="padding-left:30px;">这么说还是不容易明白，看代码吧</p>
<p style="padding-left:30px;"></p>
 
<pre class="lang:c++ decode:true " >//匈牙利算法实现
int Bipartite(bool vc [][MAX],int nv1,int nv2)
{
    //vc[][]为二分图，nv1,nv2分别为左边的点数
    int i, j, x, n;
    //n为最大匹配数
    int q[MAX], prev[MAX], qs, qe;
    //q是BFS用的队列，prev是用来记录交错链的，同时也用来记录右边的点是否被找过
    int vm1[MAX], vm2[MAX];
    //vm1,vm2分别表示两边的点与另一边的哪个点相匹配
    n = 0;
    for( i = 0; i &lt; nv1; i++ ) vm1[i] = -1;
    for( i = 0; i &lt; nv2; i++ ) vm2[i] = -1; //初始化所有点为未被匹配的状态
    for( i = 0; i &lt; nv1; i++ )
    {
        if(vm1[i] != -1)continue;
        //对于左边每一个未被匹配的点进行一次BFS找交错链
        for( j = 0; j &lt; nv2; j++ ) prev[j] = -2;//表示刚进行过初始化
        //每次BFS时初始化右边的点
        qs = qe = 0; //初始化BFS的队列
        //下面这部分代码从初始的那个点开始，先把它能找的的右边的点放入队列
        //★稍微改一下可以适用于用邻接表实现的二分图
        for( j = 0; j &lt; nv2; j++ ) if( vc[i][j] )
        {
            prev[j] = -1;
            q[qe++] = j;
        }
	//BFS
        while( qs &lt; qe )
        { 	x = q[qs];
            if( vm2[x] == -1 ) break;
            //如果找到一个未被匹配的点，则结束，找到了一条交错链
            qs++;
            //下面这部分是扩展结点的代码，★稍微改一下可以适用于用邻接表实现的二分图
            for( j = 0; j &lt; nv2; j++ ) if( prev[j] == -2 &amp;&amp; vc[vm2[x]][j] )
            {
                //如果该右边点是一个已经被匹配的点，则vm2[x]是与该点相匹配的左边点
                //从该左边点出发，寻找其他可以找到的右边点
                prev[j] = x;
                q[qe++] = j;
            }
        }
        if( qs == qe ) continue; //没有找到交错链
        //更改交错链上匹配状态
        while( prev[x] &gt; -1 )
        {
            vm1[vm2[prev[x]]] = x;
            vm2[x] = vm2[prev[x]];
            x = prev[x];
        }
        vm2[x] = i;
        vm1[i] = x;
        //匹配的边数加一
        n++;
    }
    return n;
}</pre> 


<h2>3. 最佳匹配</h2>
<p style="padding-left:30px;">加权图中，权值最大的最大匹配</p>
<p style="padding-left:30px;"></p>
<p style="padding-left:30px;"><strong>KM算法：</strong></p>
<p style="padding-left:30px;">概念：</p>
<p style="padding-left:30px;"><span style="text-decoration:underline;">f(v)</span> 是每个点的一个值，使得对任意u,v C V，f(u)+f(v)&gt;=w[ e<sub>u,v</sub> ]</p>
<p style="padding-left:30px;"><span style="text-decoration:underline;">集合H</span>：一个边集，使得H中所有u,v满足f(u)+f(v)=w[  e<sub>u,v</sub> ]</p>
<p style="padding-left:30px;"><span style="text-decoration:underline;">等价子图</span>：G<sub>f</sub>(V, H)，标有f函数的G图</p>
<p style="padding-left:30px;">理论：</p>
<p style="padding-left:30px;">对于f和G<sub>f</sub>，如果有一个理想匹配集合M<sub>p</sub>，则M<sub>p</sub>最优。</p>
<p style="padding-left:30px;">对于任意匹配集合M，weight(  M )&lt;weight( M<sub>p</sub> )</p>
<p style="padding-left:30px;"></p>
<p style="padding-left:30px;">KM算法的实质是扩展G<sub>f</sub>，直到找到理想的匹配集合</p>
<p style="padding-left:30px;"></p>
<p style="padding-left:30px;">伪代码</p>

 
<pre class="lang:c++ decode:true " >// S是未匹配的顶点集
while (M 不是 Mp)
{
	//F(S)是Gf中与S中顶点相邻的顶点集
	if（ F(S)==T ）
	{
		d = min( f[u]+f[w]-weight[u][w] ); //u in S, w not in T
		for each v in V
		{
			if ( v in S )
				f[v]=f[v]-d;
			else
			if ( v in T )
				f[v]=f[v]-d;
		
		}	
	}
	else // 
	{
		w = F(S)-T中一个顶点
		if ( w未匹配 )
		{
			P是刚找到的增大路径
			M = M与P的对称差分运算结果
			S是某个未匹配的顶点
			T= null		
		}
		else
		{
			S=S+ {M中w的相邻点}
			T=T+w		
		}
	}
}</pre> 

<p style="padding-left:30px;"></p>
<p style="padding-left:30px;">最后给一个代码，跟伪代码的思路不是很一样。从网上找的</p>
 
<pre class="lang:c++ decode:true " >#include &lt;cstdio&gt;
#include &lt;memory.h&gt;
#include &lt;algorithm&gt;    // 使用其中的 min 函数
using namespace std;
const int MAX = 1024;
int n;                // X 的大小
int weight [MAX] [MAX];        // X 到 Y 的映射（权重）
int lx [MAX], ly [MAX];        // 标号
bool sx [MAX], sy [MAX];    // 是否被搜索过
int match [MAX];        // Y(i) 与 X(match [i]) 匹配
// 初始化权重
void init (int size);
// 从 X(u) 寻找增广道路，找到则返回 true
bool path (int u);
// 参数 maxsum 为 true ，返回最大权匹配，否则最小权匹配
int bestmatch (bool maxsum = true);
void init (int size)
{
	// 根据实际情况，添加代码以初始化
	n = size;
	for (int i = 0; i &lt; n; i ++)
		for (int j = 0; j &lt; n; j ++)
			scanf ("%d", &amp;weight [i] [j]);
}

bool path (int u)
{
	sx [u] = true;
	for (int v = 0; v &lt; n; v ++)
		if (!sy [v] &amp;&amp; lx[u] + ly [v] == weight [u] [v])
		{
			sy [v] = true;
			if (match [v] == -1 || path (match [v]))
			{
				match [v] = u;
				return true;
			}
		}
		return false;
}
int bestmatch (bool maxsum)
{
	int i, j;
	if (!maxsum)
	{
		for (i = 0; i &lt; n; i ++)
			for (j = 0; j &lt; n; j ++)
				weight [i] [j] = -weight [i] [j];
	}
	// 初始化标号
	for (i = 0; i &lt; n; i ++)
	{
		lx [i] = -0x1FFFFFFF;
		ly [i] = 0;
		for (j = 0; j &lt; n; j ++)
			if (lx [i] &lt; weight [i] [j])
				lx [i] = weight [i] [j];
	}
	memset (match, -1, sizeof (match));
	for (int u = 0; u &lt; n; u ++)
		while (1)
		{
			memset (sx, 0, sizeof (sx));
			memset (sy, 0, sizeof (sy));
			if (path (u))
				break;
			// 修改标号
			int dx = 0x7FFFFFFF;
			for (i = 0; i &lt; n; i ++)
				if (sx [i])
					for (j = 0; j &lt; n; j ++)
						if(!sy [j])
							dx = min (lx[i] + ly [j] - weight [i] [j], dx);
			for (i = 0; i &lt; n; i ++)
			{
				if (sx [i])
					lx [i] -= dx;
				if (sy [i])
					ly [i] += dx;
			}
		}
	int sum = 0;
	for (i = 0; i &lt; n; i ++)
		sum += weight [match [i]] [i];
	if (!maxsum)
	{
		sum = -sum;
		for (i = 0; i &lt; n; i ++)
			for (j = 0; j &lt; n; j ++)
				weight [i] [j] = -weight [i] [j];         // 如果需要保持 weight [ ] [ ] 原来的值，这里需要将其还原
	}
	return sum;
}

int main()
{
	freopen ("in.txt", "r", stdin);
	int n;
	scanf ("%d", &amp;n);
	init (n);
	int cost = bestmatch (true);
	printf ("%d \n", cost);
	for (int i = 0; i &lt; n; i ++)
	{
		printf ("Y %d -&gt; X %d \n", i, match [i]);
	}
	return 0;
}
/*
5
3 4 6 4 9
6 4 5 3 8
7 5 3 4 2
6 3 2 2 5
8 4 5 4 7
//执行bestmatch (true) ，结果为 29
*/
/*
5
7 6 4 6 1
4 6 5 7 2
3 5 7 6 8
4 7 8 8 5
2 6 5 6 3
//执行 bestmatch (false) ，结果为 21
*/</pre> 
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>76</wp:post_id>
		<wp:post_date>2009-12-14 23:05:26</wp:post_date>
		<wp:post_date_gmt>2009-12-14 15:05:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>er-fen-tu-pi-pei-xiong-ya-li-suan-fa-he-KM-suan-fa</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="graph-theory-tu-lun"><![CDATA[Graph Theory]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1277910816]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1277910816]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391461]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1314059237]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Dijkstra 二分堆+邻接链表</title>
		<link>http://allenlsy.com/2009/11/Dijkstra-er-fen-dui-lin-jie-lian-biao/</link>
		<pubDate>Wed, 25 Nov 2009 15:16:57 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.wordpress.com/?p=79</guid>
		<description></description>
		<content:encoded><![CDATA[注：此文属于个人笔记，转载请注明出处。欢迎给各位提出意见。

注意的地方：priority_queue的用法，使用greater需要重载大于符号。

 
<pre class="lang:c++ decode:true " >/* Dijkstra: BHeap + Linked List */

#include &lt;iostream&gt;
#include &lt;queue&gt;
#include &lt;vector&gt;
#define PB push_back
#define F(i,a,b) for (int i=a;i&lt;=b;i++)
#define MAXN 1002
using namespace std;

class node
{
public:
	int t, d;
	node(int a, int b)
	{ t=a, d=b; }
	bool operator &gt; (const node&amp; b) const
	{
		return (d&gt;b.d);
	}
};
priority_queue&lt;node, vector&lt;node&gt;, greater&lt;node&gt; &gt; pq;
bool mk[MAXN];
int d[MAXN];

vector&lt;node&gt; lst[MAXN] ;
void dijkstra(int s, int t)
{
	//init
	memset(d,1, sizeof(d));
	d[s]=0;
	pq.push( node(s, 0) );

	int v;
	while (!mk[t])
	{
		while ( mk[ pq.top().t ] )
			pq.pop();
		v=pq.top().t;
		mk[v]=true;

		if (v==t) break;
		vector&lt;node&gt;::iterator it=lst[v].begin();
		while ( it!=lst[v].end() )
		{
			int u=(*it).t;
			int dis=(*it).d;
			if (d[u]==-1 || d[v]+dis&lt;d[u])
			{
				d[u]=d[v]+dis;
				pq.push( node(u, d[u]) );
			}
			it++;
		}
	}
}
int n, m, s, t;

int main()
{
	freopen ("in.txt", "r" , stdin);
	//freopen ("outtxt", "w", stdout);
	cin &gt;&gt; n &gt;&gt; m  &gt;&gt; s &gt;&gt; t;

	int a, b ,c;
	F(i,1,m)
	{
		cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;
		lst[a].PB( node(b, c) );
		lst[b].PB( node(a, c) );
	}

	dijkstra(s, t);

	cout &lt;&lt; d[t];
	return 0;
}


/* in.txt
6 9 1 5
1 6 14
1 3 9
1 2 7
2 3 10
3 4 11
3 6 2
2 4 15
4 5 6
5 6 9
http://en.wikipedia.org/wiki/File:Dijksta_Anim.gif

output: 20
*/</pre> 
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>79</wp:post_id>
		<wp:post_date>2009-11-25 23:16:57</wp:post_date>
		<wp:post_date_gmt>2009-11-25 15:16:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>Dijkstra-er-fen-dui-lin-jie-lian-biao</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="graph-theory-tu-lun"><![CDATA[Graph Theory]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1277911104]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1277911104]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391462]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_3a4673d0fa4b2b1f7cd9153406bc9bd9</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_da7e4dda5d60e4b51e29880792264c78</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_ef6f3569c87802e93c7219caa6c2d663</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1294103211]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://allenlsy.com/2012/07/617/</link>
		<pubDate>Thu, 12 Jul 2012 01:37:17 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=617</guid>
		<description></description>
		<content:encoded><![CDATA[Really a Science]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>617</wp:post_id>
		<wp:post_date>2012-07-12 01:37:17</wp:post_date>
		<wp:post_date_gmt>2012-07-12 01:37:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>617</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>6</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="directorybar"><![CDATA[DirectoryBar]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://allenlsy.com/2012/07/618/</link>
		<pubDate>Thu, 12 Jul 2012 01:37:17 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=618</guid>
		<description></description>
		<content:encoded><![CDATA[SQL Server, MySQL, Oracle。但更重要的是设计理论]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>618</wp:post_id>
		<wp:post_date>2012-07-12 01:37:17</wp:post_date>
		<wp:post_date_gmt>2012-07-12 01:37:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>618</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>17</wp:post_parent>
		<wp:menu_order>10</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="directorybar"><![CDATA[DirectoryBar]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[625]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[19]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://allenlsy.com/2012/07/619/</link>
		<pubDate>Thu, 12 Jul 2012 01:37:17 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=619</guid>
		<description></description>
		<content:encoded><![CDATA[离散数学，具体数学，组合数学，数论]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>619</wp:post_id>
		<wp:post_date>2012-07-12 01:37:17</wp:post_date>
		<wp:post_date_gmt>2012-07-12 01:37:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>619</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>7</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="directorybar"><![CDATA[DirectoryBar]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[10]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://allenlsy.com/2012/07/622/</link>
		<pubDate>Thu, 12 Jul 2012 01:37:18 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=622</guid>
		<description></description>
		<content:encoded><![CDATA[acm.pku.edu.cn/OnlineJudge]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>622</wp:post_id>
		<wp:post_date>2012-07-12 01:37:18</wp:post_date>
		<wp:post_date_gmt>2012-07-12 01:37:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>622</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>19</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="directorybar"><![CDATA[DirectoryBar]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[14]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://allenlsy.com/2012/07/623/</link>
		<pubDate>Thu, 12 Jul 2012 01:37:18 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=623</guid>
		<description></description>
		<content:encoded><![CDATA[C++, C#, Java]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>623</wp:post_id>
		<wp:post_date>2012-07-12 01:37:18</wp:post_date>
		<wp:post_date_gmt>2012-07-12 01:37:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>623</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>17</wp:post_parent>
		<wp:menu_order>12</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="directorybar"><![CDATA[DirectoryBar]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[625]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[22]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://allenlsy.com/2012/07/624/</link>
		<pubDate>Thu, 12 Jul 2012 01:37:18 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=624</guid>
		<description></description>
		<content:encoded><![CDATA[文摘]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>624</wp:post_id>
		<wp:post_date>2012-07-12 01:37:18</wp:post_date>
		<wp:post_date_gmt>2012-07-12 01:37:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>624</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>20</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="directorybar"><![CDATA[DirectoryBar]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[15]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://allenlsy.com/2012/07/625/</link>
		<pubDate>Thu, 12 Jul 2012 01:37:18 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=625</guid>
		<description></description>
		<content:encoded><![CDATA[软件作坊所需要的一切]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>625</wp:post_id>
		<wp:post_date>2012-07-12 01:37:18</wp:post_date>
		<wp:post_date_gmt>2012-07-12 01:37:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>625</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>9</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="directorybar"><![CDATA[DirectoryBar]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[17]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://allenlsy.com/2012/07/626/</link>
		<pubDate>Thu, 12 Jul 2012 01:37:18 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=626</guid>
		<description></description>
		<content:encoded><![CDATA[业界的名著还是要多看看滴]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>626</wp:post_id>
		<wp:post_date>2012-07-12 01:37:18</wp:post_date>
		<wp:post_date_gmt>2012-07-12 01:37:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>626</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>17</wp:post_parent>
		<wp:menu_order>11</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="directorybar"><![CDATA[DirectoryBar]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[625]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[18]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://allenlsy.com/2012/07/628/</link>
		<pubDate>Thu, 12 Jul 2012 01:37:18 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=628</guid>
		<description></description>
		<content:encoded><![CDATA[基本的知识点是很多的，网络流，二分图]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>628</wp:post_id>
		<wp:post_date>2012-07-12 01:37:18</wp:post_date>
		<wp:post_date_gmt>2012-07-12 01:37:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>628</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>3</wp:post_parent>
		<wp:menu_order>8</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="directorybar"><![CDATA[DirectoryBar]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[619]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[9]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>About Me</title>
		<link>http://allenlsy.com/about-me/</link>
		<pubDate>Sat, 14 Jul 2012 03:06:04 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?page_id=691</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://allenlsy.com/wp-content/uploads/2012/07/Screen-Shot-2012-10-24-at-8.24.16-PM.png"><img title="Screen Shot 2012-10-24 at 8.24.16 PM" src="http://allenlsy.com/wp-content/uploads/2012/07/Screen-Shot-2012-10-24-at-8.24.16-PM-227x300.png" alt="" width="227" height="300" /></a>

<address>Currently live in: Singapore</address>Like some movies: Seven, Fight Club, Royale Casino

YOU CAN TRY: [ facebook | twitter | weibo ] .allenlsy.com

email: cafe@allenlsy.com, please don't spam me.

Mobile:521-(1314) if you believe

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>691</wp:post_id>
		<wp:post_date>2012-07-14 03:06:04</wp:post_date>
		<wp:post_date_gmt>2012-07-14 03:06:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>about-me</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1287550147]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>58</wp:comment_id>
			<wp:comment_author><![CDATA[jeremy scott shoes]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.jeremyscottshoe.eu</wp:comment_author_url>
			<wp:comment_author_IP>175.44.45.42</wp:comment_author_IP>
			<wp:comment_date>2013-05-22 22:32:40</wp:comment_date>
			<wp:comment_date_gmt>2013-05-22 14:32:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>jeremy scott shoes...</strong>

About Me | allenlsy...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>留言板 Message Board</title>
		<link>http://allenlsy.com/liu-yan-ban-message-board/</link>
		<pubDate>Mon, 16 Jul 2012 00:26:24 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?page_id=699</guid>
		<description></description>
		<content:encoded><![CDATA[[threader]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>699</wp:post_id>
		<wp:post_date>2012-07-16 00:26:24</wp:post_date>
		<wp:post_date_gmt>2012-07-16 00:26:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>liu-yan-ban-message-board</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://allenlsy.com/2012/07/708/</link>
		<pubDate>Mon, 16 Jul 2012 00:31:40 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=708</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>708</wp:post_id>
		<wp:post_date>2012-07-16 00:31:40</wp:post_date>
		<wp:post_date_gmt>2012-07-16 00:31:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>708</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="pagemenu"><![CDATA[PageMenu]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[699]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://allenlsy.com/2012/07/713/</link>
		<pubDate>Mon, 16 Jul 2012 11:28:35 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=713</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>713</wp:post_id>
		<wp:post_date>2012-07-16 11:28:35</wp:post_date>
		<wp:post_date_gmt>2012-07-16 11:28:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>713</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="pagemenu"><![CDATA[PageMenu]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[691]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rails view note 1 - Readability</title>
		<link>http://allenlsy.com/?p=930</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=930</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>Rails View - Readibility</h2>

<h2>1. choosing a templateing language</h2>

<p><strong>HAML</strong></p>

<h2>2. Standardizing Coding Practices</h2>

<ol>
<li>Indenting without hard tabs</li>
<li>Indenting for logic and markup</li>
<li>Lining up tags and attributes</li>
<li>Use ERB comment other than HTML comment</li>
</ol>

<h2>3. Simplifying Complex Output</h2>

<p><strong>Using helper</strong></p>

<p><strong>raw()</strong>: make sure Rails doesn't escape the string. Suitable for put pure html code to template. But must ensure that it is XSS free.</p>

<p><strong>@coolection</strong></p>

<h2>4. Working with models</h2>

<p><strong>Simplifying access to Associations</strong>: add helper to get data through association</p>

<pre><code lang="ruby">

<%= @client.project.client.name =>

# change to
# inside creations_helper.rb
def creation_client_name(creation = @creation)
    creation.project.client.name
end

<%= creation_client_name %>

</code></pre>

<p><strong>Displaying multiple items</strong>: @collection</p>

<h2>5. Displaying Conditional Content</h2>

<p><strong>Create helper to display partial</strong></p>

<p><strong>Create your own conditions</strong></p>

<pre><code lang="ruby">
def show_preview?(creation)
    creation.thumbnail> &&
        current_user.can_view?(creation) &&
            expanded_view?
end
</code></pre>

<h2>6. Adding Model DOM IDs for JavaScript</h2>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>930</wp:post_id>
		<wp:post_date>2013-02-11 17:44:07</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Gallery</title>
		<link>http://allenlsy.com/?p=1071</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=1071</guid>
		<description></description>
		<content:encoded><![CDATA[<p>[wowslider id="2"]</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1071</wp:post_id>
		<wp:post_date>2013-07-23 16:20:10</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>My Wedding</title>
		<link>http://allenlsy.com/my-wedding/</link>
		<pubDate>Fri, 26 Jul 2013 00:12:43 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?page_id=1083</guid>
		<description></description>
		<content:encoded><![CDATA[<p>[wppa album="1"][/wppa]</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1083</wp:post_id>
		<wp:post_date>2013-07-26 08:12:43</wp:post_date>
		<wp:post_date_gmt>2013-07-26 00:12:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>my-wedding</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1532131967]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>特殊计数序列</title>
		<link>http://allenlsy.com/2010/03/te-shu-ji-shu-xu-lie/</link>
		<pubDate>Sun, 28 Mar 2010 04:32:29 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.wordpress.com/?p=20</guid>
		<description></description>
		<content:encoded><![CDATA[1.       Catalan数：Cn = 1/(n+1) * C(2n, n)，Cn = (4n-2)/(n+1) *Cn-1
<p style="padding-left:30px;">a.       内部插入不相交对角线，将n+1条边的凸多边形分割为三角形的计数</p>
<p style="padding-left:30px;">b.      n个+1和n个-1构成的序列a，对于所有k = 1, 2, 3, .. ,2n ，满足∑ak&gt;=0的序列个数</p>
<p style="padding-left:30px;">c.       拟Catalan数Cn*=n!Cn-1。Cn*=(4n-6) Cn-1* ，Cn*=(n-1)!C(2n-2, n-1)</p>
2.       差分序列和Stirling数
<p style="padding-left:30px;">a.       对于一般项是n的p次多项式，对于n&gt;=0，∆p+1hn=0</p>
<p style="padding-left:30px;">b.      线性性：∆p(c*gn+ d*fn) = c*∆pgn+ d*∆p fn)</p>
<p style="padding-left:30px;">c.       满足差分表第0条对角线为序列c的序列h满足</p>
<p style="padding-left:30px;">hn= c0*C(n, 0) + c1*C(n, 1) +…+ cn*Chn, p)</p>
<p style="padding-left:30px;">d.      用第0条对角线计算∑np的值，p为定制，n循环</p>
<p style="padding-left:30px;">设在p的情况下，第0条对角线上的数分别为c(p, 0), c(p, 1)…</p>
<p style="padding-left:30px;">则np=c(p, 0) *C(n, 0) + c(p, 1)*C(n, 1) + … +c(p, p)*C(n, p)</p>
<p style="padding-left:30px;">=∑(k=0..p) ( c(p, k)/k! * [n]k)</p>
<p style="padding-left:30px;">其中[n] k= n!/k! (k&gt;0) 或 1 (k=0)</p>
<p style="padding-left:30px;">令S(p, k) = c(p, k)/k!</p>
<p style="padding-left:30px;">则np= ∑(k=0..p) ( S(p, k) * [n]k)</p>
<p style="padding-left:30px;">S(p, k)被称为第二类Stirling数</p>
<p style="padding-left:30px;">e.      第二类Stirling数满足ascal型递推关系</p>
<p style="padding-left:30px;">S(p,k) = k*S(p-1, k) + S(p-1, k-1)</p>
<p style="padding-left:30px;">它的含义是将p个可区分的元素分到k个不可分别的非空集合的 计数</p>
<p style="padding-left:30px;">如果集合可分别，则为S(p, k) * k!</p>
<p style="padding-left:30px;">f.        Bell数：Bp是将p个不同元素分入非空不可分辨集合的计数</p>
<p style="padding-left:30px;">Bp= ∑(k = 0..p) S(p, k)</p>
<p style="padding-left:30px;">g.       第二类Stirling数用[n]0, [n]1…[n]p求np。第一类Stirling数由n0, n1… np 求[n]p。</p>
<p style="padding-left:30px;">[n]p =  (n)(n-1)(n-2)..(n-k+1) = ∑(k=0..p) (-1)p-ks(p, k)nk</p>
<p style="padding-left:30px;">第一类Stirling数是将p个物体排成k个非空的循环队列的方法数</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>20</wp:post_id>
		<wp:post_date>2010-03-28 12:32:29</wp:post_date>
		<wp:post_date_gmt>2010-03-28 04:32:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>te-shu-ji-shu-xu-lie</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mathematics-shu-xue"><![CDATA[Mathematics]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1277872349]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1277872349]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391449]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hash表实现时的注意事项</title>
		<link>http://allenlsy.com/2010/02/Hash-biao-shi-xian-shi-de-zhu-yi-shi-xiang/</link>
		<pubDate>Wed, 24 Feb 2010 10:48:56 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.wordpress.com/?p=48</guid>
		<description></description>
		<content:encoded><![CDATA[后面要忙一段时间的Project，今天又练了一些基础的模板。

Hash这个东西，一般的实现方法是，建立Node类，其中next是Node*。然后，在程序中，如果要向表中添加元素，用局部变量的话，必须生成一个新的Node*，而不能是Node，否则会找不到的（因为是局部变量）。

Hash表头一般没有元素。判断当前slot是否查找完，用的是条件p-&gt;next!=NULL。

样例程序：将n个数放入Hash表，此处对11取余数，因为我自己测试时只是生成了50个50以内的随机数。

 
<pre class="lang:c++ decode:true " >#include &amp;lt;iostream&amp;gt;
#define F(i,a,b) for (int i=a;i&amp;lt;=b;i++)
using namespace std;
struct Node
{
    int v;
    Node* next;
    Node() {next = 0;}
    Node(int b)
    { v = b, next = 0; }
};
Node hash[11];
int main()
{
    int n, a;
    scanf(&amp;quot;%d&amp;quot;, &amp;amp;n);
    F(i,1,n)
    {
        scanf(&amp;quot;%d&amp;quot;, &amp;amp;a);
        Node* p = &amp;amp;hash[ a%11 ];
        while (p-&amp;gt;next !=NULL )
            p=p-&amp;gt;next;
        Node* no= new Node(a);
        p-&amp;gt;next = no;
    }
    F(i,0,10)
    {
        printf(&amp;quot;List %d:n&amp;quot;, i);
        Node* p = &amp;amp;hash[i];
        while (p-&amp;gt;next!=NULL)
        {
            p=p-&amp;gt;next;
            printf(&amp;quot;%d &amp;quot;, p-&amp;gt;v);
        }
        printf(&amp;quot;n&amp;quot;);
    }
    return 0;
}</pre> 
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>48</wp:post_id>
		<wp:post_date>2010-02-24 18:48:56</wp:post_date>
		<wp:post_date_gmt>2010-02-24 10:48:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>Hash-biao-shi-xian-shi-de-zhu-yi-shi-xiang</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="basic-algo-ji-ben-suan-fa"><![CDATA[Basic Algorithms]]></category>
		<category domain="category" nicename="programming-language-bian-cheng-yu-yan"><![CDATA[Programming Languages]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1277894937]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1277894937]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391453]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[转] 《对弈程序基本技术》专题：Alpha-Beta搜索</title>
		<link>http://allenlsy.com/2010/02/zhuan-shu-zhuan-ti-Alpha-Beta-sou-suo/</link>
		<pubDate>Thu, 25 Feb 2010 10:51:10 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.wordpress.com/?p=50</guid>
		<description></description>
		<content:encoded><![CDATA[《对弈程序基本技术》专题：Alpha-Beta搜索
2009-11-22 23:50
Bruce Moreland (brucemo@seanet.com) / 文 
　 
最小-最大的问题 
　 
　　Alpha-Beta 同“最小-最大”非常相似，事实上只多了一条额外的语句。最小最大运行时要检查整个博弈树，然后尽可能选择最好的线路。这是非常好理解的，但效率非常低。每次搜索更深一层时，树的大小就呈指数式增长。 
　　通常一个国际象棋局面都有35个左右的合理着法，所以用最小-最大搜索来搜索一层深度，就有35个局面要检查，如果用这个函数来搜索两层，就有352个局面要搜索。这就已经上千了，看上去还不怎样，但是数字增长得非常迅速，例如六层的搜索就接近是二十亿，而十层的搜索就超过两千万亿了。 
　　要想通过检查搜索树的前面几层，并且在叶子结点上用启发式的评价，那么做尽可能深的搜索是很重要的。最小-最大搜索无法做到很深的搜索，因为有效的分枝因子实在太大了。 
　 
口袋的例子 
　 
　　幸运的是我们有办法来减小分枝因子，这个办法非常可靠，实际上这样做绝对没有坏处，纯粹是个有益的办法。这个方法是建立在一个思想上的，如果你已经有一个不太坏的选择了，那么当你要作别的选择并知道它不会更好时，你没有必要确切地知道它有多坏。有了最好的选择，任何不比它更好的选择就是足够坏的，因此你可以撇开它而不需要完全了解它。只要你能证明它不比最好的选择更好，你就可以完全抛弃它。 
　　你可能仍旧不明白，那么我就举个例子。比如你的死敌面前有很多口袋，他和你打赌赌输了，因此他必须从中给你一样东西，而挑选规则却非常奇怪： 
　　每个口袋里有几件物品，你能取其中的一件，你来挑这件物品所在的口袋，而他来挑这个口袋里的物品。你要赶紧挑出口袋并离开，因为你不愿意一直做在那里翻口袋而让你的死敌盯着你。 
　　假设你一次只能找一只口袋，在找口袋时一次只能从里面摸出一样东西。 
　　很显然，当你挑出口袋时，你的死敌会把口袋里最糟糕的物品给你，因此你的目标是挑出“诸多最糟的物品当中是最好的”那个口袋。 
　　你很容易把最小-最大原理运用到这个问题上。你是最大一方棋手，你将挑出最好的口袋。而你的死敌是最小一方棋手，他将挑出最好的口袋里尽可能差的物品。运用最小-最大原理，你需要做的就是挑一个有“最好的最差的”物品的口袋。 
　　假设你可以估计口袋里每个物品的准确价值的话，最小-最大原理可以让你作出正确的选择。我们讨论的话题中，准确评价并不重要，因为它同最小-最大或Alpha-Beta的工作原理没有关系。现在我们假设你可以正确地评价物品。 
　　最小-最大原理刚才讨论过，它的问题是效率太低。你必须看每个口袋里的每件物品，这就需要花很多时间。 
　　那么怎样才能做得比最小-最大更高效呢？ 
　　我们从第一个口袋开始，看每一件物品，并对口袋作出评价。比方说口袋里有一只花生黄油三明治和一辆新汽车的钥匙。你知道三明治更糟，因此如果你挑了这只口袋就会得到三明治。事实上只要我们假设对手也会跟我们一样正确评价物品，那么口袋里的汽车钥匙就是无关紧要的了。 
　　现在你开始翻第二个口袋，这次你采取的方案就和最小-最大方案不同了。你每次看一件物品，并跟你能得到的最好的那件物品(三明治)去比较。只要物品比三明治更好，那么你就按照最小-最大方案来办——去找最糟的，或许最糟的要比三明治更好，那么你就可以挑这个口袋，它比装有三明治的那个口袋好。 
　　比方这个口袋里的第一件物品是一张20美元的钞票，它比三明治好。如果包里其他东西都没比这个更糟了，那么如果你选了这个口袋，它就是对手必须给你的物品，这个口袋就成了你的选择。 
　　这个口袋里的下一件物品是六合装的流行唱片。你认为它比三明治好，但比20美元差，那么这个口袋仍旧可以选择。再下一件物品是一条烂鱼，这回比三明治差了。于是你就说“不谢了”，把口袋放回去，不再考虑它了。 
　　无论口袋里还有什么东西，或许还有另一辆汽车的钥匙，也没有用了，因为你会得到那条烂鱼。或许还有比烂鱼更糟的东西(那么你看着办吧)。无论如何烂鱼已经够糟的了，而你知道挑那个有三明治的口袋肯定会更好。 
　 
算法 
　 
　　Alpha-Beta就是这么工作的，并且只能用递归来实现。稍后我们再来谈最小一方的策略，我希望这样可以更明白些。 
　　这个思想是在搜索中传递两个值，第一个值是Alpha，即搜索到的最好值，任何比它更小的值就没用了，因为策略就是知道Alpha的值，任何小于或等于Alpha的值都不会有所提高。 
　　第二个值是Beta，即对于对手来说最坏的值。这是对手所能承受的最坏的结果，因为我们知道在对手看来，他总是会找到一个对策不比Beta更坏的。如果搜索过程中返回Beta或比Beta更好的值，那就够好的了，走棋的一方就没有机会使用这种策略了。 
　　在搜索着法时，每个搜索过的着法都返回跟Alpha和Beta有关的值，它们之间的关系非常重要，或许意味着搜索可以停止并返回。 
　　如果某个着法的结果小于或等于Alpha，那么它就是很差的着法，因此可以抛弃。因为我前面说过，在这个策略中，局面对走棋的一方来说是以Alpha为评价的。 
　　如果某个着法的结果大于或等于Beta，那么整个结点就作废了，因为对手不希望走到这个局面，而它有别的着法可以避免到达这个局面。因此如果我们找到的评价大于或等于Beta，就证明了这个结点是不会发生的，因此剩下的合理着法没有必要再搜索。 
　　如果某个着法的结果大于Alpha但小于Beta，那么这个着法就是走棋一方可以考虑走的，除非以后有所变化。因此Alpha会不断增加以反映新的情况。有时候可能一个合理着法也不超过Alpha，这在实战中是经常发生的，此时这种局面是不予考虑的，因此为了避免这样的局面，我们必须在博弈树的上一个层局面选择另外一个着法。 
　　在第二个口袋里找到烂鱼就相当于超过了Beta，如果口袋里没有烂鱼，那么考虑六盒装流行唱片的口袋会比三明治的口袋好，这就相当于超过了Alpha(在上一层)。算法如下，醒目的部分是在最小-最大算法上改过的： 
　 
 
<pre class="lang:c++ decode:true " >int AlphaBeta(int depth, int alpha, int beta) { 
　if (depth == 0) { 
　　return Evaluate(); 
　} 
　GenerateLegalMoves(); 
　while (MovesLeft()) { 
　　MakeNextMove(); 
　　val = -AlphaBeta(depth - 1, -beta, -alpha); 
　　UnmakeMove(); 
　　if (val &amp;gt;= beta) { 
　　　return beta; 
　　} 
　　if (val &amp;gt; alpha) { 
　　　alpha = val; 
　　} 
　} 
　return alpha; 
} </pre> 

　 
　　把醒目的部分去掉，剩下的就是最小-最大函数。可以看出现在的算法没有太多的改变。 
　　这个函数需要传递的参数有：需要搜索的深度，负无穷大即Alpha，以及正无穷大即Beta： 
　 
val = AlphaBeta(5, -INFINITY, INFINITY); 
　 
　　这样就完成了5层的搜索。我在写最小-最大函数时，用了一个诀窍来避免用了“Min”还用“Max”函数。在那个算法中，我从递归中返回时简单地对返回值取了负数。这样就使函数值在每一次递归中改变评价的角度，以反映双方棋手的交替着子，并且它们的目标是对立的。 
　　在Alpha-Beta函数中我们做了同样的处理。唯一使算法感到复杂的是，Alpha和Beta是不断互换的。当函数递归时，Alpha和Beta不但取负数而且位置交换了，这就使得情况比口袋的例子复杂，但是可以证明它只是比最小-最大算法更好而已。 
　　最终出现的情况是，在搜索树的很多地方，Beta是很容易超过的，因此很多工作都免去了。 
　 
可能的弱点 
　 
　　这个算法严重依赖于着法的寻找顺序。如果你总是先去搜索最坏的着法，那么Beta截断就不会发生，因此该算法就如同最小-最大一样，效率非常低。该算法最终会找遍整个博弈树，就像最小-最大算法一样。 
　　如果程序总是能挑最好的着法来首先搜索，那么数学上有效分枝因子就接近于实际分枝因子的平方根。这是Alpha-Beta算法可能达到的最好的情况。 
　　由于国际象棋的分枝因子在35左右，这就意味着Alpha-Beta算法能使国际象棋搜索树的分枝因子变成6。 
　　这是很大的改进，在搜索结点数一样的情况下，可以使你的搜索深度达到原来的两倍。这就是为什么使用Alpha-Beta搜索时，着法顺序至关重要的原因。 
　 
　　原文：http://www.seanet.com/~brucemo/topics/alphabeta.htm 
　　译者：黄晨 (webmaster@elephantbase.net) 
　　类型：全译 

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>50</wp:post_id>
		<wp:post_date>2010-02-25 18:51:10</wp:post_date>
		<wp:post_date_gmt>2010-02-25 10:51:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>zhuan-shu-zhuan-ti-Alpha-Beta-sou-suo</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="basic-algo-ji-ben-suan-fa"><![CDATA[Basic Algorithms]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1277895070]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1277895070]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391454]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[转]Alpha_Beta 剪枝</title>
		<link>http://allenlsy.com/2010/02/zhuan-Alpha-Beta/</link>
		<pubDate>Thu, 25 Feb 2010 10:52:35 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.wordpress.com/?p=51</guid>
		<description></description>
		<content:encoded><![CDATA[Tic-Tac-Toe算法笔记

这几天在用Python写Tic-Tac-Toe小游戏，顺便接触了一些简单的人机博弈算法，其实在算法方面我完全算是个新手，所以这也算是一个反复折腾学习的过程。而Tic-Tac-Toe应该算是人机博弈里最简单的应用了，最经典的算法是miniMax算法，也叫极大极小值算法，主要方法就是通过考虑双方博弈N步后，从所有可能的走法中选一步最佳的走法来走。

先简单说说算法的基本思想：
1. 设博弈双方中一方为MAX，另一方为MIN。然后为其中的一方(计算机)找一个最佳走法。

2. 为了找到当前棋局的最优走法，需要对各个可能的走法所产生的后续棋局进行比较，同时也要考虑对方可能的走法，并对后续棋局赋予一定的权值（或者称之为分数）。也就是说，以当前棋局为根节点生成一棵博弈树，N步后的棋局作为树的叶子节点。同时从树根开始轮流给每层结点赋予Max和Min的称号

3. 用一个评估函数来分析计算各个后续棋局（即叶子节点）的权值，估算出来的分数为静态估值

4. 当端节点的估值计算出来后，再推算出父节点的得分。推算的方法是：对于处于MAX层的节点，选其子节点中一个最大的得分作为父节点的得分，这是为了使自己在可供选择的方案中选一个对自己最有利的方案；对处于MIN层的节点，选其子节点中一个最小的得分作为父节点的得分，这是为了立足于最坏的情况，这样计算出的父节点的得分为倒推值。

5.如此反推至根节点下的第一层孩子，如果其中某个孩子能获得较大的倒推值，则它就是当前棋局最好的走法。

<img alt="" src="http://www.kavingray.com/images/minimax_tree.jpg" title="1" class="alignleft" width="490" height="350" />

上次的MiniMax算法虽然在效果上已经达到了预期的目的，即不可战胜的棋力，但在效率上仍然不够理想。电脑每次走步都得估计往下N层棋局的所有情况并估值，层数虽然可以控制，但在大棋局（如五子棋，象棋等）游戏中如此生成的博弈树分支叶子仍然相当庞大，由此有了在此基础上进行“剪枝”的改进算法–Alpha-beta剪枝算法（Alpha-Beta algorithms）。此算法主要优点在于其在边生成博弈树时候边计算评估各节点的倒推值，并且根据评估出的倒推值范围，及时停止扩展那些已无必要再扩展的子节点，即相当于剪去了博弈树上的一些分枝，从而节约了机器开销，提高了搜索效率。

还是简单说说算法的基本思想（再次声明此算法是建立在MiniMax算法基础上）：
1. 对于一个MIN节点，若能估计出其倒推值的上确界Beta，并且这个Beta值不大于MIN的父节点(MAX节点)的估计倒推值的下确界Alpha，即Alpha≥Beta，则就不必再扩展该MIN节点的其余子节点了，因为这些节点的估值对MIN父节点的倒推值已无任何影响了，这一过程称为Alpha剪枝。
2. 对于一个MAX节点，若能估计出其倒推值的下确界Alpha，并且这个Alpha值不小于MAX的父节点(MIN节点)的估计倒推值的上确界Beta，即Alpha≥Beta，则就不必再扩展该MAX节点的其余子节点了，因为这些节点的估值对MAX父节点的倒推值已无任何影响了。这一过程称为Beta剪枝。
3. 一个MAX节点的Alpha值等于其后继节点当前最大的最终倒推值，一个MIN节点的Beta值等于其后继节点当前最小的最终倒推值

如果觉得还是有点难以理解（比如我第一次接触就觉得不知所云），看看下面的伪代码：
 
<pre class="lang:java highlight:0 decode:true " >alpha-beta(player,board,alpha,beta)
    if(game over in current board position)
        return winner

    children = all legal moves for player from this board
    if(max's turn)
        for each child
            score = alpha-beta(other player,child,alpha,beta)
            (we have found a better best move....)
            if score &amp;gt; alpha then alpha = score
            (cut off...)
            if alpha &amp;gt;= beta then return alpha
        return alpha (this is our best move)
    else (min's turn)
        &amp;or each child
            score = alpha-beta(other player,child,alpha,beta)
            (opponent has found a better worse move.....)
            if score &amp;lt; beta then beta = score
            (cut off....)
            if alpha &amp;gt;= beta then return beta
        return beta (this is the opponent's best move)</pre> 

简单的说，在MiniMax函数中我们已经知道，对于MIN节点，我们是要找其子节点的最小估值，如上面的代码，当min’s turn时候，我们先估值，如果 score = 咸鱼Beta，因为对方只会把口袋价值最低的物品给你，这个口袋要么最低是咸鱼，要么还有比咸鱼给无语的东西，意味着这个口袋已经不值得在往下翻了，就算里面还有很多东西。

如果你把上面伪代码中的加粗部分去掉，那便是miniMax的算法，所以说这个算法其实是一个通过减少不必要的分支来节约时间资源的“砍枝”算法
http://hi.baidu.com/highsam/blog/item/5a70011381b70f8a6438db52.html]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>51</wp:post_id>
		<wp:post_date>2010-02-25 18:52:35</wp:post_date>
		<wp:post_date_gmt>2010-02-25 10:52:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>zhuan-Alpha-Beta</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="basic-algo-ji-ben-suan-fa"><![CDATA[Basic Algorithms]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1277895155]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1277895155]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391455]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_449bc50e8edc162686a98e9d196a962e</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_7869ce7ecaa459bca3eb96d487b4d71d</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_ae544a23d540ef8fee3e9e6f51087002</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_a3167254a010b9475b63499a47408814</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_f73e07a95f76fb754b961b2d00ad91eb</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1320091798]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>第一范式，第二范式，第三范式，BCNF</title>
		<link>http://allenlsy.com/2010/03/di-yi-fan-shi-di-er-fan-shi-di-san-fan-shi-BCNF/</link>
		<pubDate>Sun, 07 Mar 2010 10:58:48 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.wordpress.com/?p=54</guid>
		<description></description>
		<content:encoded><![CDATA[<h3><strong>第一范式 1NF</strong></h3>
<p style="padding-left:30px;">属性不可再分割，符合原子性。</p>
<p style="padding-left:30px;">没什么好解释的，地球人都明白</p>

<h3>第二范式 2NF</h3>
<p style="padding-left:30px;">在1NF的基础上：</p>
<p style="padding-left:30px;">不允许出现有field部分依赖于主键（或者说依赖于主键的一部分）</p>
<p style="padding-left:30px;">官方说法：数据库表中不存在非关键字段对任一候选关键字段的部分函数依赖（部分函数依赖指的是存在组合关键字中的某些字段决定非关键字段的情况），也即所有非关键字段都完全依赖于整组候选关键字。</p>
<p style="padding-left:30px;">Allen解释一下：比如一张表是(A, B, C, D)，其中(A, B)是主键，如果存在B-&gt;C就违反了2NF，因为C只需要主键的一部分就可以被决定了</p>

<h3>第三范式 3NF</h3>
<p style="padding-left:30px;">在2NF的基础上：</p>
<p style="padding-left:30px;">不允许出现可传递的依赖关系(transitive dependencies)</p>
<p style="padding-left:30px;">官方说法：在第二范式的基础上，数据表中如果不存在非关键字段对关键字段的传递函数依赖则符合第三范式。所谓传递函数依赖，指的是如果存在"A → B → C"的决定关系，则C传递函数依赖于A</p>
<p style="padding-left:30px;">很容易理解，Kiza同学说这是人类的常识。</p>

<h3>Boyce-Codd范式 BCNF</h3>
<p style="padding-left:30px;">在3NF的基础上：</p>
<p style="padding-left:30px;">不允许出现有主键的一部分被主键另一部分或者其他部分决定</p>
<p style="padding-left:30px;">另一种说法：Left side of every non-trivial FD must contains a key</p>
<p style="padding-left:30px;">每个非平凡FD的左边必须有一个主键</p>
<p style="padding-left:30px;">BCNF，表中的每个决定因子是候选键。如果只有一个候选键，则3NF和BCNF相同</p>
<p style="padding-left:30px;">网友们通常喜欢用的一个例子：</p>
<p style="padding-left:30px;">假设仓库管理关系表为StorehouseManage(仓库ID, 存储物品ID, 管理员ID, 数量)，且有一个管理员只在一个仓库工作；一个仓库可以存储多种物品。这个数据库表中存在如下决定关系：</p>
<p style="padding-left:30px;">(仓库ID, 存储物品ID) →(管理员ID, 数量)</p>
<p style="padding-left:30px;">(管理员ID, 存储物品ID) → (仓库ID, 数量)</p>
<p style="padding-left:30px;">所以，(仓库ID, 存储物品ID)和(管理员ID, 存储物品ID)都是StorehouseManage的候选关键字，表中的唯一非关键字段为数量，它是符合第三范式的。但是，由于存在如下决定关系：</p>
<p style="padding-left:30px;">(仓库ID) → (管理员ID)</p>
<p style="padding-left:30px;">(管理员ID) → (仓库ID)</p>
<p style="padding-left:30px;">也就是说，（仓库ID, 存储物品ID）这个主键中的仓库ID可以被管理员ID决定，同样（管理员ID, 存储物品ID）中管理员ID也可以被仓库ID决定，所以此表应该拆分。</p>

<h3>3NF-&gt;BCNF的步骤：</h3>
<p style="padding-left:30px;">1. 一个表，从所给的FD中，找出一个FD左边没有key的</p>
<p style="padding-left:30px;">2. 给这个FD的右边补全属性（field）。</p>
<p style="padding-left:30px;">3. 此时得到两个表，一个是第2步中得到的FD中的表，另一个是第2步中FD的所有左边 及 其他所有没有在这个FD中出现的属性组成的表</p>
<p style="padding-left:30px;">4. 投影总的FD分别到两个表</p>
<p style="padding-left:30px;">如果仍然有表violation，继续分解</p>
<p style="padding-left:30px;">例如：</p>
<p style="padding-left:30px;">表（Name, Location, Application, Provider, FavAppl）</p>
<p style="padding-left:30px;">FD: Name-&gt;Location, Name-&gt;FavAppl, Application-&gt;Provider</p>
<p style="padding-left:30px;">Key: Name, Application</p>
<p style="padding-left:30px;">1. Name-&gt;Location的左边没有key。</p>
<p style="padding-left:30px;">2. 将其补充。Name-&gt;Location, Name-&gt;FavAppl，因此得到表（Name, Location, FavAppl）</p>
<p style="padding-left:30px;">3. 一个表是（Name, Location, FavAppl）。另一个表，”第2步中FD的所有左边“是指Name，“其他所有没有在这个FD中出现的属性”是指Application和</p>
<p style="padding-left:30px;">Provider。因此第二个表是（Name, Application, Provider）</p>
<p style="padding-left:30px;">4. 第二个表中，Application-&gt;Provider的左边没有key，继续分解第二个表</p>
<p style="padding-left:30px;">最终结果，原表分为了（Name, Location, Provider），（Application, Provider），（Application, Name）</p>

<h3>总结：</h3>
<p style="padding-left:30px;">1NF</p>
<p style="padding-left:30px;">| 消除非主属性对码的部分依赖</p>
<p style="padding-left:30px;">2NF</p>
<p style="padding-left:30px;">| 消除非主属性对码的传递依赖</p>
<p style="padding-left:30px;">3NF</p>
<p style="padding-left:30px;">| 消除主属性对码的部分和传递依赖</p>
<p style="padding-left:30px;">BCNF</p>
<p style="padding-left:30px;"></p>
参考资料：

http://blog.csdn.net/kkdelta/archive/2009/04/11/4064986.aspx

《Beginning Database Design》 By Wrox]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>54</wp:post_id>
		<wp:post_date>2010-03-07 18:58:48</wp:post_date>
		<wp:post_date_gmt>2010-03-07 10:58:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>di-yi-fan-shi-di-er-fan-shi-di-san-fan-shi-BCNF</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="database-shu-ju-ku-she-ji-yu-shi-xian"><![CDATA[Database]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_46f0b461129d31ce3109b0f19623b8e5</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_b1ff66d972d20f1fb250adcee3ebe763</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_5c1319b95d26497fe797c47730b30b57</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_6c3defce38cb167d879c61e92809b81e</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1277895530]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_5876730395390b921c6b4513b7a92ec6</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_403f85018d30d29e2084edc69a8fb018</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_28dcfa5a84714bde2b778062aba5b1e6</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_82ee9e0088c9331f9d33d37e3847e938</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_2e9bf83d58a14487ad62eeeddeddc0c6</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_ebe015b4f32874e7faae2078ea81be9f</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_13ec7e28895651c3c21ee698bb798219</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_46f0b461129d31ce3109b0f19623b8e5</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_b1ff66d972d20f1fb250adcee3ebe763</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_5c1319b95d26497fe797c47730b30b57</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_6c3defce38cb167d879c61e92809b81e</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1277895530]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_5876730395390b921c6b4513b7a92ec6</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_403f85018d30d29e2084edc69a8fb018</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_82ee9e0088c9331f9d33d37e3847e938</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_2e9bf83d58a14487ad62eeeddeddc0c6</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_ebe015b4f32874e7faae2078ea81be9f</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_13ec7e28895651c3c21ee698bb798219</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391456]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_bafb471e64574e69488279784f5f2a90</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>二项式系数 &amp; 递推关系初步</title>
		<link>http://allenlsy.com/2010/03/er-xiang-shi-xi-shu-amp-di-tui-guan-xi-chu-bu/</link>
		<pubDate>Sat, 27 Mar 2010 11:05:02 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.wordpress.com/?p=56</guid>
		<description></description>
		<content:encoded><![CDATA[<h2><strong>二项式系数</strong></h2>
1.        Pascal公式：C( n, k ) = C( n-1, k ) + C( n-1, k-1)

2.        一些恒等式
<p style="padding-left:30px;">a.        k*C( n, k ) = n*C(n-1. k-1 )</p>
<p style="padding-left:30px;">b.       C(n, 0) – C(n, 1) + C(n, 2) - … + (-1)<sup>n</sup>C(n, n) = 0  (n&gt;=1)</p>
<p style="padding-left:30px;">c.        1*C(n, 1) + 2*C(n, 2) + 3*C(n, 3) + … + n*C(n, n) = n*2<sup>n-1</su0></p>
<p style="padding-left:30px;">d.       Vandermonde卷积：</p>
<p style="padding-left:30px;">C(2n, n) =  C(n, 0)<sup>2</sup>+ C(n, 1)<sup>2</sup>+ C(n, 2)<sup>2</sup>+ … + C(n,  n)<sup>2</sup></p>
3.        多项式定理
<p style="padding-left:30px;">a.        (x<sub>1</sub>+ x<sub>2</sub>+…+ x<sub>t</sub>)<sup>n</sup>中，项x<sub>1</sub><sup>n1</sup>x<sub>2</sub><sup> n2</sup>…x<sub>t</sub><sup> nt</sup>的系数是n! /  (n<sub>1</sub>!* n<sub>2</sub>!*… *n<sub>t</sub>!)</p>
<p style="padding-left:30px;">b.       运用Pascal定理描述，</p>
<p style="padding-left:30px;">c.         n! / (n<sub>1</sub>!* n<sub>2</sub>!*… *n<sub>t</sub>!i = n!/[ (  (n<sub>1</sub>-1)!* n<sub>2</sub>!*… *n<sub>t</sub>!) ( n<sub>1</sub>!*(  n<sub>2</sub>-1)!*… *n<sub>t</sub>!)… ( n<sub>1</sub>!*( n<sub>2</sub>-1)!*…  *(n<sub>t</sub>-1)! ) ]</p>
4.        牛顿二项式定理：(x+y)<sup>n</sup> = ∑C(n,  k)x<sup>k</sup>y<sup>n-k</sup>
<p style="padding-left:30px;">a.        (x+y)<sup>n</sup> = y<sup>a</sup>(z+1)<sup>a</sup> = y<sup>a</sup>*∑C(a,  k)z<sup>k</sup>。其中z = x/y</p>
<p style="padding-left:30px;">b.       例如 计算sqrt(20)的展开式</p>

<h2><strong>递推关系初步</strong></h2>
1.        斐波那契数列部分和S<sub>n</sub> =  f<sub>0</sub>+f<sub>1</sub>+…+f<sub>n</sub> = f<sub>n+2</sub> – 1

2.        线性递推关系：h<sub>n</sub> = a<sub>1</sub>h<sub>n-1</sub> +  a<sub>2</sub>h<sub>n-2</sub> +…+ a<sub>k</sub>h<sub>n-k </sub>+  b<sub>n</sub>
<p style="padding-left:30px;">a.        齐次: b<sub>n</sub> = 0</p>
<p style="padding-left:30px;">如果q是方程</p>
<p style="paddi.g-left:30px;">x<sup>k</sup> – a<sub>1</sub>x<sup>k-1</sup> – a<sub>2</sub>x<sup>k-2</sup> -…-  a<sub>k</sub> =0</p>
<p style="padding-left:30px;">的一个根，则h<sub>n</sub> = q<sup>n</sup>是递推关系的一个解</p>
<p style="padding-left:30px;">如果方程有k个非零根且互异，则</p>
<p style="padding-left:30px;">h<sub>n</sub> =  c<sub>1</sub>q<sub>1</sub><sup>n</sup> + c<sub>2</sub>q<sub>2</sub><sup>n</sup> + … +c<sub>k</sub>q<sub>k</sub><sup>n</sup> 是一般解</p>
<p style="padding-left:30px;">该方程称为 特征方程</p>
<p style}"padding-left:30px;">如果q<sub>i</sub>是s<sub>i</sub>的重根，则一般解围</p>
<p style="padding-left:30px;">h<sub>n</sub> = H<sub>n</sub><sup>(1)</sup> + H<sub>n</sub><sup>(2)</sup> +…+  H<sub>n</sub><sup>(t)</sup></p>
<p style="padding-left:30px;">H<sub>n</sub><sup>(t) </sup>= (c<sub>1</sub> + c<sub>2</sub>n + …  +c<sub>s</sub>n<sup>st-1</sup>)q<sub>t</sub><sup>n</sup></p>
<p style="padding-left:30px;">例如h<sub>n</sub> = -h<sub>n-1</sub> + 3h<sub>n-2</sub> +  5h<sub>n-3</sub> + 2h<sub>n-4</sub> 满足h<sub>0</sub> =1,  h<sub>1</sub> =0, h<sub>2</sub> =1, h<sub>3</sub> =2的解</p>
<p style="padding-left:30px;">做x<sup>4<osup> + x<sup>3</sup> – 3x<sup>2</sup> -5x-2  =0</p>
<p style="padding-left:30px;">方程的根是-1， -1， -1， 2。</p>
<p style="padding-left:30px;">对于-1的部分解是</p>
<p style="padding-left:30px;">H<sub>n</sub><sup>(1)</sup> = c<sub>1</sub>(-1)<sup>n</sup> +  c<sub>2</sub>n(-1)<sup>n</sup> + c<sub>3</sub>n<sup>2</sup>(-1)<sup>n</sup></p>
<p style="padding-left:30px;">最终的一般解为</p>
<p style="padding-left:30px;">H<sub>n</sub> =  c<sub>1</sub>(-1)<sup>n</sup> + c<sub>2</sub>n(-1)<sup>n</sup> +  c<sub>3</sub>n<sup>2</sup>(-1)<sup>n</sup> + c<sub>4</sub>2<sup>n</sup></p>
<p style="padding-left:30px;">b.       非齐次</p>
<p style="padding-left:30px;">i.  ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>56</wp:post_id>
		<wp:post_date>2010-03-27 19:05:02</wp:post_date>
		<wp:post_date_gmt>2010-03-27 11:05:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>er-xiang-shi-xi-shu-amp-di-tui-guan-xi-chu-bu</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mathematics-shu-xue"><![CDATA[Mathematics]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1277895904]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391457]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>生成排列组合（Brualdi第4章）笔记</title>
		<link>http://allenlsy.com/2010/02/sheng-cheng-pai-lie-zu-he-Brualdi-di-4-zhang-bi-ji/</link>
		<pubDate>Thu, 18 Feb 2010 14:47:38 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.wordpress.com/?p=65</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>生成排列</h2>
Stirling公式：n! ~ sqrt(2*π*n)(n/e)n
<h3>生成算法1：Johnson，Trotter</h3>
要生成全排列n，则在全排列n-1上，每个排列用插空法插入n
n=2:
1 2
2 1
n=3:
1    2 3
1 3 2
3 1    2
3 2    1
2 3 1
2    1 3
<h3>生成算法2：S.Even, Algorithm Combinatorics, 1973</h3>
如果一个数k的箭头指向一个比他小的相邻的数，那么称k是活动的
对于1..n的序列中的整数n，除以下两种情况外，n总是活动的
1. n在最左边，n的箭头指向左

2. n在最右边，n的箭头指向右

 
<pre class="lang:c++ decode:true " >#include &lt;iostream&gt;
#define F(i,a,b) for (int i=a;i&lt;=b;i++)
using namespace std;

int a[10001], move[10001], n;

int hasActive()
{
    int pos = 0, _max = 0;
    F(i,1,n)
        if (i+move[i]&gt;0 &amp;&amp; i+move[i]&lt;=n &amp;&amp; a[i]&gt;a[ i+move[i] ] &amp;&amp; a[i]&gt;_max)
            pos = i, _max = a[i];
    return pos;
}

int main()
{
    freopen("out.txt", "w", stdout);
    int m;
    scanf("%d", &amp;n);

    F(i,1,n)
        a[i] = i, move[i] = -1;
    F(i,1,n)
        printf("%d ", a[i]);
    printf("\n");

    while ( m = hasActive() )
    {
        swap( a[m], a[ m+move[m] ]);
        int mm = m+move[m];
        swap( move[m], move[ m+move[m] ]);
        m = mm;
        F(i,1,n)
            printf("%d ", a[i]);
        printf("\n");

        F(i, 1, n)
            if (a[i]&gt;a[m])
                move[i]*=-1;
    }

    return 0;
}</pre> 

<h3>生成方法：从123..n开始（每个肩头初始指向左），做：</h3>
1. 求出最大的活动整数m
2. 交换m和其指向的整数
3. 交换所有p&gt;m的整数p的方向
直到序列中没有活动整数为止。

本文来自CSDN博客，转载请标明出处：http://blog.csdn.net/AllenLSY/archive/2010/02/18/5310784.aspx]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>65</wp:post_id>
		<wp:post_date>2010-02-18 22:47:38</wp:post_date>
		<wp:post_date_gmt>2010-02-18 14:47:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sheng-cheng-pai-lie-zu-he-Brualdi-di-4-zhang-bi-ji</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mathematics-shu-xue"><![CDATA[Mathematics]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1277909261]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1277909261]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391458]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Havel定理 POJ 1659</title>
		<link>http://allenlsy.com/2010/05/Havel-ding-li-POJ-1659/</link>
		<pubDate>Sat, 22 May 2010 15:19:56 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.wordpress.com/?p=82</guid>
		<description></description>
		<content:encoded><![CDATA[Havel定理

给定一个非负整数序列{d1,d2,...dn}，若存在一个无向图使得图中各点的度与此序列一一对应，则称此序列可图化。进一步，若图为简单图，则称此序列可简单图化。

可图化的判定比较简单：d1+d2+...dn=0(mod2)。关于具体图的构造，我们可以简单地把奇数度的点配对，剩下的全部搞成自环。

可简单图化的判定，有一个Havel定理，是说: 我们把序列排成不增序，即d1&gt;=d2&gt;=...&gt;=dn，则d可简单图化当且仅当d'=(d2-1, d3-1, ... d(d1+1)-1, d(d1+2), d(d1+3), ... dn)可简单图化。这个定理写起来麻烦，实际上就是说，我们把d排序以后，找出度最大的点(设度为d1)，把它和度次大的d1个点之间连边，然后这个点就可以不管了，一直继续这个过程，直到建出完整的图，或出现负度等明显不合理的情况。

定理的简单证明如下:

()若d可简单图化，设得到的简单图为G。分两种情况考虑:

(a)若G中存在边(V1,V2), (V1,V3), ...(V1,V(d1+1))，则把这些边除去得简单图G'，于是d'可简单图化为G'

(b)若存在点Vi,Vj使得i=dj，必存在k使得(Vi, Vk)在G中但(Vj,Vk)不在G中。这时我们可以令GG=G-{(Vi,Vk),(V1,Vj)}+{(Vk,Vj),(V1,Vi)}。GG的度序列仍为d，我们又回到了情况(a)。

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>82</wp:post_id>
		<wp:post_date>2010-05-22 23:19:56</wp:post_date>
		<wp:post_date_gmt>2010-05-22 15:19:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>Havel-ding-li-POJ-1659</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="graph-theory-tu-lun"><![CDATA[Graph Theory]]></category>
		<category domain="category" nicename="poj-bei-da-ti-ku"><![CDATA[POJ 北大题库]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1277911293]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1277911293]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391463]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>POJ 1659 Havel定理</title>
		<link>http://allenlsy.com/2010/06/POJ-1659-Havel-ding-li/</link>
		<pubDate>Wed, 30 Jun 2010 15:21:36 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.wordpress.com/?p=83</guid>
		<description></description>
		<content:encoded><![CDATA[Havel定理

给定一个非负整数序列{d1,d2,...dn}，若存在一个无向图使得图中各点的度与此序列一一对应，则称此序列可图化。进一步，若图为简单图，则称此序列可简单图化。

可图化的判定比较简单：d1+d2+...dn=0(mod2)。关于具体图的构造，我们可以简单地把奇数度的点配对，剩下的全部搞成自环。

可简单图化的判定，有一个Havel定理，是说: 我们把序列排成不增序，即d1&gt;=d2&gt;=...&gt;=dn，则d可简单图化当且仅当d'=(d2-1, d3-1, ... d(d1+1)-1, d(d1+2), d(d1+3), ... dn)可简单图化。这个定理写起来麻烦，实际上就是说，我们把d排序以后，找出度最大的点(设度为d1)，把它和度次大的d1个点之间连边，然后这个点就可以不管了，一直继续这个过程，直到建出完整的图，或出现负度等明显不合理的情况。

定理的简单证明如下:

()若d可简单图化，设得到的简单图为G。分两种情况考虑:

(a)若G中存在边(V1,V2), (V1,V3), ...(V1,V(d1+1))，则把这些边除去得简单图G'，于是d'可简单图化为G'

(b)若存在点Vi,Vj使得i=dj，必存在k使得(Vi, Vk)在G中但(Vj,Vk)不在G中。这时我们可以令GG=G-{(Vi,Vk),(V1,Vj)}+{(Vk,Vj),(V1,Vi)}。GG的度序列仍为d，我们又回到了情况(a)。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>83</wp:post_id>
		<wp:post_date>2010-06-30 23:21:36</wp:post_date>
		<wp:post_date_gmt>2010-06-30 15:21:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>POJ-1659-Havel-ding-li</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="graph-theory-tu-lun"><![CDATA[Graph Theory]]></category>
		<category domain="category" nicename="poj-bei-da-ti-ku"><![CDATA[POJ 北大题库]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1278952617]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1278952617]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391464]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>5月29日 2010网易挑战赛</title>
		<link>http://allenlsy.com/2010/05/5-yue-29-ri-2010-wang-yi-tiao-zhan-sai/</link>
		<pubDate>Sat, 29 May 2010 23:43:32 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.wordpress.com/?p=85</guid>
		<description></description>
		<content:encoded><![CDATA[希望自己能够永远的记得这一天的心情

尽力了。我想我也并不是没有机会，没有做出来的题目中，有几个我知道怎么去做。只可惜编码能力没有那么强。

我记得去年我看roba在网易的排名时，他大概是70-80名。这一次虽然题目对于这些有名的大牛们不会太难，但是roba还是把自己的排名提到了21名。ACRush因为几次WA而排到16，其实他的最后一道题目也是在半个小时的时候做出来的。

暗想，他们一步一步走到顶峰，需要抵御多少来自身边的压力和诱惑。

看到差距固然好。听别人说起过，“老妖精”roba平时的生活状态虽然说不像正常人，头发乱乱，但是经常写博客，经常就IT界或者文史政界动态发表些文章。在此学习了。

还是那句老话：路漫漫其修远兮，吾将上下而求索。

注：这不是最终排名。俞华程最后时刻消失在前100名中... 

<a href="http://allenlsy.files.wordpress.com/2010/05/0_1275142171icwu.jpg"><img src="http://allenlsy.files.wordpress.com/2010/05/0_1275142171icwu.jpg" alt="" title="0_1275142171icWU" width="497" height="634" class="alignleft size-full wp-image-87" /></a>
<a href="http://allenlsy.files.wordpress.com/2010/05/0_12751421763zr3.jpg"><img src="http://allenlsy.files.wordpress.com/2010/05/0_12751421763zr3.jpg" alt="" title="0_12751421763zr3" width="497" height="643" class="alignleft size-full wp-image-88" /></a>
<a href="http://allenlsy.files.wordpress.com/2010/05/0_12751421820f62.jpg"><img src="http://allenlsy.files.wordpress.com/2010/05/0_12751421820f62.jpg" alt="" title="0_12751421820F62" width="497" height="635" class="alignleft size-full wp-image-90" /></a>
<a href="http://allenlsy.files.wordpress.com/2010/05/0_1275142187b933.jpg"><img src="http://allenlsy.files.wordpress.com/2010/05/0_1275142187b933.jpg" alt="" title="0_1275142187b933" width="497" height="568" class="alignleft size-full wp-image-91" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>85</wp:post_id>
		<wp:post_date>2010-05-29 23:43:32</wp:post_date>
		<wp:post_date_gmt>2010-05-29 23:43:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>5-yue-29-ri-2010-wang-yi-tiao-zhan-sai</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="allenlsy-ri-ji-xin-de"><![CDATA[Daily Life]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1277912815]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391465]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>概率算法</title>
		<link>http://allenlsy.com/2010/07/gai-lv-suan-fa/</link>
		<pubDate>Mon, 05 Jul 2010 04:54:18 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.wordpress.com/?p=98</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>1. 随机数</h2>
<p style="padding-left:30px;">线性同余法：</p>
<p style="padding-left:30px;">a0=d</p>
<p style="padding-left:30px;">an=("*an-1+c) mod m</p>
<p style="padding-left:30px;">其中，d称为随机种子。gcd(b, m)=1</p>

 
<pre class="lang:c++ decode:true " >// RandomNumber.cpp
#include &amp;lt;iostream&amp;gt;
#include &amp;lt;math.h&amp;gt;

using namespace std;

const unsigned long maxshort = 65536;
const unsigned long multiplier = 1194211693;
const unsigned long adder = 12345;

class RandomNumber
{
private:
    unsigned long seed;
public:
    RandomNumber(unsigned long s = 0)
    {
        if (s == 0)
            seed = time(0);
        else
            seed = s;
    }

    // generate a integer from 0 to n-1
    unsigned short Random(unsigned long n)
    {
        seed = multiplier * seed + adder;
        return (unsigned short) ((seed &amp;gt;&amp;gt; 16) % n );
    }

    // generate a double less than 1
    double fRandom()
    {
        return Random(maxshort) / double(maxshort) ;
    }
};</pre> 

<h2>2. 计算PI</h2>
<p style="padding-left:30px;">用投点法估算</p>

 
<pre class="lang:c++ decode:true " >// calculate using n points
double Darts(int n)
{
    RandomNumber rnd;
    int k = 0;
    for (int i=1;i&amp;lt;=n;i++)
    {
        double x = rnd.fRandom();
        double y = rnd.fRandom();
        if (y&amp;lt;=f(x) ) k++;
    }
    return k/(double)n;
}</pre> 

<p style="padding-left:30px;">投点法思想可用于求定积分。</p>
<p style="padding-left:30px;">而根据强大数定理，可得一种平均值法求定积分。数学证明此处不给出。以I = (b-a)/n * ∑g(xi)</p>

 
<pre class="lang:c++ decode:true " >double Integration(double a, double b, int n)
{
    RandomNumber rnd;
    double y = 0;
    for (int i=1;i&amp;lt;=n;i++)
    {
        double x = (b-a) * rnd.fRandom() + a;
        y+=g(x);
    }
    return (b-a) * y / (double)n;
}</pre> 

<h2>3. Sherwood算法</h2>
<p style="padding-left:30px;">对于一个算法A，当它输入实例为x时所需的时间为tA(x)。则算法A的平均时间为c= ∑tA(xi) / |Xn|，n为数据规模。我们不能排除有些实例x使得tA(x) &gt;&gt;c。</p>
<p style="padding-left:30px;">此时希望有一个概率算法B，使得对于所有x属于Xn有tB(x) = c +s(n)</p>
<p style="padding-left:30px;"><strong>搜索有序表：</strong></p>
<p style="padding-left:30px;">用两个数组来表示一个有序表，value数组为原数组，value[ link[0] ] 为表中最小的元素，link[i]表示有序的下一个元素的位置。此相当于用数组模拟指针链表</p>
<p style="padding-left:30px;">例如</p>

 
<pre class="lang:c++ decode:true " >i      :  0  1  2  3  4  5  6  7
value  :     2  3  13 1  5  21 8
link   :  4  2  5  6  1  7  0  3</pre> 

<p style="padding-left:30px;">顺序搜索一个元素的时间复杂度是O(n)</p>
<p style="padding-left:30px;">对此，一个随机化搜索的思想就出来了：随机抽取元素若干次，从最接近的元素x开始顺序搜索。可以证明，如果随机取k个元素，平均比较次数为O(n/(k+1) )。所以k取sqrt(n)，平均时间为O( sqrt(n) )。</p>

 
<pre class="lang:c++ decode:true " >#include &lt;iostream&gt;
#include &lt;math.h&gt;
#include "RandomNumber.cpp"
using namespace std;

template &lt;class T&gt;
class List
{
private:
    int n; // current length
    int maxLength; // capacity
    T *v;
    int *link;
    RandomNumber rnd;
    T Small, Tail;
public:
    List(T small, T tail, int maxL)
    {
        maxLength = maxL;
        v = new T[maxL + 1];
        link = new int[maxL + 1];
        Tail = tail;
        n = 0;
        link[0] = 0;
        v[0] = tail;
        Small = small;
    }

    // seach for element x
    bool Search(T x, int&amp; index)
    {
        index = 0;
        T max = Small;
        int m = floor(sqrt(double(n) ) );
        for (int i=1;i&lt;m;i++)
        {
            int j = rnd.Random(n) + 1;
            T y = v[j];
            if ((max &lt; y) &amp;&amp; (y &lt; x))
            {
                max = y;
                index = j;
            }
        }
        // sequential search
        while (v[ link[index] ] &lt; x) index = link[index];
        return (v[ link[index] ] == x );
    }

    void Insert(T k)
    {
        if ((n == maxLength) || (k &gt;= Tail) )
            return;
        int index;
        if (!Search(k, index) )
        {
            v[++n] = k;
            link[n] = link[index];
            link[index] = n;
        }
    }

    int SearchLast()
    {
        int index = 0;
        T x = v[n];
        T max = Small;
        int m = floor(sqrt(double(n) ) );
        for (int i = 1;i &lt;= m;i++)
        {
            int j = rnd.Random(n) + 1;
            T y = v[j];
            if ( (max &lt; y ) &amp;&amp; (y &lt; x ) )
            {
                max = y;
                index = j;
            }
        }

        while (link[index] != n)
            index = link[index];
        return index;
    }

    void Delete(T k)
    {
        if ((n == 0) || (k &gt;= Tail) ) return;
        int index;
        if ( Search(k, index) )
        {
            int p = link[index];
            if (p == n)
                link[index] = link[p];
            else
            {
                if (link[p] != n)
                {
                    int q = SearchLast();
                    link[q] = p;
                    link[index] = link[p];
                }
                v[p] = v[n];
                link[p] = link[n];
            }
            n--;
        }
    }

    void Out0ut()
    {
        int now = 0;
        for (int i=0;i&lt;n;i++)
        {
            cout &lt;&lt; v[link[now]] &lt;&lt; " ";
            now = link[now];
        }
    }
};</pre> 

<h2>4. Las Vegas 拉斯维加斯算法</h2>
<p style="padding-left:30px;">算法的典型调用是bool success = LV(x, y)，其中x是输入参数，y是解。</p>
<p style="padding-left:30px;">一个正确的拉斯维加斯算法，应该对所有输入x有p(x)&gt;0。更强的意义下，对所有输入x，都有p(x)&gt;δ。</p>
<p style="padding-left:30px;">t(x)是找到x的一个解的时间，有</p>
<p style="padding-left:30px;">t(x) = p(x) s(x) + ( 1 - p(x) )( e(x) + t(x) )</p>
<p style="padding-left:30px;">解方程得t(x) = s(x) + (1-p(x))/p(x)*e(x)</p>
<p style="padding-left:30px;">p(x) 是获得解得概率，s(x)是求解成功的概率，e(x)是不成功的概率</p>
<p style="padding-left:30px;"><strong>n皇后问题</strong></p>

 
<pre class="lang:c++ decode:true " >#include &lt;iostream&gt;
#include &lt;math.h&gt;
#include "RandomNumber.cpp"
using namespace std;

class Queen
{
public:
    // test whether queen k can put into column x[k]
    bool Place(int k)
    {
        for (int j = 1; j&lt;k; j++)
            if ((abs(k-j) == abs( x[j] - x[k] )) || (x[j] == x[k]) )
                return false;
        return true;
    }

    bool Backtrack(int t)
    {
        if (t &gt; n )
        {
            for (int i = 1; i&lt;=n; i++)
                y[i] = x[i];
            return true;
        }
        else
        {
            bool res = false;
            for (int i = 1;i &lt;= n; i++)
            {
                x[t] = i;
                if (Place(t) )
                    res = res || Backtrack(t+1);
            }
            return res;
        }

    }

    bool QueensLV(int stopVegas)
    {
        RandomNumber rnd;
        int k = 1, count = 1;
        while ((k &lt;= stopVegas) &amp;&amp; (count &gt; 0) )
        {
            count = 0;
            int j = 0;
            for (int i = 1; i &lt;= n; i++)
            {
                x[k] = i;
                if (Place(k) )
                    if (rnd.Random(++count)==0)
                        j = i;
            }
            if (count &gt; 0)
                x[k++] = j;
        }
        return (count &gt; 0);
    }

    int n, *x, *y;
};

void nQueen(int n)
{
    Queen X;
    X.n = n;
    int stop = 5;
    int *p = new int[n+1];
    int *q = new int[n+1];

    do
    {
        for (int i = 0; i &lt;= n; i++)
        {
            p[i] = 0;
            q[i] = 0;
        }

        X.x = p;
        X.y = q;

        while ( !X.QueensLV(stop) );
    }
    while (! X.Backtrack(stop+1) );

    // output result
    for (int i = 1; i &lt;= n; i++)
        cout &lt;&lt; q[i] &lt;&lt; " ";
    cout &lt;&lt; endl;
}

int main()
{
    nQueen(10);

    return 0;
}
</pre> 

<h2>5. Monte Carlo蒙特卡罗算法</h2>
<p style="padding-left:30px;">1/2 &lt; p &lt; 1。如果一个算法对于任意实例得到正确解得概率都不小于p，则称其为p正确的蒙特卡罗算法 。</p>
<p style="padding-left:30px;">如果对于同一实例，蒙特卡罗算法不会给出两个不同的正确解，称此蒙特卡罗算法是一致的。</p>
<p style="padding-left:30px;">假如MC(x)是一个蒙特卡罗算法，如果MC(x) 为true是解总是正确，false时可能产生错误解，则称其为偏真算法。对于偏真算法，p可以放松为p&gt;0。</p>
<p style="padding-left:30px;">如果一个MC(x)使得问题实例子集X</p>
<p style="padding-left:30px;">(1)当x∈ X，正确解是y<sub>0</sub>，但MC(x)返回的解未必是y<sub>0</sub></p>
<p style="padding-left:30px;">(2)当x ￠X，MC(x)返回的解总是正确的。</p>
<p style="padding-left:30px;">因此，重复调用一个一致的p正确偏y<sub>0</sub> 的MC算法k次，可得到一个(1-(1-p)<sup>k</sup>)正确的MC算法，且仍然偏y<sub>0</sub> 。</p>
<p style="padding-left:30px;"></p>
参考资料：《计算机算法设计与分析》福州大学 王晓东]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>98</wp:post_id>
		<wp:post_date>2010-07-05 12:54:18</wp:post_date>
		<wp:post_date_gmt>2010-07-05 04:54:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gai-lv-suan-fa</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="basic-algo-ji-ben-suan-fa"><![CDATA[Basic Algorithms]]></category>
		<category domain="category" nicename="mathematics-shu-xue"><![CDATA[Mathematics]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1278305658]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1278305658]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391472]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>最大子段和问题及其推广</title>
		<link>http://allenlsy.com/2010/07/zui-da-zi-duan-he-wen-ti-ji-qi-tui-guang/</link>
		<pubDate>Tue, 06 Jul 2010 04:31:31 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.wordpress.com/?p=109</guid>
		<description></description>
		<content:encoded><![CDATA[首先挂上我的头部

 
<pre class="lang:c++ decode:true " >#include &lt;iostream&gt;
#define MAX(x,y) x &gt; y ? x : y
#define MIN(x, y) x &lt; y ? x : y
#define F(i,a,b) for (int i=a;i&lt;=b;i++)
#define FD(i,a,b) for (int i=a;i&gt;=b;i--)</pre> 


<h2>1. 最大子段和问题</h2>
<p style="padding-left:30px;">问题为：a[]中，求i, j使得∑(k=i..j)a<sub>k</sub>最大（i&lt;=j），并求出最大值</p>
<p style="padding-left:30px;">动态规划算法，若有b[j] = max{ ∑(k=i..j)a<sub>k</sub>，则原问题变为求max b[j]，1&lt;=j&lt;=n。</p>
<p style="padding-left:30px;">得到状态转移方程<span style="color:#ff0000;">b[j] = max{ b[j-1] + a[j], a[j] }</span></p>
<p style="padding-left:30px;">即要么取当前值和前面的段相连，要么开始新的一段而不与前面的段相连。</p>
<p style="padding-left:30px;">时间复杂度和空间复杂度均为O(n)。</p>

 
<pre class="lang:c++ decode:true " >// count Max summation of a segment in a. a starts from 0
int MaxSum(int a[], int n)
{
	int nStart = a[n-1], nAll = a[n-1];
	FD(i,n-2,0)
	{
		nStart = nStart &amp;lt; 0 ? 0 : nStart;
		nStart += a[i];
		nAll = nStart &amp;gt; nAll ? nStart : nAll;
	}
	return nAll;
}</pre> 
<h2>2. 推广：最大子矩阵和问题</h2>
<p style="padding-left:30px;">顾名思义的问题，求a[][]中 max{ ∑(i=x1..x2)∑(j=y1..y2)a[i][j] }。</p>
<p style="padding-left:30px;"><strong>思路</strong>是将问题转化为一维的子段和问题。让BC[i] 表示在确定上下边界的情况下的第i列和。BC[i] = ∑(k=x1..x2)a[k][i]。我习惯x方向向下，y方向向右。BC的意思应该是block column，我不知道，参考别人的代码乱想的。</p>
<p style="padding-left:30px;">这样，只需要枚举上下边界，再用一维的方法就可以了。</p>
<p style="padding-left:30px;">时间复杂度O( N*M*min(M,N) )，因为在做的时候，如果左右方向短一些，可以先转置一下矩阵。</p>

 
<pre class="lang:c++ decode:true " >// two dimension
int MaxSum2(int **a, int n, int m)
{
    int sum = 0;
    int b[n+1];
    F(i,1,m)
    {
        memset(b, 0, sizeof(b) );
        F(j,i,m)
        {
            F(k,1,n)
                b[k]+=a[j][k];
            int max = MaxSum(b, n);
            sum = max &amp;gt; sum ? max : sum;
        }
    }
    return sum;
}</pre> 

<h2>3. 推广：最大m子段和问题</h2>
<p style="padding-left:30px;">求a[]中m个不相交的子段，使得总和最大。</p>
<p style="padding-left:30px;">这样一来，最大子段和问题只是m=1的特殊情形。</p>
<p style="padding-left:30px;">设b[i][j]表示前j个元素中分成i段，且第i段包含j时的最大值。</p>
<p style="padding-left:30px;"><span style="color:#ff0000;">b[i][i] = max{ b[i][j-1] + a[j], max( b[i-1][t] + a[j] ) }</span>，其中t=i-1..j。</p>
<p style="padding-left:30px;">相当于，在max(b[i-1][t] + a[j] )这一步，要枚举t。</p>
<p style="padding-left:30px;">感觉起来，算法需要O(mn<sup>2</sup>)的复杂度和O(mn)的空间，实际上，计算b[i][j]时只需要知道b[i-1][]的值。经过改进，可知道时间复杂度为O( m(n-m) )和空间复杂度O(n)。</p>

 
<pre class="lang:c++ decode:true " >// m summations in array s
int MaxSum(int m, int n, int *a)
{
    if (n&amp;lt;m || m &amp;lt;1)
        return 0;

    int b[n+1], c[n+1];
    b[0] = 0, c[1] = 0;
    F(i,1,m)
    {
        b[i] = b[i-1] + a[i];
        c[i-1] = b[i];
        int max = b[i];
        F(j, i+1, i+n-m)
        {
            b[j] = b[j-1] &amp;gt; c[j-1] ? b[j-1]+a[j] : c[j-1] + a[j];
            c[j-1] = max;
            max = max &amp;lt; b[j] ? b[j] : max;
        }
        c[i+n-m] = max;

    }
    int sum = 0;
    F(j, m ,n)
        sum = sum &amp;lt; b[j] ? b[j] : sum;
    return sum;
}</pre> 

<h2>4. 推广：最大m子矩阵和问题（研究中…）</h2>
参考资料：
<p style="padding-left:30px;">《计算机算法设计与分析》 福州大学 王晓东</p>
<p style="padding-left:30px;">《编程之美》</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>109</wp:post_id>
		<wp:post_date>2010-07-06 12:31:31</wp:post_date>
		<wp:post_date_gmt>2010-07-06 04:31:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>zui-da-zi-duan-he-wen-ti-ji-qi-tui-guang</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="basic-algo-ji-ben-suan-fa"><![CDATA[Basic Algorithms]]></category>
		<category domain="post_tag" nicename="dynamic-programming"><![CDATA[dynamic programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1278390693]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e6%9c%80%e5%a4%a7%e5%ad%90%e6%ae%b5%e5%92%8c%e9%97%ae%e9%a2%98%e5%8f%8a%e5%85%b6%e6%8e%a8%e5%b9%bf]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1278390693]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e6%9c%80%e5%a4%a7%e5%ad%90%e6%ae%b5%e5%92%8c%e9%97%ae%e9%a2%98%e5%8f%8a%e5%85%b6%e6%8e%a8%e5%b9%bf]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391473]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>数值问题（一）</title>
		<link>http://allenlsy.com/2010/07/shu-zhi-wen-ti-yi/</link>
		<pubDate>Wed, 07 Jul 2010 13:05:22 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.wordpress.com/?p=117</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>求二进制中1的个数</h2>
如果二进制中只有一个1，比如01000，只需判断此数是不是2的整数次幂。如果存在一个操作，和这个数运算后的0或1，则可以判断。可以使用01000和00111做AND操作，得到0。

因此有以下解法

<pre class="lang:c++ decode:true " >int count1inN(int n)
{
	int num = 0;
	while (n)
	{
		n &amp;= (n-1);
		num++;
	}
	return num;
}</pre> 

<h2>阶乘末尾的0的个数</h2>
0的个数Z = [N/5] + [N/5<sup>2</sup>] + [N/5<sup>3</sup>] + …。因为一个不大于N的5的倍数向Z贡献一个0，25的倍数再贡献一个0。

 
<pre class="lang:c++ decode:true " >int count0inNFac(int n)
{
	int ret = 0;
	while (n)
	{
		ret += n/5;
		n/=5;
	}
	return ret;
}
</pre> 

<h2>1~N中，出现了多少个数字n</h2>
直接给出公式了，推导自己想。

对于N中某一数位：

如果<span style="color:#f8472f;">小于</span>n，则个数由更高位决定，等于更高位数字*当前位。
<p style="padding-left:30px;">比如12013中的1的个数，在百位计算时，为12*100个1。</p>
如果<span style="color:#f8472f;">等于</span>n，等于更高位数字*当前位+更低位数字+1。
<p style="padding-left:30px;">比如12013，十位，120*10 + 3 + 1</p>
如果<span style="color:#f8472f;">大于</span>n，(等于更高位数字+1)*当前位

 
<pre class="lang:c++ decode:true " >long SumNs(int N, int n)
{
	long iCount = 0, iFac = 1, iLowerNum = 0, iCurrNum = 0, iHigherNum = 0;

	while (N / iFac != 0)
	{
		iLowerNum = N - (N / iFac) * iFac;
		iCurrNum = (N / iFac)%10;
		iHigherNum = N / (iFac * 10);

		if (iCurrNum &lt; n)
			iCount += iHigherNum * iFac;
		else
		if (iCurrNum == n)
			iCount += iHigherNum * iFac + iLowerNum + 1;
		else
			iCount += (iHigherNum +1) * iFac;

		iFac *= 10;
	}
	return iCount;
}</pre> 

<h3>参考资料</h3>
编程之美]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>117</wp:post_id>
		<wp:post_date>2010-07-07 21:05:22</wp:post_date>
		<wp:post_date_gmt>2010-07-07 13:05:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>shu-zhi-wen-ti-yi</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="basic-algo-ji-ben-suan-fa"><![CDATA[Basic Algorithms]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1278507925]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1278507925]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391474]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1331107347]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>POJ 2983</title>
		<link>http://allenlsy.com/2010/07/POJ-2983/</link>
		<pubDate>Sat, 10 Jul 2010 09:35:38 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.wordpress.com/?p=122</guid>
		<description></description>
		<content:encoded><![CDATA[这个题使用差分约束系统。因为不熟，所以再次研究了一下差分约束系统。

线性规划中，如果有一组约束，每个约束都表示为Xi – Xj&lt;=a，那么这组约束用图论模型表示则是Xi到Xj由带权有向线段连接，权值为a。显然，Xi – Xj=a这样的可变为Xi – Xj&lt;=a和Xi – Xj&gt;=a两个约束。 这样，根据条件，构造图，再用bellman-ford算法判断是否有负环，就可得到答案了

参考资料：《算法导论》

 
<pre class="lang:c++ decode:true " >#include &lt;iostream&gt;
#include &lt;algorithm&gt;
#define F(i,a,b) for (int i=a;i&lt;=b;i++)
#define maxn 3000002
#define MAX 1000000
using namespace std;

struct Edge
{
    int s, t, len;
    Edge() {}
    Edge(int a, int b, int c)
    {
        s = a, t = b, len = c;
    }

}e[maxn];

int n, m, ne, d[maxn];

bool relax(int x)
{
    int s = e[x].s, t = e[x].t, len = e[x].len;
    if (d[t] &gt; d[s] + len)
    {
        d[t] = d[s] + len;
        return true;
    }
    return false;
}

bool bellman(int start)
{
    fill (d, d+n+1, MAX);
    d[start] = 0;

    bool refresh=true;
	for (int i=1;i&lt;=n-1 &amp;&amp; refresh;i++)
	{
		refresh=false;
		F(j,1,ne)
			refresh=relax(j)||refresh;
	}
	F(i,1,ne)
		if ( relax(i) )
			return false;
	return true;
}


int main()
{
    char order;

    while (scanf("%d%d", &amp;n, &amp;m) != EOF)
    {
        int a, b, c;
        ne = 0;
        F(i,1,m)
        {
            c = -1;
            scanf("\n%c%d%d", &amp;order, &amp;a, &amp;b);
            if (order == 'P')
            {
                scanf("%d", &amp;c);
                e[++ne] = Edge(a, b, -c);
                e[++ne] = Edge(b, a, c);
            }
            else
                e[++ne] = Edge(a,b,-1);
        }

        if ( !bellman(1) )
            cout &lt;&lt; "Unreliable\n";
        else
            cout &lt;&lt; "Reliable\n";
    }

    return 0;
}</pre> 
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>122</wp:post_id>
		<wp:post_date>2010-07-10 17:35:38</wp:post_date>
		<wp:post_date_gmt>2010-07-10 09:35:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>POJ-2983</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="graph-theory-tu-lun"><![CDATA[Graph Theory]]></category>
		<category domain="category" nicename="poj-bei-da-ti-ku"><![CDATA[POJ 北大题库]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1278754541]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1278754541]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391475]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>【转】博弈论</title>
		<link>http://allenlsy.com/2010/07/zhuan-bo-yi-lun/</link>
		<pubDate>Sat, 10 Jul 2010 09:47:10 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.wordpress.com/?p=124</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>零和与非零和</h2>
先谈几个概念：
零和博弈：又称零和游戏，与非零和博弈相对，是博弈论的一个概念，指参与博弈的各方，在严格竞争下，一方的收益必然意味着另一方的损失，博弈各方的收益和损失相加总和永远为“零”。双方不存在合作的可能。也可以说：自己的幸福是建立在他人的痛苦之上的，二者的大小完全相等，因而双方都想尽一切办法以实现“损人利己”。零和博弈的例子有：赌博、期货、股票投机等。

非零和博弈：博弈中各方的收益或损失的总和不是零值，它区别于零和博弈。在经济学研究中很有用。在这种状况时，自己的所得并不与他人的所失的大小相等，连自己的幸福也未必建立在他人的痛苦之上，即使伤害他人也可能“损人不利己”，所以博弈双方存在“双赢”的可能，进而合作。非零和博弈的例子：譬如，在恋爱中一方受伤的时候，对方并不是一定得到满足。也有可能双方一起能得精神的满足。也有可能双方一起受伤。通常，彼此精神的损益不是零和的。比如目前的中美关系，就并非“非此即彼”，而是可以合作双赢。不过想想看在这样的利益交换之下，牺牲掉谁的利益？

帕累托最优：也称为帕累托效率，是经济学中的重要概念，并且在博弈论、 工程学和社会科学中有着广泛的应用。 与其密切相关的另一个概念是帕累托改善。帕累托最优是指资源分配的一种理想状态。假定固有的一群人和可分配的资源，如果从一种分配状态到另一种状态的变化中，在没有使任何人境况变坏的前提下，使得至少一个人变得更好，这就是帕累托改善。帕累托最优的状态就是不可能再有更多的帕累托改善的状态；换句话说，不可能再改善某些人的境况，而不使任何其他人受损。
需要指出的是，帕累托最优只是各种理想态标准中的“最低标准”。也就是说，一种状态如果尚未达到帕累托最优，那么它一定是不理想的，因为还存在改进的余地，可以在不损害任何人的前提下使某一些人的福利得到提高。但是一种达到了帕累托最优的状态并不一定真的很“理想”。比如说，假设一个社会里只有一个百万富翁和一个快饿死的乞丐，如果这个百万富翁拿出自己财富的万分之一，就可以使后者免于死亡。但是因为这样无偿的财富转移损害了富翁的福利（假设这个乞丐没有什么可以用于回报富翁的资源或服务），所以进行这种财富转移并不是帕累托改进，而这个只有一个百万富翁和一个饿死乞丐的社会可以被认为是帕累托最优的。（这里可以与古典功利主义的标准做一比较。按功利主义的标准，理想的状态是使人们的福利的总和最大化的状态。如果一个富翁损失很少的福利，却能够极大地增加乞丐的福利，使其免于死亡，那么社会的福利总和就增加了，所以从功利主义的角度看，这样的财富转移是一种改善，而最初的极端不平等状态则是不理想的，因为它的福利总和较低。可以看到，帕累托改进要求在提高某些人福利的时候不能减少任何一个人的福利，而功利主义则允许为了提高福利总和而减少一些人的福利。）

经济学理论认为，如果市场是完备的和充分竞争的，市场交换的结果一定是帕累托最优的，并且会同时满足以下3个条件：
1. 交换最优：即使再交易，个人也不能从中得到更大的利益。此时对任意两个消费者，任意两种商品的边际替代率是相同的，且两个消费者的效用同时得到最大化。
2. 生产最优：这个经济体必须在自己的生产可能性边界上。此时对任意两个生产不同产品的生产者，需要投入的两种生产要素的边际技术替代率是相同的，且两个消费者的产量同时得到最大化。
3. 产品混合最优：经济体产出产品的组合必须反映消费者的偏好。此时任意两种商品之间的边际替代率必须与任何生产者在这两种商品之间的边际产品转换率相同。

如果一个经济体不是帕累托最优，则存在一些人可以在不使其他人的境况变坏的情况下使自己的境况变好的情形。普遍认为这样低效的产出的情况是需要避免的，因此帕累托最优是评价一个经济体和政治方针的非常重要的标准。
但是，如同上面指出的，一个帕累托最优的经济系统只是在“最低”的意义上是“理想”的，并不能保证其中没有贫困或严重的贫富差距。

帕累托最优是以提出这个概念的意大利经济学家维弗雷多·帕雷托的名字命名的， 维弗雷多·帕雷托在他关于经济效率和收入分配的研究中使用了这个概念
<h2>囚徒困境</h2>
囚徒困境是博弈论的非零和博弈中具代表性的例子，反映个人最佳选择并非团体最佳选择。虽然困境本身只属模型性质，但现实中的价格竞争、环境保护等方面，也会频繁出现类似情况。

单次发生的囚徒困境，和多次重复的囚徒困境结果不会一样。

在重复的囚徒困境中，博弈被反复地进行。因而每个参与者都有机会去“惩罚”另一个参与者前一回合的不合作行为。这时，合作可能会作为均衡的结果出现。欺骗的动机这时可能被受到惩罚的威胁所克服，从而可能导向一个较好的、合作的结果。作为反复接近无限的数量，纳什均衡趋向于帕累托最优。

囚徒困境的主旨为，囚徒们虽然彼此合作，坚不吐实，可为全体带来最佳利益（无罪开释），但在资讯不明的情况下，因为出卖同伙可为自己带来利益（缩短刑期），也因为同伙把自己招出来可为他带来利益，因此彼此出卖虽违反最佳共同利益，反而是自己最大利益所在。但实际上，执法机构不可能设立如此情境来诱使所有囚徒招供，因为囚徒们必须考虑刑期以外之因素（出卖同伙会受到报复等），而无法完全以执法者所设立之利益（刑期）作考量。

1950年，由就职于兰德公司的梅里尔·弗勒德（Merrill Flood）和梅尔文·德雷希尔（Melvin Dresher）拟定出相关困境的理论，后来由顾问艾伯特·塔克（Albert Tucker）以囚徒方式阐述，并命名为“囚徒困境”。经典的囚徒困境如下：

警方逮捕甲、乙两名嫌疑犯，但没有足够证据指控二人有罪。于是警方分开囚禁嫌疑犯，分别和二人见面，并向双方提供以下相同的选择：

* 若一人认罪并作证检控对方（相关术语称“背叛”对方），而对方保持沉默，此人将即时获释，沉默者将判监10年。
* 若二人都保持沉默（相关术语称互相“合作”），则二人同样判监半年。
* 若二人都互相检举（互相“背叛”），则二人同样判监2年。
甲沉默（合作） 	          甲认罪（背叛）
乙沉默（合作） 	二人同服刑半年 	          甲即时获释；乙服刑10年
乙认罪（背叛） 	甲服刑10年；乙即时获释 	  二人同服刑2年

囚徒困境假定每个参与者（即“囚徒”）都是利己的，即都寻求最大自身利益，而不关心另一参与者的利益。参与者某一策略所得利益，如果在任何情况下都比其他策略要低的话，此策略称为“严格劣势”，理性的参与者绝不会选择。另外，没有任何其他力量干预个人决策，参与者可完全按照自己意愿选择策略。

囚徒到底应该选择哪一项策略，才能将自己个人的刑期缩至最短？两名囚徒由于隔绝监禁，并不知道对方选择；而即使他们能交谈，还是未必能够尽信对方不会反口。就个人的理性选择而言，检举背叛对方所得刑期，总比沉默要来得低。试设想困境中两名理性囚徒会如何作出选择：

* 若对方沉默、我背叛会让我获释，所以会选择背叛。
* 若对方背叛指控我，我也要指控对方才能得到较低的刑期，所以也是会选择背叛。

二人面对的情况一样，所以二人的理性思考都会得出相同的结论——选择背叛。背叛是两种策略之中的支配性策略。因此，这场博弈中唯一可能达到的纳什均衡，就是双方参与者都背叛对方，结果二人同样服刑2年。

这场博弈的纳什均衡，显然不是顾及团体利益的帕累托最优解决方案。以全体利益而言，如果两个参与者都合作保持沉默，两人都只会被判刑半年，总体利益更高，结果也比两人背叛对方、判刑2年的情况较佳。但根据以上假设，二人均为理性的个人，且只追求自己个人利益。均衡状况会是两个囚徒都选择背叛，结果二人判监均比合作为高，总体利益较合作为低。这就是“困境”所在。例子华丽地证明了：非零和博弈中，帕累托最优和纳什均衡是相冲突的。

<strong>固定局数的囚徒困境</strong>
试想像囚徒困境的情况进行十次。

我们可以合理地设想，如果囚徒第一次被对方指控，第二次这个囚徒也会指控对方。相反，如果第一次别人保持沉默，建立了互信的关系，你也会保持沉默，达致帕累托最优。
当然，两个囚徒都会有相似的想法，在第一局保持沉默，以期望建立互信关系，所以双方都会保持沉默。第二局时，双方亦应有相似的想法，继续保持沉默，以期继续在互信的情况下进行第三局，以致余下的八局。

<strong>这种想法合理吗？</strong>

在第十局时，互信的关系明显是没有意义的，因为十局已经完结，囚徒没有必要为维持互信的关系而沉默(没有第十一局)，所以第十局囚徒一定会背叛对方的，理由和只有一局囚徒困境一样。
问题是，既然大家都知道在第十局，无论如何对方都会背叛自己的，你在第九局保持沉默也是没有意思的，要知道，保持沉默(友好关系)的原因是为了希望下一局别人保持沉默。所以第九局双方都一定会背叛对方的。

下一个问题是，双方都有相同的想法，明知第九局对方会背叛自己，所以第八局保持沉默也是没有意思的，第七局亦然，如此类推，纳什均衡是十局都会互相背叛，建立互信关系是没有可能的。
只有在囚徒困境的局数大家都不肯定的情况下，上述的推论才不会发生，才会出现互相保持沉默的现象。

<strong>现实的例子</strong>

上述例子可能显得不甚自然，但现实中，无论是人类社会或大自然都可以找到类似囚徒困境的例子，将结果划成同样的支付矩阵。社会科学中的经济学、政治学和社会学，以及自然科学的动物行动学、进化生物学等学科，都可以用囚徒困境分析，模拟生物面对无止境的囚徒困境博弈。囚徒困境可以广为使用，说明这种博弈的重要性。以下为各界例子：
政治学例子：军备竞赛

在政治学中，两国之间的军备竞赛可以用囚徒困境来描述。两国都可以声称有两种选择：增加军备（背叛）、或是达成削减武器协议（合作）。两国都无法肯定对方会遵守协议，因此两国最终会倾向增加军备。似乎自相矛盾的是，虽然增加军备会是两国的“理性”行为，但结果却显得“非理性”（例如会对经济造成都有损坏等）。这可视作遏制理论的推论，就是以强大的军事力量来遏制对方的进攻，以达到和平。
经济学例子：关税战

两个国家，在关税上可以有以两个选择:

1. 提高关税，以保护自己的商品。（背叛）
2. 与对方达成关税协定，降低关税以利各自商品流通。（合作）

当一国因某些因素不遵守关税协定，而独自提高关税（背叛）时，另一国也会作出同样反应（亦背叛），这就引发了关税战，两国的商品失去了对方的市场，对本身经济也造成损害（共同背叛的结果）。然后二国又重新达成关税协定。（重复博弈的结果是将发现共同合作利益最大。）

商业例子：广告战

商业活动中亦会出现各种囚徒困境例子。以广告竞争为例。

两个公司互相竞争，二公司的广告互相影响，即一公司的广告较被顾客接受则会夺取对方的部分收入。但若二者同时期发出质量类似的广告，收入增加很少但成本增加。但若不提高广告质量，生意又会被对方夺走。

此二公司可以有二选择：

1. 互相达成协议，减少广告的开支。（合作）
2. 增加广告开支，设法提升广告的质量，压倒对方。（背叛）

若二公司不信任对方，无法合作，背叛成为支配性策略时，二公司将陷入广告战，而广告成本的增加损害了二公司的收益，这就是陷入囚徒困境。在现实中，要二互相竞争的公司达成合作协议是较为困难的，多数都会陷入囚徒困境中。

自行车赛例子

自行车赛事的比赛策略也是一种博弈，而其结果可用囚徒困境的研究成果解释。例如每年都举办的环法自由车赛中有以下情况：选手们在到终点前的路程常以大队伍（英文:Peloton）方式前进，他们采取这策略是为了令自己不至于太落后，又出力适中。而最前方的选手在迎风时是最费力的，所以选择在前方是最差的策略。通常会发生这样的情况，大家起先都不愿意向前（共同背叛），这使得全体速度很慢，而后通常会有二或多位选手骑到前面，然后一段时间内互相交换最前方位置，以分担风的阻力（共同合作），使得全体的速度有所提升，而这时如果前方的其中一人试图一直保持前方位置（背叛），其他选手以及大队伍就会赶上（共同背叛）。而通常的情况是，在最前面次数最多的选手（合作）通常会到最后被落后的选手赶上（背叛），因为后面的选手骑在前面选手的冲流之中，比较不费力。
<h2>海盗分金币</h2>
有五个理性的海盗，A, B, C, D 和 E，找到了100个金币，需要想办法分配金币。
海盗们有严格的等级制度：A 比 B 职位高，B 比 C 高，C 比 D 高，D 比 E 高。

海盗世界的分配原则是：等级最高的海盗提出一种分配方案。所有的海盗投票决定是否接受分配，包括提议人。并且在票数相同的情况下，提议人有决定权。如果提议通过，那么海盗们按照提议分配金币。如果没有通过，那么提议人将被扔出船外，然后由下一个最高职位的海盗提出新的分配方案。

海盗们基于三个因素来做决定。首先，要能存活下来。其次，自己得到的利益最大化。最后，在所有其他条件相同的情况下，优先选择把别人扔出船外。

直觉上认为，A 海盗会给自己分配很少，以避免被扔出船外。然而这和理论结果相差甚远。
让我们反过来看：如果只剩下 D 和 E，D 给自己100个金币，给 E 0 个。因为 D 有决定权，所以分配达成。E 没有别的选择，他只能接受。

如果剩下三个人（C，D和E），C 知道 D 下轮会给 E 0 个金币，所以 C 这轮给 E 1个金币，让 E 支持自己以使得提议通过。因此如果剩下三个人，结果是C：99，D：0，E：1。E 会反对 C 的做法么？这样对它没有好处，假定它反对，把 C 扔出去对 E 也没有好处，就像我们上面分析的。

如果 B, C, D 和 E 剩下， B 知道上述结果。所以为了避免被扔出去，他只需要给 D 1 个金币，因为他有决定权，只需要 D 的支持就足够了。因此他会提议 B：99， C：0， D：1，E：0。有人可能想到提议 B：99， C：0， D：0，E：1，因为 E 知道即使把 B 扔出去，也不会得到更多了。但由于海盗会优先把别人扔出去，所以 E 会选择杀死 B，然后仍然可以从 C 的提议中得到相同金币。

假设 A 知道所有的一切，他就能选择让 C 和 E 来支持他，提议变成：A: 98 金币；B: 0 金币；C: 1 金币；D: 0 金币；E: 1 金币。

同样的 A：98，B：0，C：0，D：1，E：1 或者其他的提议都不是最好的，因为 D 会选择把A扔出去，然后从B 那里得到相同的金币。
通过这个例子我们可以在一定程度上了解博弈的本质,博弈并不是单纯的寻找最优方案或者最优解,博弈关心的是一方的行为对其他人造成的影响，这一点和许多最优化问题并不相同。

<strong>旅行者的困境</strong>
航空公司丢失了两位互相不认识乘客的旅行包。两个旅行包正好都是一样的，并且里面有相同价值的古董，两位乘客都向航空公司索赔 100 美元。为了评估出古董的真实价值，公司经理将两位乘客分开以避免两人合谋，分别让他们写下古董的价值，其金额要不低于 2 美元，并且不高于 100 美元。同时还告诉两人：如果两个数字是一样的，那么会被认为是其真实价值，他们能获得相应金额的赔偿。如果数字不一样，较小的会被认为是真实价值，而两人在获得这个金额的同时有相应的奖赏/惩罚：写下较小金额的会获得 2 美元额外的奖励，较大的会有 2 美元的惩罚。现在问题在于：两位旅行者应该用什么策略来决定他们应该写下的金额？
设身处地想一想的话，这个（2,2）是合理的，如果我预期那位乘客和我有不共戴天之仇的话，那么我会毫不犹豫写下2元的。这样的话，这个情况中并没有告诉我们古董的真实价格是多少，也没有告诉我们双方对彼此的映像，即使一面也没有见过的陌生人的话，更不会有不共戴天之仇吧，总的来说，我会写下古董真实价格 V 略低一些，毕竟，那两元的惩罚和奖励对我的激励并不大，影响我决策的更多的还是道德方面的因素。

<strong>猜均值的三分之二</strong>
在这个游戏中，若干个参与者被要求每人给出一个0到100之间的数字，所给出的数字最接近平均值2/3的那个人将会是获胜者。参与者之间并不知道其他人的选择。按照理性人的假设，参与者们应该会先排除不可能的数字。例如超过67的数字就不可能，因为当大家都选100时，平均值的三分之二才不过66。这样一来，每个人的选择又变成了在0到66之间选一个数，此时大于44的数字又变得没有意义了，接下来又是一个类似的循环……直到最后，所有理性人的选择应该都为0。
<h2>无偏组合游戏（ICG）</h2>
本节进入正题。

<strong>简单的取拿游戏</strong>
一堆石子（或者其它的什么东西），下面是简单的取拿游戏规则：
两名玩家，称为 I 和 II；
有一堆石子，一共 21 个；
一次移动操作包括取走 1 个，2 个，或者 3 个石子，至少得取走 1 个，至多取走 3 个。
玩家 I 先开始，交替取，不可不取。
取走最后一个石子的获胜。

我们可以反向推导。
如果只有 1 个，2 个或者 3 个石子留下，那么下一个将要移动的玩家获胜。
如果有 4 个留下，当前这个玩家取走后留下的石子数必然是 1 个，2 个或者 3 个，这样另一个玩家必胜，因此 4 对于将要开始移动的玩家而言是必败的局面，而对前一个玩家而言是必胜的局面。
如果有 5，6，7 个留下，玩家必须得给对方留下 4 个才能保证自己获胜。
如果有 8 个留下，那么下一个玩家必须留下 5，6，7 个，这样先前那个玩家获胜。
很容易发现，0，4，8，12，16 是我们希望留下的局面，我们希望状态尽可能向这些局面转化。由于本题起初是 21 个石子，由于 21 不是 4 的倍数，因此第一个玩家必然会赢，它只要留下的石子数是 4 的倍数对方就必然输。

这便是 bash 博弈。

<strong>P 态和 N 态</strong>
在前面的游戏中，0，4，8 等对于先前的玩家（Previous）而言是胜利的局面，称为 P 态。而 1，2，3，5，6，7，9，10，11.。。等对下一个玩家（Next）是胜利的局面，称为 N 态。

在这种无偏组合游戏中，可以从结尾倒推来找出 P 态和 N 态。
（1）、标志结尾局面为 P 态；
（2）、标志能达到 P 态的为 N 态；
（3）、找到那些能达到 N 态的为 P 态；
（4）、如果能找到更多的 P 态，转到（2）；不然转到（3）。

很容易看到向 P 态移动会获胜，从一个 P 态开始，你的对手只能移动到 N 态，然后你再移动到 P 态，最终游戏在 P 态终结。

P 态和 N 态有几个特点：
（1）、所有的终结状态都是 P 态；
（2）、从每个 N 态开始，至少有一步能移到 P 态；
（3）、从每个 P 态开始，每一步的移动都是 N 态。

减法游戏
和上面的取石子游戏类似，假定有一个整数 n，两个玩家轮流从整数中减去一个数 s，其中 s 的取值来自集合 S，对于上面的取石子游戏，S = {1，2，3}。让我们通过类似的倒推找出 P 态。假定 S = {1，3，4}。容易发现 P 态集合是 {0，2，7，9，14，16，。。。}。所有态势集合形成一个循环节，长度为 7。
x 	  0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 ...
position  P N P N N N N P N P N  N  N  N  P  ...
<h2>Wythoff’s Game （威佐夫博弈）</h2>
大致上是这样的：有两堆石子，不妨先认为一堆有 10，另一堆有 15 个，双方轮流取走一些石子，合法的取法有如下两种：
1、在一堆石子中取走任意多颗；
2、在两堆石子中取走相同多的任意颗；
约定取走最后一颗石子的人为赢家，求必胜策略。

两堆石头地位是一样的，我们用余下的石子数（a,b）来表示状态，并画在平面直角坐标系上。和前面类似，（0，0）肯定是 P 态，又叫必败态或者奇异局势。（0,k）,（k,0）,（k,k） 系列的节点肯定不是 P 态，你面对这样的局面一定会胜，只要按照规则取一次就可以了。再看 y = x 上方未被划去的格点，（1，2）是 P 态。k &gt; 2 时，（1，k）不是 P 态，比如你要是面对（1，3）的局面，你是有可能赢的。同理，（k，2），（1 + k，2 + k）也不是 P 态，划去这些点以及它们的对称点，然后再找出 y = x 上方剩余的点，你会发现（3，5）是一个 P 态，如此下去，如果我们只找出 a &lt;= b 的 P 态，则它们是（0，0），（1，2），（3，5），（4，7），（6，10）。。。。。。它们有什么规律吗？
忽略（0，0），很快会发现对于第 i 个 P 态的 a，a = i * (sqrt(5) + 1)/2 然后取整。。。而 b = a + i。居然和黄金分割点扯上了关系。

假设面对的局势是（a,b），若 b = a，则同时从两堆中取走 a 个物体，就变为了奇异局势（0，0）；假定当前奇异局势是（a[k]，b[k]），如果 a = a[k] ，b &gt; b[k]，那么，取走 b - b[k] 个物体，即变为奇异局势；如果 a = a[k] ， b &lt; b[k] ,则同时从两堆中拿走 a[k] - a[b - a[k]] 个物体，变为奇异局势（ a[b - a[k]] , a[b - a[k]] + b - a[k]）；如果a &gt; a[k] ，b= a[k] + k，则从第一堆中拿走多余的数量a - a[k] 即可；如果 a &lt; a[k] ，b= a[k] + k,分两种情况，第一种，a=a[j] （j &lt; k）,从第二堆里面拿走 b - b[j] 即可；第二种，a=b[j] （j &lt; k）,从第二堆里面拿走 b - a[j] 即可。

从如上性质可知，两个人如果都采用正确操作，那么面对非奇异局势，先拿者必胜；反之，则后拿者取胜。

考虑这个问题的一个扩展：
有一堆个数为 n 的石子，游戏双方轮流取石子，满足：
1）先手不能在第一次把所有的石子取完；
2）之后每次可以取的石子数介于 1 到对手刚取的石子数的 2 倍之间（包含 1 和对手刚取的石子数的 2 倍）。

约定取走最后一个石子的人为赢家，求必败态。

这个和之前的 Wythoff’s Game 和取石子游戏有一个很大的不同点，就是游戏规则的动态化。之前的规则中，每次可以取的石子的策略集合是基本固定的，但是这次有规则 2：一方每次可以取的石子数依赖于对手刚才取的石子数。
这个问题居然和斐波那契数列有关，先下手的人获胜当且仅当总数量不是斐波那契数。
有个很有用的定理：任何正整数可以表示为若干个不连续的 Fibonacci 数之和。
比如，我们要分解 83，可以写成 83=55+28，而 28=21+7，7=5+2，故 83=55+21+5+2；
如果 n = 83，我们看看这个分解有什么指导意义：假如先手取 2 颗，那么后手无法取 5 颗或更多，而 5 是一个 Fibonacci 数，先手然后取走这 5 颗石子中的最后一颗，同样的道理，接下去先手取走接下来的后 21 颗中的最后一颗，再取走后 55 颗中的最后一颗，那么先手赢。

反过来如果 n 是 Fibonacci 数，比如 n = 89：如果先手第一次取的石子不小于 34 颗，那么一定后手赢，因为 89 - 34 = 55 = 34 + 21 &lt; 2*34，此时第二个人只要将剩下的全部取光即可。故只需要考虑先手第一次取得石子数 &lt; 34 即可，于是剩下的石子数 x 介于 55 到 89 之间，它一定不是一个 Fibonacci 数，于是我们把 x 分解成 Fibonacci 数：x = 55 + f[i] + … + f[j]，如果 f[j] &lt;= 先手一开始所取石子数 y 的两倍，那么对 B 就是面临 x 局面的先手，所以根据之前的分析，B只要先取 f[j] 个即可，以后再按之前的分析就可保证必胜。
<h2>Nim 博弈</h2>
从取石子游戏（Bash Game）到多堆的尼姆博弈是一个大进步，尼姆博弈的就是把取石子中的 1 堆变成了多堆。游戏者轮流从某一堆棋子中取走一个或者多个（这里暂时不限定每次最多能取几个），最后不能再取的就是输家。当指定相应数量时，一堆这样的棋子称作一个尼姆堆。

这里假定是 3 堆。
其实现在这个问题的一部分解决了——任意多堆的相同个数的 Nim 堆。而且很容易知道，（0,N,N）一定是必败态，如果有仔细尝试的话，可以发现（1,2,3）也是必败态，那到底有什么规律呢？

命题：(a,b,c) 是必败态等价于 p(a, b, c) = a xor b xor c = 0 ( xor 是异或运算)
如果我们面对的是一个非奇异局势 (a，b，c)，要如何变为奇异局势呢？假设 a &lt; b&lt; c,我们只要将 c 变为 a xor b,即可，因为有如下的运算结果: 要将 c 变为 a xor b，只要从 c 中减去 c - (a xor b)即可。

推广到多个堆也是类似的办法。
<h2>游戏图与 SG 函数</h2>
前面几节谈到的游戏可以用图理论来描述，考虑一个图 G = (X, F)；其中 X 是顶点，也是先前游戏中可能的态势。F 是一个函数，对于 X 中的任意一个 x，F(x) 的值都出现在 X 中，对于 X 的一个元素 x，F(x) 的含义是一个玩家从 x 出发可以移动到的局势。
对于一个两人的类似前面的游戏而言，可以在一个如此这样的图上进行博弈，首先指定一个起始点 x0，并使用下面的规则：
（1）玩家 I 从 x0 开始首先移动；
（2）玩家交替移动；
（3）在 x 态势时，玩家要将态势转移到另一个态势 y，其中 y 是 F(x) 中的元素。

为简单起见，假定图中不存在环，元素个数为 n，其中最长的一条路径也不超过 n。那么对于前面我们分析的减法游戏，其中 S = {1, 2, 3}。假定游戏中指定对 n 进行减法操作。X = {0, 1, 2..., n} 是图顶点。F(0) 是空集。F(1) = {0}，F(2) = {0, 1}。 对于 2&lt;= k &lt;= n，F(k) = {k -3, k -2, k -1}。
因此这个游戏的图大致如下。其中 n = 10。

<img title="3-1-300x39" src="http://allenlsy.files.wordpress.com/2010/07/3-1-300x39.jpg" alt="" width="300" height="39" />

边的方向代表了可能的移动。

<strong>SG 函数</strong>
这种图可以通过分析 SG 函数来分析。
所谓图 (X, F) 的 SG 函数 g 是定义在 X 上的一个函数。
g(x) = min{n ≥ 0 : n ≠ g(y) for y ∈ F(x)}。换句话说，g(x) ：是一个非负整数；尽可能的小；不出现在 x 的后缀节点的 g 函数取值中。
这是一个递归定义。但可以通过倒推来取得节点的值。对于终点 x，g(x) = 0，因为 F(x) 是空集。

如果一个态势的 g(x) = 0 那么它就是 P 态，否则就是 N 态。
下面的图描述了 g 函数的求解过程，在开始所有的顶点本是没有数字的。在开始，所有的终点 SG 函数值为 0，一共有 4 个终点，它们位于图的左边和下边。对于点 a，它的后缀 SG 函数为 0，那么它自身的 SG 值就是 1，它是所有没有出现在 a 后缀节点的 SG 值的最小值。那么 b 的 SG 值就是 2，因为它有 2 个后缀，一个是 a，令一个是终点，它们的 SG 值分别是 1 和 0，那么它的 SG 值就是 2。那么 c 的 SG 值就是 0，因为 c 只有一个后缀 a，而 a 的 SG 值为 1，那么没有出现在 c 后缀节点的 SG 值的最小值就是 0。

<img title="3-2-300x242" src="http://allenlsy.files.wordpress.com/2010/07/3-2-300x242.jpg" alt="" width="300" height="242" />

对于 S = {1, 2, 3} 的减法游戏其 SG 函数是多少？
终点 0， SG 值为 0, 1 只能移到 0，而 g(0) = 0，所以 g(1) = 1，同样，2 可以移动到 0 和 1，而 g(0) = 0，g(1) = 1，故 g(2) = 2，3 可以移动到 0，1，2 ，它们各自的 g(0) = 0, g(1) = 1, g(2) = 2，因此 g(3) = 3，但是对于 4 只能移动到 1，2，3，其各自的 SG 值为 1,2,3，故 g(4) = 0。
容易发现 g(x) = x( mod 4)。

考虑一种移石子游戏：每次必须移走至少剩余的一半，我们可以如下计算 SG 函数：
x 	0 1 2 3 4 5 6 7 8 9 10 11 12 . . .
g(x) 	0 1 2 2 3 3 3 3 4 4 4  4  4  . . .

g(x) = min{k: power(2,k) &gt; x}。
<h2>组合游戏之和</h2>
<strong>SG 函数有什么用？</strong>
假定我们有 n 个游戏图，G1 = (X1, F1),G2 = (X2, F2), . . . ,Gn = (Xn, Fn)。可以将它们结合成一个新图，G = (X,F)。X = X1×· · ·×Xn 笛卡尔乘积。X 是个 n 元组 (x1, . . . , xn)，对于 i，xi ∈ Xi。对于 x = (x1, . . . , xn) ∈ X,它的 F(x) 定义为
F(x) = F(x1, . . . , xn) = F1(x1) × {x2}×· · ·×{xn}
∪ {x1} × F2(x2)×· · ·×{xn}
∪ · · ·
∪ {x1} × {x2}×· · ·×Fn(xn).
一个自 x=(x1, . . . , xn) 开始的一次移动在于只移动 xi 到其一个后继（位于 Fi(xi) 中的节点）。
对于组合图 G，其 SG 函数为各子图 SG 函数异或。

<strong>减法游戏之和</strong>
假定 G(m) 代表一堆情况下的减法游戏，其Sm = {1, 2, ..., m}，表示每次可以移走 1 到 m 个石子，其 SG 函数 gm(x) = x (mod (m + 1))。
0 &lt;= gm(x) &lt;= m。考虑 3 个减法游戏之和。在第一个游戏中，第一堆 m = 3，有 9 个石子，第二堆 m = 5，有 10 个石子，在第三堆中 m = 7 有 14 个石子，因此初始状态为（9,10,14）。此时的 SG 函数 g(9, 10, 14) = g3(9) xor g5(10) xor g7(14) = 1 xor 4 xor 6 = 3。此时可以在第三堆中拿走一个石子，此时的 SG 函数 g(9, 10, 13) = 1 xor 4 xor 5 = 0，这样你就给对手留下了一个 P 态。

<strong>要么全部，否则偶数</strong>
考虑一种移石子游戏：你可以移动任意个数的偶数个石子，只要它不是整堆；或者数量为奇数时拿走整堆。这个问题有两种终结状态：0 和 2。
g(2k) = k − 1，g(2k − 1) = k (k ≥ 1)。
如果当前游戏有 3 堆，数量分别是 10,13,20。它们各自的 SG 值分别是 g(10) = 4, g(13) = 7, g(20) = 9，三者异或是 10 不是 0，因此这是 N 态，你可以将 20 对应堆的 SG 值改为 3：从 20 堆中拿走 12 个即可。因为这堆的 g(8) = 3。

<strong>堆的分拆</strong>
现在对 Nim 博弈进行改下，除了像通常的 Nim 堆那样移动，还可以将一堆拆成 2 堆（不用移动）。显然一堆情况下的 SG 函数满足 g(0) = 0，g(1) = 1，对于 2 有几种状态，为 0，为 1 或者分拆成（1,1）。各自的 SG 值是 0,1,1 xor 1 = 0，因此 g(2) = 2。对于 3，后继是 0,1,2 和 (1,2)，其 SG 值分别是 0,1,2 和 1 xor 2 = 3，因此 g(3) = 4。继续下去，可以发现
x 	0 1 2 3 4 5 6 7 8 9 10 11 12 . . .
g(x) 	0 1 2 4 3 5 6 8 7 9 10 12 11 . . .

g(4k + 1) = 4k + 1，g(4k + 2) = 4k + 2，g(4k + 3) = 4k + 4，g(4k + 4) = 4k + 3。

<strong>硬币翻转</strong>
硬币翻转是组合的典型例子。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>124</wp:post_id>
		<wp:post_date>2010-07-10 17:47:10</wp:post_date>
		<wp:post_date_gmt>2010-07-10 09:47:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>zhuan-bo-yi-lun</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mathematics-shu-xue"><![CDATA[Mathematics]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1278755230]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e3%80%90%e8%bd%ac%e3%80%91%e5%8d%9a%e5%bc%88%e8%ae%ba]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1278755230]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e3%80%90%e8%bd%ac%e3%80%91%e5%8d%9a%e5%bc%88%e8%ae%ba]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391476]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1289511596]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>最小费用最大流问题</title>
		<link>http://allenlsy.com/2010/07/zui-xiao-fei-yong-zui-da-liu-wen-ti/</link>
		<pubDate>Sat, 10 Jul 2010 15:17:32 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=152</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>Min Fee Max Flow</h3>
最小费用最大流问题是：

在一个网络流中，有向边上的权值不一样，求整个网络在保证流量最大情况下的最小费用。

实际的例子比如，公路运输中，A到B的这条线路有流量的最大限度，A到B的费用可能高于B返回A的费用高。求一个最小运输费。

最小费用最大流问题的总体思路是：

当还有更省钱的路径，修改各支流的流量。否则得到解。

寻找更省钱的路，实质是用Dijkstra算法。和最短路径的Dijkstra算法不同的是，刷新最短距离的条件。假设f是一个有向流，如果f正向且f流还没满，且到达另一头的费用小于目前记录的最小费用，则刷新。

增大流量很简单，不说了

解释一下这段代码。dis[i]表示当前到i点的最小单价，c[i][j]表示i到j的最大流量（容量），f[i][j]表示流量，cost[i][j]表示i到j的费用，pnt[i]表示在一次Dijkstra中i点的父节点。

 
<pre class="lang:c++ decode:true " >#include &lt;iostream&gt;
#include &lt;queue&gt;
#include &lt;vector&gt;
#define F(i,a,b) for (int i=a;i&lt;=b;i++)
#define maxn 20
using namespace std;

struct Node
{
    int v, p;
    Node() {}
    Node( int a, int b)
    { p = a, v = b; }
    bool operator &gt; (const Node&amp; b ) const
    {
        return (v &gt; b.v) ;
    }
};

priority_queue&lt; Node, vector&lt;Node&gt;, greater&lt;Node&gt; &gt; heap;

bool mk [maxn];
int n,m,c[maxn][maxn], f[maxn][maxn], cost[maxn][maxn];
unsigned int dis[maxn],pnt[maxn];

bool dijkstra(int s, int t)
{
    memset(mk, 0, sizeof(mk) );
    memset(dis, 1, sizeof(dis) );
    heap.push( Node(s, 0) );
    dis[s] = 0;

    while (1)
    {
        if ( heap.empty() )
            return false;

        Node node = heap.top();
        heap.pop();
        int p = node.p;
        while ( mk[p] &amp;&amp; !heap.empty()  )
        {
            node = heap.top();
            heap.pop();
            p = node.p;
        }
        if ( mk[p] &amp;&amp; heap.empty() )
            return false;

        if (p == t)
            return true;

        mk[p] = true;
        F(i,1,n)
        {
            if (mk[i])
                continue;
            if ( c[p][i]&gt;0 &amp;&amp; c[p][i]-f[p][i] &gt;0 &amp;&amp; dis[p] + cost[p][i] &lt; dis[i] )
            {
                dis[i] = dis[p] + cost[p][i];
                pnt[i] = p;
                heap.push( Node( i, dis[i] ) );
            }
            else
            if (c[p][i]&lt;0 &amp;&amp; f[i][p] &gt; 0 &amp;&amp; dis[p] - cost[i][p] &lt; dis[i])
            {
                dis[i] = dis[p] - cost[i][p];
                pnt[i] = p;
                heap.push( Node(i, dis[i] ) );
            }
        }
    }
}

void augment(int s ,int t)
{
    int now = t, _min = 0x7fffffff;
    printf("%d -&gt;", now);
    while (now!=s)
    {
        int temp = pnt[ now ];
        printf("%d -&gt;", temp);
        if ( c[temp][now] &gt;0)
            _min = min(_min, c[temp][ now] - f[temp][now]);
        else
            _min = min( _min, f[ now ][ temp ]);
        now = temp;
    }

    printf("   min:%d \n", _min);
    // augment
    now = t;
    while (now != s)
    {
        int temp = pnt[now];
        if ( c[temp][now] &gt;0)
            f[temp][now] += _min;
        else
            f[now][temp] -= _min;
        now = temp;
    }
}


void mcmf(int s, int t)
{
    while ( dijkstra(s, t) )
        augment(s, t);
}


int main()
{
    int a ,b, d, e;
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);

    // read data
    scanf("%d%d", &amp;n, &amp;m);

    F(i,1,m)
    {
        scanf("%d%d%d%d", &amp;a, &amp;b, &amp;d, &amp;e);
        c[a][b] = d;
        c[b][a] = -d;
        cost[ a][ b] = e;
    }

    mcmf(1, n );

    int sum = 0;
    F(i,1,n)
        F(j,1,n)
            if (f[i][j])
            {
                sum += cost[i][j]*f[i][j];
                printf("%d %d: %d\n", i, j, f[i][j]);
            }

    printf("sum: %d\n", sum);

    return 0;
}

/*input

8 12
1 2 2 6
1 3 4 2
3 2 2 1
1 4 1 1
3 7 3 3
4 7 3 1
4 6 2 2
2 5 5 1
6 5 5 1
5 8 3 2
6 8 2 2
7 8 1 3


output:
8 -&gt;7 -&gt;4 -&gt;1 -&gt;   min:1
8 -&gt;5 -&gt;2 -&gt;3 -&gt;1 -&gt;   min:2
8 -&gt;6 -&gt;4 -&gt;7 -&gt;3 -&gt;1 -&gt;   min:1
8 -&gt;5 -&gt;2 -&gt;1 -&gt;   min:1
1 2: 1
1 3: 3
1 4: 1
2 5: 3
3 2: 2
3 7: 1
4 6: 1
5 8: 3
6 8: 1
7 8: 1
sum: 34
*/</pre> 
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>152</wp:post_id>
		<wp:post_date>2010-07-10 23:17:32</wp:post_date>
		<wp:post_date_gmt>2010-07-10 15:17:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>zui-xiao-fei-yong-zui-da-liu-wen-ti</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="graph-theory-tu-lun"><![CDATA[Graph Theory]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1278775053]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1278775053]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391485]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1333753598]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>一天</title>
		<link>http://allenlsy.com/2010/07/yi-tian/</link>
		<pubDate>Mon, 12 Jul 2010 14:32:25 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=158</guid>
		<description></description>
		<content:encoded><![CDATA[一天能做些什么事情？

一天能够刷一两道难题或者四五道水题
一天能够看一章《组合数学》
一天能够看十集《红楼梦》
一天能够构思一个小软件
一天能够读到一个伟人的传记
一天能够去了解这个月世界上发生了些什么事情

不积跬步,无以至千里;不积小流,无以成江海。
吾当奋起也。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>158</wp:post_id>
		<wp:post_date>2010-07-12 22:32:25</wp:post_date>
		<wp:post_date_gmt>2010-07-12 14:32:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>yi-tian</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="allenlsy-ri-ji-xin-de"><![CDATA[Daily Life]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1278945148]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[01]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1278945148]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[01]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391487]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[Florence]]></wp:comment_author>
			<wp:comment_author_email>teng0066@e.ntu.edu.sg</wp:comment_author_email>
			<wp:comment_author_url>http://tengsike.spaces.live.com</wp:comment_author_url>
			<wp:comment_author_IP>76.173.238.235</wp:comment_author_IP>
			<wp:comment_date>2010-07-14 10:34:46</wp:comment_date>
			<wp:comment_date_gmt>2010-07-14 02:34:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[第]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1279076468]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>POJ 2312</title>
		<link>http://allenlsy.com/2010/07/POJ-2312/</link>
		<pubDate>Mon, 12 Jul 2010 16:19:12 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=160</guid>
		<description></description>
		<content:encoded><![CDATA[题意：Tank游戏中，求从一个点到另一个点需要的最少操作数。打砖块算作一次操作，移动一步算作一次操作。
思路：直接用BFS求最短路径，在转化图时，每个砖块算作长度2，钢砖、河都算作maxn。如果最后求出的最短路径大于了maxn，说明必须通过河或钢砖，则输出-1。其间的每次从当前扩展出的最短距离开始扩展，这一步可以用STL的优先队列来实现。
总结：65ms，2Y，一开始没有判断最短路超过maxn的情况
 
<pre class="lang:c++ decode:true " >#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;queue&gt;
#define F(i,a,b) for (int i=a;i&lt;=b;i++)
using namespace std;

const int maxn = 900001;

struct State
{
    int v, x, y;
    State() {}

    State(int a, int b, int c)
    {
        v = a, x = b, y = c;
    }

    bool operator &gt; (const State&amp; s) const
    {
        return (v &gt; s.v);
    }
};

priority_queue&lt;State, vector&lt;State&gt;, greater&lt;State&gt; &gt; pq;
int h, w, map[301][301], res, startx, starty, endx, endy,
    move[4][2] = { {0, 1}, {0, -1}, {1, 0}, {-1, 0} };
string maps[301];
bool mk[301][301];

void mapTrans()
{
    F(i,0,h-1)
        F(j,0,w-1)
            switch (maps[i][j])
            {
                case 'Y':
                    startx = i, starty = j;
                    break;;
                case 'B':
                    map[i][j] = 2;
                    break;
                case 'E':
                    map[i][j] = 1;
                    break;
                case 'T':
                    endx = i, endy = j;
                    map[i][j] = 1;
                    break;
                default:
                    map[i][j] = maxn;
            }

}

void bfs()
{
    while (!pq.empty() )
        pq.pop();

    res = -1;
    memset(mk, 0, sizeof(mk) );
    pq.push( State(0, startx, starty) );

    while (1)
    {
        State now = pq.top();
        pq.pop();

        if (now.v &gt;900000)
        {
            res = -1;
            return;
        }
        if (now.x == endx &amp;&amp; now.y == endy)
        {
            res = now.v;
            return;
        }

        if (!mk[now.x][now.y])
            mk[now.x][now.y] = true;
        else
            continue;
        F(i,0,3)
        {
            int newx = now.x + move[i][0], newy = now.y + move[i][1];
            if (newx &gt;=0 &amp;&amp; newx &lt; h &amp;&amp; newy &gt;= 0 &amp;&amp; newy &lt; w)
            {
                int v = now.v + map[newx][newy];
                pq.push( State(v, newx, newy) );

            }
        }
        if (pq.empty())
            return;
    }
}

int main()
{

    while (cin &gt;&gt; h &gt;&gt; w &amp;&amp; !(h==0 &amp;&amp; w == 0) )
    {

        F(i,0,h-1)
            cin &gt;&gt; maps[ i ];

        mapTrans();

        bfs();

        cout &lt;&lt; res &lt;&lt; endl;
    }

    return 0;
}</pre> 
]]></content:encoded>
		<excerpt:encoded><![CDATA[POJ 2312]]></excerpt:encoded>
		<wp:post_id>160</wp:post_id>
		<wp:post_date>2010-07-13 00:19:12</wp:post_date>
		<wp:post_date_gmt>2010-07-12 16:19:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>POJ-2312</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="poj-bei-da-ti-ku"><![CDATA[POJ 北大题库]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1278951552]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1278951552]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391488]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>POJ 1042 Gone Fishing</title>
		<link>http://allenlsy.com/2010/07/POJ-1042-Gone-Fishing/</link>
		<pubDate>Wed, 14 Jul 2010 03:49:18 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=169</guid>
		<description></description>
		<content:encoded><![CDATA[这个题目在《算法艺术与信息学竞赛》的第13页。刘汝佳的书上有比较详细的分析。

156k, 141ms
需要注意的是，当一个湖的鱼数为负数时，应该向堆中添加0元素，而不是什么都不添加，那样很容易错的。我就错了好多次。
人笨了，还是不行。

 
<pre class="lang:c++ decode:true " >#include &lt;iostream&gt;
#include &lt;queue&gt;
#include &lt;vector&gt;
#define F(i,a,b) for (int i=a;i&lt;=b;i++)
using namespace std;


struct State
{
    int lake, v;
    State(int _v, int _lake)
    { v = _v, lake = _lake; }
    bool operator &lt; (const State&amp; b) const
    {
        if (v == b.v)
            return (lake &gt; b.lake);
        return v &lt; b.v;
    }
};

priority_queue&lt; State &gt; pq;

int f[26], t[26], d[26], spent[26], resSpent[26], fish, res, n, h;

int sigma(int *ary, int s, int t)
{
    int ret = 0;
    F(i,s, t)
        ret+=ary[i];
    return ret;
}

int main()
{
    while (scanf("%d", &amp;n) &amp;&amp; n != 0)
    {
        // readdata
        scanf("%d", &amp;h);
        F(i,1,n)
            scanf("%d", &amp;f[i]);
        F(i,1,n)
            scanf("%d", &amp;d[i]);

        F(i,1,n-1)
            scanf("%d", &amp;t[i]);
        fish = -1;

        // solve
        F(end, 1, n)
        {
            // init
            while (!pq.empty() )
                pq.pop();
            res = 0;
            int time = h*12 - sigma(t, 1, end-1);
            memset(spent, 0, sizeof(spent) );

            // build heap
            F(i,1,end)
                pq.push( State( f[i], i) );


            // greedy
            int i;
            for (i = 1; i&lt;=time; i++)
            {
                State now = pq.top();
                res += now.v;
                spent[ now.lake ] ++;
                pq.pop();
                int v = now.v - d[ now.lake ];
                if ( v&gt;0 )
                    pq.push( State( v, now.lake ) );
                else
                    pq.push( State(0, now.lake) );
            }

            if (i&lt;time)
                spent[1] += time-i;

            if (res &gt; fish)
            {
                fish = res;
                F(i, 1, n)
                    resSpent[i] = spent[i];
            }
        }

        // output
        F(i,1,n-1)
            printf("%d, ", resSpent[i]*5);
        printf("%d\n", resSpent[n]*5 );
        printf("Number of fish expected: %d\n\n", fish);
    }

    return 0;
}</pre> 
]]></content:encoded>
		<excerpt:encoded><![CDATA[Gone Fishing]]></excerpt:encoded>
		<wp:post_id>169</wp:post_id>
		<wp:post_date>2010-07-14 11:49:18</wp:post_date>
		<wp:post_date_gmt>2010-07-14 03:49:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>POJ-1042-Gone-Fishing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="poj-bei-da-ti-ku"><![CDATA[POJ 北大题库]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1279079361]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1279079361]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391489]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1298088100]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>二项</title>
		<link>http://allenlsy.com/2010/03/er-xiang/</link>
		<pubDate>Sat, 27 Mar 2010 11:05:02 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.wordpress.com/?p=56</guid>
		<description></description>
		<content:encoded><![CDATA[<h2><strong>二项式系数</strong></h2>
1.        Pascal公式：C( n, k ) = C( n-1, k ) + C( n-1, k-1)

2.        一些恒等式
<p style="padding-left:30px;">a.        k*C( n, k ) = n*C(n-1. k-1 )</p>
<p style="padding-left:30px;">b.       C(n, 0) – C(n, 1) + C(n, 2) - … + (-1)<sup>n</sup>C(n, n) = 0  (n&gt;=1)</p>
<p style="padding-left:30px;">c.        1*C(n, 1) + 2*C(n, 2) + 3*C(n, 3) + … + n*C(n, n) = n*2<sup>n-1</sup></p>
<p style="padding-left:30px;">d.       Vandermonde卷积：</p>
<p style="padding-left:30px;">C(2n, n) =  C(n, 0)<sup>2</sup>+ C(n, 1)<sup>2</sup>+ C(n, 2)<sup>2</sup>+ … + C(n,  n)<sup>2</sup></p>
3.        多项式定理
<p style="padding-left:30px;">a.        (x<sub>1</sub>+ x<sub>2</sub>+…+ x<sub>t</sub>)<sup>n</sup>中，项x<sub>1</sub><sup>n1</sup>x<sub>2</sub><sup> n2</sup>…x<sub>t</sub><sup> nt</sup>的系数是n! /  (n<sub>1</sub>!* n<sub>2</sub>!*… *n<sub>t</sub>!)</p>
<p style="padding-left:30px;">b.       运用Pascal定理描述，</p>
<p style="padding-left:30px;">c.         n! / (n<sub>1</sub>!* n<sub>2</sub>!*… *n<sub>t</sub>!) = n!/[ (  (n<sub>1</sub>-1)!* n<sub>2</sub>!*… *n<sub>t</sub>!) ( n<sub>1</sub>!*(  n<sub>2</sub>-1)!*… *n<sub>t</sub>!)… ( n<sub>1</sub>!*( n<sub>2</sub>-1)!*…  *(n<sub>t</sub>-1)! ) ]</p>
4.        牛顿二项式定理：(x+y)<sup>n</sup> = ∑C(n,  k)x<sup>k</sup>y<sup>n-k</sup>
<p style="padding-left:30px;">a.        (x+y)<sup>n</sup> = y<sup>a</sup>(z+1)<sup>a</sup> = y<sup>a</sup>*∑C(a,  k)z<sup>k</sup>。其中z = x/y</p>
<p style="padding-left:30px;">b.       例如 计算sqrt(20)的展开式</p>

<h2><strong>递推关系初步</strong></h2>
1.        斐波那契数列部分和S<sub>n</sub> =  f<sub>0</sub>+f<sub>1</sub>+…+f<sub>n</sub> = f<sub>n+2</sub> – 1

2.        线性递推关系：h<sub>n</sub> = a<sub>1</sub>h<sub>n-1</sub> +  a<sub>2</sub>h<sub>n-2</sub> +…+ a<sub>k</sub>h<sub>n-k </sub>+  b<sub>n</sub>
<p style="padding-left:30px;">a.        齐次: b<sub>n</sub> = 0</p>
<p style="padding-left:30px;">如果q是方程</p>
<p style="padding-left:30px;">x<sup>k</sup> – a<sub>1</sub>x<sup>k-1</sup> – a<sub>2</sub>x<sup>k-2</sup> -…-  a<sub>k</sub> =0</p>
<p style="padding-left:30px;">的一个根，则h<sub>n</sub> = q<sup>n</sup>是递推关系的一个解</p>
<p style="padding-left:30px;">如果方程有k个非零根且互异，则</p>
<p style="padding-left:30px;">h<sub>n</sub> =  c<sub>1</sub>q<sub>1</sub><sup>n</sup> + c<sub>2</sub>q<sub>2</sub><sup>n</sup> + … +c<sub>k</sub>q<sub>k</sub><sup>n</sup> 是一般解</p>
<p style="padding-left:30px;">该方程称为 特征方程</p>
<p style="padding-left:30px;">如果q<sub>i</sub>是s<sub>i</sub>的重根，则一般解围</p>
<p style="padding-left:30px;">h<sub>n</sub> = H<sub>n</sub><sup>(1)</sup> + H<sub>n</sub><sup>(2)</sup> +…+  H<sub>n</sub><sup>(t)</sup></p>
<p style="padding-left:30px;">H<sub>n</sub><sup>(t) </sup>= (c<sub>1</sub> + c<sub>2</sub>n + …  +c<sub>s</sub>n<sup>st-1</sup>)q<sub>t</sub><sup>n</sup></p>
<p style="padding-left:30px;">例如h<sub>n</sub> = -h<sub>n-1</sub> + 3h<sub>n-2</sub> +  5h<sub>n-3</sub> + 2h<sub>n-4</sub> 满足h<sub>0</sub> =1,  h<sub>1</sub> =0, h<sub>2</sub> =1, h<sub>3</sub> =2的解</p>
<p style="padding-left:30px;">做x<sup>4</sup> + x<sup>3</sup> – 3x<sup>2</sup> -5x-2  =0</p>
<p style="padding-left:30px;">方程的根是-1， -1， -1， 2。</p>
<p style="padding-left:30px;">对于-1的部分解是</p>
<p style="padding-left:30px;">H<sub>n</sub><sup>(1)</sup> = c<sub>1</sub>(-1)<sup>n</sup> +  c<sub>2</sub>n(-1)<sup>n</sup> + c<sub>3</sub>n<sup>2</sup>(-1)<sup>n</sup></p>
<p style="padding-left:30px;">最终的一般解为</p>
<p style="padding-left:30px;">H<sub>n</sub> =  c<sub>1</sub>(-1)<sup>n</sup> + c<sub>2</sub>n(-1)<sup>n</sup> +  c<sub>3</sub>n<sup>2</sup>(-1)<sup>n</sup> + c<sub>4</sub>2<sup>n</sup></p>
<p style="padding-left:30px;">b.       非齐次</p>
<p style="padding-left:30px;">i.      求出齐次关系的一般解</p>
<p style="padding-left:30px;">ii.      求出非齐次关系的一个特解</p>
<p style="padding-left:30px;">iii.      合并，求出常数项</p>
<p style="padding-left:30px;">难点在于找出特解</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>630</wp:post_id>
		<wp:post_date>2010-03-27 19:05:02</wp:post_date>
		<wp:post_date_gmt>2010-03-27 11:05:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>er-xiang</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mathematics-shu-xue"><![CDATA[Mathematics]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1277895904]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391672]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>计算机技术知识，看看你知道多少</title>
		<link>http://allenlsy.com/2010/07/ji-suan-ji-ji-shu-zhi-shi-kan-kan-ni-zhi-dao-duo-shao/</link>
		<pubDate>Wed, 14 Jul 2010 13:17:15 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=175</guid>
		<description></description>
		<content:encoded><![CDATA[如果你觉得自己的计算机专业知识学得有些不错了，也许已经对Java、C++、各种基本算法、SQL Server、Tomcat、Rational这些东西有一定了解，不妨看看下面的词汇，想想自己的脑子里面对他们有多少概念

<a href="http://baike.baidu.com/view/2616.htm?fr=ala0_1">ASP</a>, <a href="http://baike.baidu.com/view/3387.htm">JSP</a>, <a href="http://baike.baidu.com/view/99.htm">php</a>,<a href="http://baike.baidu.com/view/1507.htm"> j2ee</a>, <a href="http://baike.baidu.com/view/3542.htm">ejb</a>, <a href="http://baike.baidu.com/view/725111.htm">java bean</a>, <a href="http://baike.baidu.com/view/1020297.htm">JQuery</a>, <a href="http://baike.baidu.com/view/628102.htm">IBATIS</a>, <a href="http://cayenne.apache.org/">Cayenne</a>, <a href="http://en.wikipedia.org/wiki/Apache_Wicket">Wicket</a>, <a href="http://baike.baidu.com/view/66879.html">Tapestry</a>,<a href="http://en.wikipedia.org/wiki/JavaServer_Faces"> JSF</a>, <a href="http://baike.baidu.com/view/73546.htm">JDO</a>, <a href="http://baike.baidu.com/view/209575.htm">JNDI</a>, <a href="http://baike.baidu.com/view/99017.htm">RMI</a>, <a href="http://baike.baidu.com/view/153815.htm">CORBA</a>,<a href="http://baike.baidu.com/view/512788.htm"> JTA</a>, <a href="http://baike.baidu.com/view/8110.htm#3">CMM</a>, <a href="http://baike.baidu.com/view/2530782.html">VisualSourceSafe</a>, <a href="http://baike.baidu.com/view/17288.htm">VxWorks</a>, <a href="http://baike.baidu.com/view/292311.htm">WPF</a>, <a href="http://baike.baidu.com/view/1140438.htm">WCF</a>, <a href="http://baike.baidu.com/view/605055.htm">CLR</a>, <a href="http://baike.baidu.com/view/1865203.html">Reflection</a>, <a href="http://en.wikipedia.org/wiki/Pinvoke">Pinvoke</a>, <a href="http://baike.baidu.com/view/260261.htm">SharePoint</a>, <a href="http://baike.baidu.com/view/1155689.html">MapPoint</a>, <a href="http://baike.baidu.com/view/2561.htm">CCNA</a>, <a href="http://baike.baidu.com/view/6537.htm">CCNP</a>, <a href="http://baike.baidu.com/view/1343775.htm">OpenCV</a>, <a href="http://baike.baidu.com/view/21087.htm">python</a>, <a href="http://baike.baidu.com/view/45135.htm">Ruby</a>, <a href="http://en.wikipedia.org/wiki/Google_API">Google API</a>,<a href="http://baike.baidu.com/view/1641.htm"> ajax</a>, <a href="http://baike.baidu.com/view/623340.htm">flex</a>, <a href="http://baike.baidu.com/view/23681.htm">Qt</a>, <a href="http://baike.baidu.com/view/387066.htm">DB2</a>, <a href="http://baike.baidu.com/view/329359.htm">Solaris</a>, <a href="http://baike.baidu.com/view/965131.htm">LINQ</a>,<a href="http://baike.baidu.com/view/942429.htm"> Silverlight</a>, <a href="http://baike.baidu.com/view/23023.htm">Spring</a>, <a href="http://baike.baidu.com/view/7291.htm">Hibernate</a>, <a href="http://baike.baidu.com/view/25603.htm">Struts</a>, <a href="http://baike.baidu.com/view/25941.htm#8">COM</a>, <a href="http://baike.baidu.com/view/20982.htm">CVS</a>, <a href="http://baike.baidu.com/view/66926.htm">JUnit</a>,<a href="http://en.wikipedia.org/wiki/XUnit"> XUnit</a>, <a href="http://baike.baidu.com/view/812367.htm">LoadRunner</a>, <a href="http://baike.baidu.com/view/171821.htm">JMeter</a>, <a href="http://en.wikipedia.org/wiki/Selenium_(software)">Selenium</a>, <a href="http://baike.baidu.com/view/852081.htm">QTP</a>, <a href="http://baike.baidu.com/view/309926.htm">Agile Development</a>, <a href="http://baike.baidu.com/view/1040834.htm">Cognos</a>, <a href="http://baike.baidu.com/view/8784.htm">SAP</a>, <a href="http://baike.baidu.com/view/414917.htm">SOP</a>, <a href="http://baike.baidu.com/view/60663.htm">SOAP</a>,<a href="http://baike.baidu.com/view/369107.htm"> SAAS</a>, <a href="http://baike.baidu.com/view/17863.htm">CIO</a>, <a href="http://baike.baidu.com/view/19556.htm#4">BI</a>, <a href="http://baike.baidu.com/view/112992.htm">SCM</a>, <a href="http://baike.baidu.com/view/3609.htm">ERP</a>, <a href="http://baike.baidu.com/view/1488597.htm">Cuda</a>, <a href="http://baike.baidu.com/view/15038.htm">WebSphere</a>, <a href="http://baike.baidu.com/view/21305.htm">SOA</a>, <a href="http://baike.baidu.com/view/309533.htm">jBoss</a>, <a href="http://baike.baidu.com/view/758527.htm">SAML</a>, <a href="http://baike.baidu.com/view/2937408.htm">Fermi</a>, <a href="http://baike.baidu.com/view/9222.htm">OpenGL</a>, <a href="http://baike.baidu.com/view/2056591.htm">OpenCL</a>, <a href="http://baike.baidu.com/view/15762.htm">DirectX</a>, <a href="http://baike.baidu.com/view/840006.htm#5">Nexus</a>, <a href="http://baike.baidu.com/view/491030.htm">RUP</a>, <a href="http://baike.baidu.com/view/31448.htm">PMP</a>, <a href="http://baike.baidu.com/view/277075.htm">OLTP</a>, <a href="http://baike.baidu.com/view/57810.htm">OLAP</a>, <a href="http://baike.baidu.com/view/325942.htm">SAS</a>, <a href="http://baike.baidu.com/view/130328.htm">SPSS</a>（不是数理学院）

这上面列的东西，都还只是沧海一粟，可能全部列出，而且还没有包括计算机理论科学方面的知识点。

并不是说，即使作为一个技术人员，都必须了解这些。只是觉得有时候，去图书馆一看，也发现自己满是不懂的东西，可放假在家，不应该任光阴如此虚度过去。南大学生常常以工程师中的领袖自居，就应该拿出些领袖的素质和气质。南大的学习版ftp上也有不少好书，都是值得去浏览一下的。
必要时，这张单子可以打印出来，钉在书桌前，提醒自己可以做些什么。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>175</wp:post_id>
		<wp:post_date>2010-07-14 21:17:15</wp:post_date>
		<wp:post_date_gmt>2010-07-14 13:17:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ji-suan-ji-ji-shu-zhi-shi-kan-kan-ni-zhi-dao-duo-shao</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="allenlsy-ri-ji-xin-de"><![CDATA[Daily Life]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1279113436]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1279113436]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391490]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1281825414]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[Mark Fu]]></wp:comment_author>
			<wp:comment_author_email>fsw90628@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://markabstract.fuhuier.com/</wp:comment_author_url>
			<wp:comment_author_IP>155.69.188.214</wp:comment_author_IP>
			<wp:comment_date>2010-07-14 21:54:42</wp:comment_date>
			<wp:comment_date_gmt>2010-07-14 13:54:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不错，只是Wordpress插件可以少装一点。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1279252968]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[893652277]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[allenlsy]]></wp:comment_author>
			<wp:comment_author_email>allenlsy@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://allenlsy.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>118.117.8.184</wp:comment_author_IP>
			<wp:comment_date>2010-07-16 12:02:58</wp:comment_date>
			<wp:comment_date_gmt>2010-07-16 04:02:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[简单就是艺术]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>3</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1279252979]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[893652277]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[893727871]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>代码大全 (1) - 创建高质量的代码</title>
		<link>http://allenlsy.com/2010/07/dai-ma-da-quan-1-chuang-jian-gao-zhi-liang-de-dai-ma/</link>
		<pubDate>Fri, 16 Jul 2010 15:14:22 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=183</guid>
		<description></description>
		<content:encoded><![CDATA[---------------------------------------------------------
<h1><strong>软件构建中的设计 Design in Construction</strong></h1>
<strong>--------------------------------------------------------- </strong>
<h3><strong>关键的设计概念 Key Design Concepts</strong></h3>
<p style="padding-left:30px;"><strong>管理复杂度 Managing Complexity</strong></p>
<p style="padding-left:60px;">两类问题导致软件开发变得困难：本质的(essential)属性和偶然的(accidental)属性</p>
<p style="padding-left:60px;">软件开发的本质就是不断的去发觉错综复杂的整套概念的所有细节</p>
<p style="padding-left:30px;"><strong>管理复杂度的重要性</strong></p>
<p style="padding-left:60px;">项目的失败大多数是由于不尽如人意的需求、规划和管理所导致的。</p>
<p style="padding-left:60px;">由技术原因导致失败时，通常就是由于失控的复杂度。</p>
<p style="padding-left:60px;">可以通过分解为子系统来降低问题的复杂度。</p>
<p style="padding-left:60px;"><strong>如何应对复杂度 How to Attack Complexity</strong></p>
<p style="padding-left:60px;">Dijkstra提出</p>
<p style="padding-left:60px;">把任何人都在同一时间需要处理的本质复杂度得量减少到最低</p>
<p style="padding-left:60px;">不要让偶然性的复杂度快速增长</p>
<p style="padding-left:60px;"><a href="http://allenlsy.com/wp-content/uploads/2010/07/1.jpg"><img class="alignnone size-full wp-image-189" title="1" src="http://allenlsy.com/wp-content/uploads/2010/07/1.jpg" alt="" width="640" height="400" /></a></p>
<p style="padding-left:60px;"><a href="http://allenlsy.com/wp-content/uploads/2010/07/2.jpg"><img class="alignnone size-full wp-image-190" title="2" src="http://allenlsy.com/wp-content/uploads/2010/07/2.jpg" !lt="" width="640" height="329" /></a></p>
<p style="padding-left:30px;"><strong>理想的设计特征 Desirable Characteristics of a Design</strong></p>
<p style="padding-left:60px;">最小的复杂度，易于维护，松耦合，可扩展性，可重用性，高扇入，低扇出，可移植性，精简性，层次性</p>
<p style="padding-left:30px;"><strong>设计的层次 Levels of Design</strong></p>
<p style="padding-left:30px;"><strong><a href="http://allenlsy.com/wp-content/uploads/2010/07/3.jpg"><img class="size-full wp-image-188 alignnone" title="3" src="http://allenlsy.com/wp-content/uploads/2010/07/3.jpg" alt="" width="441" height="529" /></a> </strong></p>
<p style="padding-left:60px;">软件系统 -&gt; 分解为子系统和包 -&gt; 分解为包中的类 -&gt; 分解为类]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>183</wp:post_id>
		<wp:post_date>2010-07-16 23:14:22</wp:post_date>
		<wp:post_date_gmt>2010-07-16 15:14:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dai-ma-da-quan-1-chuang-jian-gao-zhi-liang-de-dai-ma</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="software-design"><![CDATA[Design]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1279293264]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1279293264]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391491]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>wpsd_autopost</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>代码大全 (2) - 创建高质量的代码</title>
		<link>http://allenlsy.com/2010/07/dai-ma-da-quan-2-chuang-jian-gao-zhi-liang-de-dai-ma/</link>
		<pubDate>Sat, 17 Jul 2010 02:38:32 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=193</guid>
		<description></description>
		<content:encoded><![CDATA[----------------------------------------------------------
<h1>高质量的子程序 High-Quality Routines</h1>
----------------------------------------------------------
<h3>创建子程序的理由</h3>
<p style="padding-left:30px;">降低复杂度，避免代码重复，隐藏顺序…</p>

<h3>在子程序层上设计：内聚性</h3>
<p style="padding-left:30px;"><strong>子程序的长度</strong>：一般认为是50-150行一个子程序</p>
<p style="padding-left:30px;"><strong>参数</strong></p>
<p style="padding-left:60px;">按照输入-修改-输出来安排参数顺序</p>
<p style="padding-left:60px;">把出错状态变量放在最后</p>
----------------------------------------------------------
<h1>防御式编程 Defensive Programming</h1>
----------------------------------------------------------
<p style="padding-left:30px;"><strong>主要思想</strong>：子程序不应因为传入数据错误而被破坏</p>
<p style="padding-left:30px;"><strong>保护程序免受非法数据的破坏 Protecting Your Program from Invalid Inputs</strong></p>
<p style="padding-left:60px;">检查所有外部数据</p>
<p style="padding-left:60px;">如何处理错误输入数据</p>
<p style="padding-left:60px;">对于高健壮性的代码，应该先assertion再处理错误</p>
<p style="padding-left:30px;"><strong>错误处理技术Error-Handling Techniques</strong></p>
<p style="padding-left:60px;">返回中立值，返回与前一次相同的数据，返回最接近的合法值</p>
<p style="padding-left:60px;">处理错误的最恰当方式，是根据软件类别而定，更强调正确性还是健壮性</p>
<p style="padding-left:60px;">在正确的抽象层抛出异常</p>
----------------------------------------------------------
<h1>伪代码编程过程 The Pseudocode Programming Process</h1>
----------------------------------------------------------

<a href="http://allenlsy.com/wp-content/uploads/2010/07/11.jpg"><img class="alignnone size-full wp-image-194" title="1" src="http://allenlsy.com/wp-content/uploads/2010/07/11.jpg" alt="" width="432" height="414" /></a>
<p style="padding-left:30px;"><strong>一个类的创建步骤</strong></p>
<p style="padding-left:60px;">类的总体设计</p>
<p style="padding-left:60px;">创建类中的子程序</p>
<p style="padding-left:60px;">复审并测试整个类</p>
<p style="padding-left:30px;"><strong>通过伪代码创建子程序 Constructing Routines by Using  the PPP</strong></p>
<p style="padding-left:30px;"><strong><a href="http://allenlsy.com/wp-content/uploads/2010/07/21.jpg"><img class="alignnone size-full wp-image-195" title="2" src="http://allenlsy.com/wp-content/uploads/2010/07/21.jpg" alt="" width="389" height="397" /></a> </strong></p>
<p style="padding-left:60px;">检查先决条件-&gt;定义要解决的问题-&gt;命名-&gt;决定如何测试子程序-&gt;在标准库搜寻可用的功能-&gt;考虑错误处理-&gt;考虑效率-&gt;研究算法和数据类型-&gt;编写伪代码</p>
<p style="padding-left:60px;">注意接口说明性注释</p>
<p style="padding-left:30px;"><strong>伪代码编程过程的替代方案 Alternatives to the PPP</strong></p>
<p style="padding-left:60px;">测试先行开发 Test-first Development</p>
<p style="padding-left:60px;">重构 Refactoring：程序员要用不良代码（“臭味”）识别出需要改进的代码</p>
<p style="padding-left:60px;">契约式设计 Design by contract：认为每一个程序都有先决条件（precondition）和后条件</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>193</wp:post_id>
		<wp:post_date>2010-07-17 10:38:32</wp:post_date>
		<wp:post_date_gmt>2010-07-17 02:38:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dai-ma-da-quan-2-chuang-jian-gao-zhi-liang-de-dai-ma</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="software-design"><![CDATA[Design]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1279334313]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1279334313]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391497]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>wpsd_autopost</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1281825416]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[Long]]></wp:comment_author>
			<wp:comment_author_email>herecheng@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>155.69.161.193</wp:comment_author_IP>
			<wp:comment_date>2010-07-18 11:55:13</wp:comment_date>
			<wp:comment_date_gmt>2010-07-18 03:55:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[代码大全是 Code Complete?
我也在看]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1279425314]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[893652278]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>CG1-Polygon Triangulation  多边形分割</title>
		<link>http://allenlsy.com/2010/07/CG1-Polygon-Triangulation-duo-bian-xing-fen-ge/</link>
		<pubDate>Sat, 24 Jul 2010 02:41:17 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=199</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>Polygon</h2>
<strong>Jordan Curve Theorem:</strong> every simple closed plane curve divides the plane into two components

<strong>Klee’s problem</strong>: How many stationary guards are needed to guard the room?

The problem is to find the maximum over all polygons of n vertices, of the minimum number of guards needed to cover the polygon.

A vertex is called <strong>reflex</strong> if its internal angle is greater than π, otherwise is called <strong>convex.</strong>

Answer to Klee’s problem: floor( n/3 )

<a href="http://allenlsy.com/wp-content/uploads/2010/07/12.jpg"><img class="alignnone size-full wp-image-200" title="1" src="http://allenlsy.com/wp-content/uploads/2010/07/12.jpg" alt="" width="476" height="256" /></a>
<h2>Triangulation</h2>
Every polygon must have at least one strictly convex vertex.

<strong>Meisters’ Lemma</strong>: Every polygon of n&gt;=4 vertices has a diagonal.

<strong>Number of Diagonals</strong>: every triangulation of a polygon P of n vertices uses n-3 diagonals and consists of n-2 triangles

Three consecutive vertices of a polygon a, b, c form and <strong>EAR</strong> of the polygon if ac is a diagonal: b is the ear tip. Two ears are nonoverlapping if their triangle interiors are disjoint.

<strong>3-coloring</strong>: The triangulation graph of a polygon P may be 3-colored.
<h2>Segment Intersection</h2>
The segment s = v<sub>i</sub>v<sub>j</sub> is a<strong> diagonal </strong>of P iff
<ol>
	<li>For all edges e of P that are not incident to either v<sub>i</sub> or v<sub>j</sub>, s and e do not intersect: s ∩ e ≠ ∅</li>
	<li>s is internal to P in a  neighborhood of v<sub>i</sub> and v<sub>j</sub>.</li>
</ol>
<strong>Proper Intersect</strong>: two segments intersect at a point interior to both, no three of the four endpoints are collinear.

<a href="http://allenlsy.com/wp-content/uploads/2010/07/22.jpg"><img class="alignnone size-full wp-image-201" title="2" src="http://allenlsy.com/wp-content/uploads/2010/07/22.jpg" alt="" width="640" height="319" /></a>

<strong>Improper Intersection</strong>

<a href="http://allenlsy.com/wp-content/uploads/2010/07/31.jpg"><img class="alignnone size-full wp-image-202" title="3" src="http://allenlsy.com/wp-content/uploads/2010/07/31.jpg" alt="" width="640" height="267" /></a>
<h2>Triangulation Implementation</h2>
<strong>InCone</strong>

<strong><a href="http://allenlsy.com/wp-content/uploads/2010/07/41.jpg"><img class="alignnone size-full wp-image-203" title="4" src="http://allenlsy.com/wp-content/uploads/2010/07/41.jpg" alt="" width="640" height="387" /></a> </strong>

<strong><a href="http://allenlsy.com/wp-content/uploads/2010/07/5.jpg"><img class="alignnone size-full wp-image-204" title="5" src="http://allenlsy.com/wp-content/uploads/2010/07/5.jpg" alt="" width="640" height="387" /></a> </strong>

Diagonal-based Algorithm:

<a href="http://allenlsy.com/wp-content/uploads/2010/07/6.jpg"><img class="alignnone size-full wp-image-205" title="6" src="http://allenlsy.com/wp-content/uploads/2010/07/6.jpg" alt="" width="383" height="239" /></a>
<p style="padding-left:30px;">v<sub>2</sub> is the head of the vertex list.</p>
<p style="padding-left:30px;">O(n^2)</p>
<p style="padding-left:30px;"><a href="http://allenlsy.com/wp-content/uploads/2010/07/7.jpg"><img class="alignnone size-full wp-image-206" title="7" src="http://allenlsy.com/wp-content/uploads/2010/07/7.jpg" alt="" width="640" height="518" /></a></p>
<p style="padding-left:30px;"><a href="http://allenlsy.com/wp-content/uploads/2010/07/8.jpg"><img class="alignnone size-full wp-image-207" title="8" src="http://allenlsy.com/wp-content/uploads/2010/07/8.jpg" alt="" width="640" height="275" /></a></p>
<p style="padding-left:30px;"></p>
<p style="padding-left:30px;"></p>

 
<pre class="lang:c++ decode:true " >#define X 0
#define Y 1
typedef int tPointi[2];
typedef tsVertex* tVertex;

struct tsVertex
{
    int vnum;
    tPointi v;
    bool ear;
    tVertex next, prev;
};
tVertex vertices = NULL // Head of circular list

// Area of a triangle
int Area2(tPointi a, tPointi b, tPointi c)
{
    return
        (b[X] - a[X]) * (c[Y] - a[Y]) -
        (c[X] - a[X]) * (b[Y] - a[Y]);
}

// Area of a polygon
int AreaPoly2
{
    int sum = 0;
    tVertex p, a;
    p = vertices;
    a = p-&gt;next;
    do
    {
        sum += Area2(p-&gt;v, a-&gt;v, a-&gt;next-&gt;v);
        a = a-&gt;next;
    }
    while (a-&gt;next != vertices);
}

// c on the left side of ab
bool Left( tPointi a, tPointi b, tPointi c)
{
    return Area2(a, b, c) &gt; 0;
}
bool LeftOn( tPointi a, tPointi b, tPointi c)
{
    return Area2(a, b, c) &gt;= 0;
}
bool Collinear( tPointi a, tPointi b, tPointi c)
{
    return Area2(a, b, c) == 0;
}

bool Xor(bool x, bool y)
{
    return !x ^ !y;
}

bool IntersectProp(tPointi a, tPointi b, tPointi c, tPointi d)
{
    // Eliminate improper cases
    if (
        Collinear(a, b, c) ||
        Collinear(a, b, c) ||
        Collinear(c, d, a) ||
        Collinear(c, d, b) )
        return false;
    return
        Xor( Left(a, b, c), Left(a, b, d) ) &amp;&amp;
        Xor( Left(c, d, a), Left(c, d, b) );
}

// c is interior to ab
bool Between(tPointi a, tPointi b, tPointi c)
{
    tPointi ba, ca;
    if (!Collinear ( a, b, c) )
        return false;

    // if ab not vertical, check betweenness on x; else on y
    if (a[X] != b[X] )
        return
            ((a[X] &lt;= c[X]) &amp;&amp; (c[X] &lt;= b[X]) ) ||
            ((a[X] &gt;= c[X]) &amp;&amp; (c[X] &gt;= b[X]) );
    else
        return
            ((a[Y] &lt;= c[Y]) &amp;&amp; (c[Y] &lt;= b[Y]) ) ||
            ((a[Y] &gt;= c[Y]) &amp;&amp; (c[Y] &gt;= b[Y]) );
}

// improper and proper intersect
bool Intersect( tPoint a, tPointi b, tPointi c, tPointi d)
{
    if (IntersectProp(a, b, c, d) )
        return true;
    else
    if (Between( a, b, c) ||
        Between( a, b, d) ||
        Between( c, d, a) ||
        Between( c, d, b) )
        return true;
    return false;
}

// ab is a diagonal not cross any edge
bool Diagonalie( tVertex a, tVertex b)
{
    tVertex c, c1;
    // for each edge(c, c1) of P
    c = vertices;
    do
    {
         c1 = c -&gt; next;
         if (
            (c != a) &amp;&amp; (c1 != a) &amp;&amp;
            (c != b) &amp;&amp; (c1 != b) &amp;&amp;
            Intersect( a-&gt;v, b-&gt;v, c-&gt;v, c1-&gt;v) )
            return false;
        c = c-&gt;next;

    }
    while ( c != vertices);
    return true;
}

bool InCone(tVertex a, tVertex b)
{
    tVertex a0, a1;
    a1 = a-&gt;next, a0 = a-&gt;prev;

    if (LeftOn(a-&gt;v, a1-&gt;v, a0-&gt;v) )
        return
            Left(a-&gt;v, b-&gt;v, a1-&gt;v) &amp;&amp;
            Left(b-&gt;v, a-&gt;v, a1-&gt;v) ;
    return
        !(  LeftOn(a-&gt;v, b-&gt;v, a1-&gt;v) &amp;&amp;
            LeftOn(b-&gt;v, a-&gt;v, a0-&gt;v) );
}

bool Diagonal(tVertex a, tVertex b)
{
    return InCone(a, b) &amp;&amp; InCone(b, a) &amp;&amp; Diagonalie( a, b) ;
}

void EarInit()
{
    tVertex v0, v1, v2;
    v1 = vertices;
    do
    {
        v2 = v1-&gt;next;
        v0 = v1-&gt;prev;
        v1-&gt;ear = Diagonal(v0, v2);
        v1 = v1-&gt;next;
    }
    while (v1 != vertices);
}

void Triangulate()
{
    tVertex v0, v1, v2, v3, v4;
    int n = nvertices;

    EarInit();
    while (n&gt;3)
    {
        v2 = vertices;
        do
        {
            if (v2-&gt;ear)
            {
                v3 = v2-&gt;next, v4 = v3-&gt;next;
                v1 = v2-&gt;prev, v0 = v1-&gt;prev;

                // (v1,v3)is a diagonal
                print(v1, v3);

                // Update earity of diagonal endpoints
                v1-&gt;ear = Diagonal(v0, v3);
                v3-&gt;ear = Diagonal(v1, v4);

                // Cut off the ear v2
                v1-&gt;next = v3;
                v3-&gt;prev = v1;
                vertices = v3;
                n--;
                break;
            }
            v2 = v2-&gt;next;
        }
        while (v2 != vertices);
    }
}

void TriangulateMain()
{
    ReadVertices();
    Triangulate();
}</pre> 



参考资料：Joseph O'Rourke:<em>Computational Geometry in C, 2ed</em></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>199</wp:post_id>
		<wp:post_date>2010-07-24 10:41:17</wp:post_date>
		<wp:post_date_gmt>2010-07-24 02:41:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>CG1-Polygon-Triangulation-duo-bian-xing-fen-ge</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="computational-geometry-ji-suan-ji-he"><![CDATA[Computational Geometry]]></category>
		<category domain="post_tag" nicename="computational-geometry"><![CDATA[computational geometry]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1279939282]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1279939282]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391500]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>POJ 1928</title>
		<link>http://allenlsy.com/2010/07/POJ-1928/</link>
		<pubDate>Tue, 27 Jul 2010 01:04:49 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=209</guid>
		<description></description>
		<content:encoded><![CDATA[题意：在一张地图中，按降序依次取数。每走一步和取一个数，都耗费以单位时间。求在给定时间内能取数的总和。

思路：先排序。然后判断能否去第一个数。如果可以，就依次判断能否取下一个数。能取下一个数的条件是在剩下时间内，能走到那个数，并且取它，并且还有足够时间离开地图。作此循环，直到不能取数为止。难得又1Y了

统计：16ms
 
<pre class="lang:c++ decode:true " >#include &lt;iostream&gt;
#include &lt;cmath&gt;
#include &lt;algorithm&gt;
#include &lt;functional&gt;
#define F(i,a,b) for (int i=a;i&lt;=b;i++)
#define maxn 52
using namespace std;

struct Pos
{
    int x, y, v;
    Pos() {}
    Pos(int a, int b, int c)
    { x = a, y = b, v = c; }
    bool operator &gt; (const Pos&amp; b) const
    { return v &gt; b.v; }

};

Pos p[2501];
int m, n, k, t, map[maxn][maxn], np;

bool canGetNext(int now)
{
    if (now == np)
        return false;
    int x = p[now].x, y = p[now].y, newx = p[now+1].x, newy = p[now+1].y;

    if ( abs(x - newx) + abs(y - newy) + 1 + newx &gt; k - t )
        return false;
    return true;
}

int dist(int now)
{
    int x = p[now].x, y = p[now].y, newx = p[now+1].x, newy = p[now+1].y;
    return abs( x - newx ) + abs ( y - newy );

}

int main()
{
    int T, sum;

    scanf("%d", &amp;T);
    F(tt,1,T)
    {
        sum = 0;
        t = 0;
        np = 0;

        scanf("%d%d%d", &amp;m, &amp;n, &amp;k);
        F(i,1,m)
        {
            F(j,1,n)
            {
                scanf("%d", &amp;map[i][j]);
                if (map[i][j] != 0)
                    p[ ++np ] = Pos(i, j, map[i][j]);
            }

        }

        // solve
        // sort
        sort( p+1, p+np+1, greater&lt;Pos&gt;() );
        // if can pick first peanut
        if ( 1+2*p[1].x &lt;=k)
        {
            sum+=p[1].v;
            t = p[1].x+1;
            int now = 1;
            while ( canGetNext(now) ) // can get next peanut
            {
                //get next peanut
                sum+=p[now+1].v;
                t += dist(now)+1;
                now++;
            }

            cout &lt;&lt; sum &lt;&lt; endl;
        }
        //
        else
            cout &lt;&lt; 0 &lt;&lt; endl;
    }

    return 0;
}</pre> 
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>209</wp:post_id>
		<wp:post_date>2010-07-27 09:04:49</wp:post_date>
		<wp:post_date_gmt>2010-07-27 01:04:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>POJ-1928</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="poj-bei-da-ti-ku"><![CDATA[POJ 北大题库]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1280192689]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1280192689]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391509]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[转] 复习 管理学</title>
		<link>http://allenlsy.com/2010/08/zhuan-fu-xi-guan-li-xue/</link>
		<pubDate>Sat, 07 Aug 2010 03:09:11 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=211</guid>
		<description></description>
		<content:encoded><![CDATA[【蝴蝶效应】【青蛙现象】【鳄鱼法则】      【鲇鱼效应】  【羊群效应】    【刺猬法则】    【手表定律】

【破窗理论】【二八定律】【木桶理论】      【马太效应】  【鸟笼逻辑】    【责任分散效应】【帕金森定律】

【晕轮效应】【霍桑效应】【习得性无助实验】【证人的记忆】【罗森塔尔效应】【虚假同感偏差】

------------------------------------------------------------------------------------




【蝴蝶效应】
蝴蝶效应:上个世纪70年代，美国一个名叫洛伦兹的气象学家在解释空气系统理论时说，亚马逊雨林一只蝴蝶翅膀偶尔振动，也许两周后就会引起美国得克萨斯州的一场龙卷风。
蝴蝶效应是说，初始条件十分微小的变化经过不断放大，对其未来状态会造成极其巨大的差别。有些小事可以糊涂，有些小事如经系统放大，则对一个组织、一个国家来说是很重要的，就不能糊涂。
今天的企业，其命运同样受“蝴蝶效应”的影响。消费者越来越相信感觉，所以品牌消费、购物环境、服务态度……这些无形的价值都会成为他们选择的因素。所以只要稍加留意，我们就不难看到，一些管理规范、运作良好的公司在他们的公司理念中都会出现这样的句子：
“在你的统计中，对待100名客户里，只有一位不满意，因此你可骄称只有1%的不合格，但对于该客户而言，他得到的却是100%的不满意。”
“你一朝对客户不善，公司就需要10倍甚至更多的努力去补救。”
“在客户眼里，你代表公司”。
今天，能够让企业命运发生改变的“蝴蝶”已远不止“计划之手”，随着中国联通加入电信竞争，私营企业承包铁路专列、南京市外资企业参与公交车竞争等新闻的出现，企业坐而无忧的垄断地位日渐势微，开放式的竞争让企业不得不考虑各种影响发展的潜在因素。
精简机构、官员下岗、取消福利房等措施，让越来越多的人远离传统的保障，随之而来的是依靠自己来决定命运。而组织和个人自由组合的结果就是：谁能捕捉到对生命有益的“蝴蝶”，谁就不会被社会抛弃。

----------------------------------------------------------------------------------------------------

【青蛙现象】
青蛙现象：把一只青蛙直接放进热水锅里，由于它对不良环境的反应十分敏感，就会迅速跳出锅外。如果把一个青蛙放进冷水锅里，慢慢地加温，青蛙并不会立即跳出锅外，水温逐渐提高的最终结局是青蛙被煮死了，因为等水温高到青蛙无法忍受时，它已经来不及、或者说是没有能力跳出锅外了。
青蛙现象告诉我们，一些突变事件，往往容易引起人们的警觉，而易致人于死地的却是在自我感觉良好的情况下，对实际情况的逐渐恶化，没有清醒的察觉。
启示之一是：我们的组织和社会生存的主要威胁，并非来自突如其来的事件，而是由缓慢渐进而无法察觉的过程形成。人们目光短浅，只看到局部，而无法纵观全局，对于突如其来的变化，可以从容面对，对于悄悄发生的大的变化，而无法察觉，最终会带给我们更加严重的危害！~
启示之二是：青蛙，就好象是我们生活中的芸芸众生，我们要着眼未来，勤于思考新的问题，勤于学习新的知识，不能过“今日有酒，今日醉”和“当一天和尚，撞一天钟”的醉生梦死的生活，到头来将是非常可悲的！
启示之三是：当今的社会，是一个知识爆炸、日新月异的时代，知识也需要不断更新，所以我们不要一味的沉迷于现状、安于现状，不思进取，这样下去的话，肯定会被时代所淘汰，也会有面临失业的危险！
启示之四是：我们不要单纯的，只能面对突如其来的危险，而忽视那种缓慢而又微小甚微的危险，因为，那种缓慢而又微小甚微的危险，才是最可怕的！

-----------------------------------------------------------------------------------------------------

【鳄鱼法则】
鳄鱼法则：其原意是假定一只鳄鱼咬住你的脚，如果你用手去试图挣脱你的脚，鳄鱼便会同时咬住你的脚与手。你愈挣扎，就被咬住得越多。所以，万一鳄鱼咬住你的脚，你唯一的办法就是牺牲一只脚。
譬如在股市中，鳄鱼法则就是：当你发现自己的交易背离了市场的方向，必须立即止损，不得有任何延误，不得存有任何侥幸。

-----------------------------------------------------------------------------------------------------

【鲇鱼效应】
以前，沙丁鱼在运输过程中成活率很低。后有人发现，若在沙丁鱼中放一条鲇鱼，情况却有所改观，成活率会大大提高。这是何故呢?
原来鲇鱼在到了一个陌生的环境后，就会“性情急躁”，四处乱游，这对于大量好静的沙丁鱼来说，无疑起到了搅拌作用;而沙丁鱼发现多了这样一个“异已分子”，自然也很紧张，加速游动。这样沙丁鱼缺氧的问题就迎刃而解了，沙丁鱼也就不会死了。
当一个组织的工作达到较稳定的状态时，常常意味着员工工作积极性的降低，“一团和气”的集体不一定是一个高效率的集体，这时候“鲶鱼效应”将起到很好的“医疗”作用。一个组织中，如果始终有一位“鲶鱼式”的人物，无疑会激活员工队伍，提高工作业绩。
“鲶鱼效应”是企业领导层激发员工活力的有效措施之一。它表现在两方面，一是企业要不断补充新鲜血液，把那些富有朝气、思维敏捷的年轻生力军引入职工队伍中甚至管理层，给那些固步自封、因循守旧的懒惰员工和官僚带来竞争压力，才能唤起“沙丁鱼”们的生存意识和竞争求胜之心。二是要不断地引进新技术、新工艺、新设备、新管理观念，这样才能使企业在市场大潮中搏击风浪，增强生存能力和适应能力。
关于鲶鱼效应的应用，目前已有鲶鱼效应在人力资源管理中的应用、在领导活动中的应用，具体包括竞争机制的建立、能人的启用、领导风格的变革等等。但笔者认为鲶鱼效应的分析和应用远不止这些。思考问题的视角不同，发现问题、解决问题的方法就不同。
首先，如果鲶鱼本体代表领导者。
领导者即影响他人完成任务的个体或者集体，在死气沉沉的沙丁鱼箱内，沙丁鱼就象征着一批同质性极强的群体，他们技能水平相似，缺乏创新和主动性，人浮于事，效率低下，整个机构是一种臃肿不堪的状态，而鲶鱼领导者的到来（或者内部沙丁鱼进化成鲶鱼），新官上任三把火，整顿纪律，规范制度，改造流程，合理配置岗位和人、财、物，逐渐组织的经营有了起色，成本减下来了，臃肿的机构简化了，无能的沙丁鱼被吃了、赶走了，有能耐的沙丁鱼得到了正面的激励，这样整个机构呈现欣欣向荣的景象，在鲶鱼领导者的带领下，整个组织的活力都被调动起来，从而使集体的力量更加强大，占领市场、保有市场才有了坚实的基础。
从这个角度看，鲶鱼领导者应该具备如下特质：
1-办事果断、雷厉风行：迅速发现组织停滞不前的病症所在，并能够快刀斩乱麻，迅速而有效地解决问题。
2-说话算话、强势作风：科学地决策，并能够监督决策的执行，及时评估政策的有效性。
3-倡导创新、结果导向：提倡创新，塑造鼓励创新的氛围，从业务流程、工作设计、人员招聘与配置、薪酬设计和考核等方面体现创新思想，体现创新的利。
4-成就需求、前瞻视野：有短中长期发展规划和目标，能够预见组织发展的方向以及现存人力资源与未来的差距，能够有效地辨别未来人才，裁减掉不适合组织发展的拖后腿人员。
5-系统视角、敢于变革：能够从系统内外观察组织系统结构的变化和功能，既要把自己当作组织的一部分（相对于渔夫，鲶鱼领导者本身也是沙丁鱼，渔夫才是领导者），又要把自己看成一个小系统中的领导者，能够带动员工队伍打开局面、打破常规，取得良好效益。
对于在领导者领导下为了共同目标而奋斗的职工群体而言，如果领导者有鲶鱼特性，那么要生存下去的方法就是运动起来，激发自己的能量，至少要和鲶鱼同步速度，并且要保证同一方向（企业目标），这样才不至于被鲶鱼追上吃掉，或者被其他沙丁鱼挤到最后憋死。
其次，如果鲶鱼代表团队中一员。
那么它就意味着新、奇、异，包括观点的不一样、行为的不同、习惯的迥异，正因为不同，才会激发智慧，一个团队需要不同性格、不同技能、不同工作经历的人加盟，如果都是清一色的员工，那么这个团队产生奇思妙想、产生高绩效的可能性是微乎其微的。在注重团队建设、致力团队沟通的今天，适当地吸引一些鲶鱼加入团队，会给整个团队带来活泼的工作气氛，带来创新，带来多赢。但是鲶鱼的数量应当加以控制，全是鲶鱼的话，整个团队就会出现“个个是英雄、整体是狗熊”的现象，因为个个鲶鱼都想坚持自己的观点，合作和沟通就不存在了，整个团队就乌烟瘴气了，所以日本有些企业信奉“一流管理者、二流员工”的用人信条，既然一条鲶鱼能够带动一群鱼翻腾搅动，那就没有必要再放第二条了，一山不容二虎也是这样的道理。从这个角度看，团队中的鲶鱼分子应注重良性沟通、影响力的塑造，其他员工对待团队中的鲶鱼，也应该在工作的基础上与其加强合作。
再次，如果鲶鱼代表让人来劲的工作内容。
现在在很多企业，组织结构和工作设计依然成为流程改造的一大课题，不合理、枯燥无味、没有前景、单调无聊的工作内容让人们感觉像一桶拥挤的沙丁鱼一样没有激情，不愿意在岗位上多思考多改进，以致慢慢地形成了集体惰性。如果能够把工作扩大化、丰富化的鲶鱼效应应用到工作设计（Jobdesigning）上，那对组织的财务贡献也是显而易见的。如何把好动、充满激情的鲶鱼放到一潭死水的工作中呢？这又是一门棘手的学问，有人主张从横向和纵向扩大工作范围、深化工作内容，让员工们体验丰富的工作活动，感受努力工作的成就，让他们体现面对挑战性、来劲性工作时的激动与欲望；有人主张运用轮岗的方式增长员工的才干，让他们工作中的鲶鱼越游越欢；笔者则主张在应用以上措施的同时还要注重人与岗位性格的匹配，鲶鱼就要做鲶鱼的事情，沙丁鱼就要做沙丁鱼的事情，岗位中既要有鲶鱼性工作内容也要有沙丁鱼性工作内容，最重要的是要发现员工的偏好，看那些工作能够让他们产生鲶鱼的动力与激情，只有匹配了之后，鲶鱼效应才能真正发挥它的作用，不然虽然设置了鲶鱼性工作内容，却发现这种工作根本不能让员工为之动容、为之奋斗，那么这条鲶鱼就成了死鱼了。
从这个角度看，工作中的鲶鱼代表着丰富的工作内容、令人来劲的责权利、充满挑战的工作期望、新鲜的其他岗位体验等等。对于领导者和人力资源管理者而言，是否要在工作中设置鲶鱼工作、在什么层次上设置鲶鱼工作，都将是一个组织的战略问题。
综上，从不同的角度分析，鲶鱼代表的内容是不同的，对于一个从业者，领导可能是鲶鱼，那么你的努力最好和组织保持同方向，不要往后游，否则就有被吃掉的危险，永远充满激情地向上游，也许某一天你也变成了鲶鱼，赶着一群沙丁鱼向上奋斗；你的同事也可能是鲶鱼，那就和他比拼比拼，看谁翻腾的能量更大；你的下级也可能有鲶鱼，那就在激励下属成长的同时，别忘了给自己充充电，保持强劲的势头发展，否则你也有被下属吃掉的危险；你的工作中也可能有鲶鱼，那就合理地安排自己的工作，分清主次，让鲶鱼工作越游越欢，最好能到上一层工作岗位上去搅动一番。

---------------------------------------------------------------------------------



【羊群效应】
羊群效应：头羊往哪里走，后面的羊就跟着往哪里走。
羊群效应最早是股票投资中的一个术语，主要是指投资者在交易过程中存在学习与模仿现象，“有样学样”，盲目效仿别人，从而导致他们在某段时期内买卖相同的股票。
羊群效应理论（The Effect of Sheep Flock）
在一群羊前面横放一根木棍，第一只羊跳了过去，第二只、第三只也会跟着跳过去；这时，把那根棍子撤走，后面的羊，走到这里，仍然像前面的羊一样，向上跳一下，尽管拦路的棍子已经不在了，这就是所谓的“羊群效应”也称“从众心理”。是指管理学上一些企业的市场行为的一种常见现象。它是指由于对信息不充分的和缺乏了解，投资者很难对市场未来的不确定性作出合理的预期，往往是通过观察周围人群的行为而提取信息，在这种信息的不断传递中，许多人的信息将大致相同且彼此强化，从而产生的从众行为。“羊群效应”是由个人理性行为导致的集体的非理性行为的一种非线性机制。
羊群行为是行为金融学领域中比较典型的一种现象，主流金融理论无法对之解释。经济学里经常用“羊群效应”来描述经济个体的从众跟风心理。羊群是一种很散乱的组织，平时在一起也是盲目地左冲右撞，但一旦有一只头羊动起来，其他的羊也会不假思索地一哄而上，全然不顾前面可能有狼或者不远处有更好的草。因此，“羊群效应”就是比喻人都有一种从众心理，从众心理很容易导致盲从，而盲从往往会陷入骗局或遭到失败。
羊群效应的出现一般在一个竞争非常激烈的行业上，而且这个行业上有一个领先者（领头羊）占据了主要的注意力，那么整个羊群就会不断摹仿这个领头羊的一举一动，领头羊到哪里去“吃草”，其它的羊也去哪里“淘金”。

-----------------------------------------------------------------------------------------------------

【刺猬法则】
刺猬法则：两只困倦的刺猬，由于寒冷而拥在一起。可因为各自身上都长着刺，于是它们离开了一段距离，但又冷得受不了，于是凑到一起。几经折腾，两只刺猬终于找到一个合适的距离：既能互相获得对方的温暖而又不至于被扎。
刺猬法则主要是指人际交往中的“心理距离效应”。
法国总统戴高乐就是一个很会运用刺猬法则的人。他有一个座右铭：“保持一定的距离”！这也深刻地影响了他和顾问、智囊和参谋们的关系。在他十多年的总统岁月里，他的秘书处、办公厅和私人参谋部等顾问和智囊机构，没有什么人的工作年限能超过两年以上。他对新上任的办公厅主任总是这样说：“我使用你两年，正如人们不能以参谋部的工作作为自己的职业，你也不能以办公厅主任作为自己的职业。”这就是戴高乐的规定。这一规定出于两方面原因：一是在他看来，调动是正常的，而固定是不正常的。这是受部队做法的影响，因为军队是流动的，没有始终固定在一个地方的军队。二是他不想让“这些人”变成他“离不开的人”。这表明戴高乐是个主要靠自己的思维和决断而生存的领袖，他不容许身边有永远离不开的人。只有调动，才能保持一定距离，而惟有保持一定的距离，才能保证顾问和参谋的思维和决断具有新鲜感和充满朝气，也就可以杜绝年长日久的顾问和参谋们利用总统和政府的名义营私舞弊。
戴高乐的做法是令人深思和敬佩的。没有距离感，领导决策过分依赖秘书或某几个人，容易使智囊人员干政，进而使这些人假借领导名义，谋一己之私利，最后拉领导干部下水，后果是很危险的。两相比较，还是保持一定距离好。

通用电气公司的前总裁斯通在工作中就很注意身体力行刺猬理论，尤其在对待中高层管理者上更是如此。在工作场合和待遇问题上，斯通从不吝啬对管理者们的关爱，但在工余时间，他从不要求管理人员到家做客，也从不接受他们的邀请。正是这种保持适度距离的管理，使得通用的各项业务能够芝麻开花节节高。与员工保持一定的距离，既不会使你高高在上，也不会使你与员工互相混淆身份。这是管理的一种最佳状态。距离的保持靠一定的原则来维持，这种原则对所有人都一视同仁：既可以约束领导者自己，也可以约束员工。掌握了这个原则，也就掌握了成功管理的秘诀。

-----------------------------------------------------------------------------------------------------

【手表定律】
手表定律：手表定律是指一个人有一只表时，可以知道现在是几点钟，而当他同时拥有两只时却无法确定。两只表并不能告诉一个人更准确的时间，反而会使看表的人失去对准确时间的信心。
手表定律在企业管理方面给我们一种非常直观的启发，就是对同一个人或同一个组织不能同时采用两种不同的方法，不能同时设置两个不同的目标，甚至每一个人不能由两个人来同时指挥，否则将使这个企业或者个人无所适从。

猴子与表的故事
森林里生活着一群猴子，每天太阳升起的时候它们外出觅食，太阳落山的时候回去休息，日子过得平淡而幸福。
一名游客穿越森林，把手表落在了树下的岩石上，被猴子“猛可”拾到了。聪明的“猛可”很快就搞清了手表的用途，于是，“猛可”成了整个猴群的明星，每只猴子都向“猛可”请教确切的时间，整个猴群的作息时间也由“猛可”来规划。“猛可”逐渐建立起威望，当上了猴王。
做了猴王的“猛可”认为是手表给自己带来了好运，于是它每天在森林里巡查，希望能够拾到更多的表。功夫不负有心人，“猛可”又拥有了第二块、第三块表。
但 “猛可”却有了新的麻烦：每只表的时间指示都不尽相同，哪一个才是确切的时间呢？“猛可”被这个问题难住了。当有下属来问时间时，“猛可”支支吾吾回答不上来，整个猴群的作息时间也因此变得混乱。过了一段时间，猴子们起来造反，把“猛可”推下了猴王的宝座，“猛可”的收藏品也被新任猴王据为己有。但很快，新任猴王同样面临着“猛可”的困惑。
这就是著名的“手表定律”：只有一只手表，可以知道时间；拥有两只或更多的表，却无法确定几点。更多钟表并不能告诉人们更准确的时间，反而会让看表的人失去对准确时间的信心。
手表定律带给我们一种非常直观的启发：
对于任何一件事情，不能同时设置两个不同的目标，否则将使人无所适从；对于一个人不能同时选择两种不同的价值观，否则他的行为将陷于混乱。
一个人不能由两个以上的人来指挥，否则将使这个人无所适从；对于一个企业，更是不能同时采用两种不同的管理方法，否则将使这个企业无法发展。
在这方面美国在线与时代华纳的合并就是一个典型的失败案例。美国在线是一个年轻的互联网公司，企业文化强调操作灵活、决策迅速，要求一切为快速抢占市场的目标服务。时代华纳在长期的发展过程中建立起强调诚信之道和创新精神的企业文化。
两家企业合并后，企业高级管理层并没有很好地解决两种价值标准的冲突，导致员工完全搞不清企业未来的发展方向。最终，时代华纳与美国在线的世纪联姻以失败告终。这也充分说明，要搞清楚时间，一块走时准确的表就足够了。
只选择你认为正确的
两只表并不能告诉一个人更准确的时间，反而会让看表的人失去对准确时间的信心。你要做的就是选择其中较信赖的一只，尽量校准它，并以此作为你的标准，听从它的指引行事。
尼采有一句名言：“兄弟，如果你是幸运的，你只要有一种道德而不要贪多，这样，你过桥会更容易些。”如果每个人都“选择你所爱，爱你所选择”，无论成败都可以心安理得。然而，困扰很多人的是，他们被“两只表”弄得无所适从，心力交瘁，不知自己该信哪一个。
还有人在环境或他人的压力下，违心选择了自己并不喜欢的道路，并因此而郁郁终生。即使取得了受人瞩目的成就，也体会不到成功的快乐。
在现实生活中，我们也经常会遇到类似的情况。比如两门选修课都是你所感兴趣的，但是授课时间重合，而且你又没有足够的精力学好两门课程，这个时候你很难做出选择。在面对两个同样优秀、同样倾心于你的男孩子时，你也一定会苦恼许久，不知该如何做出决断。
择业时，地点、待遇不分伯仲的两家单位，你将何去何从？在人生的每一个十字路口，我们都要面对“鱼与熊掌不能兼得”的苦恼。
在面对矛盾选择的时候，我们推荐使用“模糊心理”。所谓“模糊心理”，就是在一个很难决策的情况下，以潜意识的心理为主要基调，做出符合潜意识心理的选择。
心理学研究表明，“模糊心理”实际上是人在成长过程中不断积累的一种心理沉积。也许你并不能说出一条明确的原因，但是通过心理的潜意识，一般情况下可以做出最符合个体心理需求的决定。这里说的潜意识，实际上就是我们常说的第一印象。“模糊心理”在矛盾选择面前，能够提供给我们最安全的心理保护，因而是值得提倡的。
核心理念：更多选择、更多标准会让人无所适从。
应用要诀：明确目标、不受干扰；懂得取舍，该放则放。

-----------------------------------------------------------------------------------------------------

【破窗理论】
破窗理论：一个房子如果窗户破了，没有人去修补，隔不久，其它的窗户也会莫名其妙地被人打破;一面墙，如果出现一些涂鸦没有被清洗掉，很快的，墙上就布满了乱七八糟、不堪入目的东西;一个很干净的地方，人们不好意思丢垃圾，但是一旦地上有垃圾出现之后，人就会毫不犹疑地抛，丝毫不觉羞愧。

破窗理论1
也称“破窗谬论”，源于一个叫黑兹利特的学者在一本小册子中的一个譬喻（也有人认为这一理论是法国19世纪经济学家巴斯夏作为批评的靶子而总结出来的，见其著名文章《看得见的与看不见的》）。这位黑兹利特说，假如小孩打破了窗户，必将导致破窗人更换玻璃，这样就会使安装玻璃的人和生产玻璃的人开工，从而推动社会就业。
在这里，学者是为了说明孩童的行为与政府的行为所能产生的后果，从而彻底地否定凯恩斯主义的政府干预政策。“破窗理论”就是典型的“破坏创造财富”。把这样的谬论放之于洪灾，放之于地震，放之于战争，好像都很合适。

破窗理论2
也叫 破窗效应一扇窗户被打破，如果没有修复，将会导致更多的窗户被打破，甚至整栋楼被拆毁。由美国政治学家威尔逊和犯罪学家凯琳观察总结的“破窗理论”指出环境可以对一个人产生强烈的暗示性和诱导性。

-----------------------------------------------------------------------------------------------------

【二八定律】
二八定律(巴莱多定律)：19世纪末20世纪初意大利的经济学家巴莱多认为，在任何一组东西中，最重要的只占其中一小部分，约20%，其余80%尽管是多数，却是次要的。　　社会约80%的财富集中在20%的人手里，而80%的人只拥有20%的社会财富。这种统计的不平衡性在社会、经济及生活中无处不在，这就是二八法则。
二八法则告诉我们，不要平均地分析、处理和看待问题，企业经营和管理中要抓住关键的少数;要找出那些能给企业带来80%利润、总量却仅占20%的关键客户，加强服务，达到事半功倍的效果;企业领导人要对工作认真分类分析，要把主要精力花在解决主要问题、抓主要项目上。

20%的人成功------------------80%的人不成功
20%的人用脖子以上赚钱--------80%的人脖子以下赚钱
20%的人正面思考--------------80%的人负面思考
20%的人买时间----------------80%的人卖时间
20%的人找一个好员工----------80%的人找一份好工作
20%的人支配别人--------------80%的人受人支配
20%的人做事业----------------80%的人做事情
20%的人重视经验--------------80%的人重视学历
20%的人认为行动才有结果------80%的人认为知识就是力量
20%的人我要怎么做才有钱------80%的人我要有钱我就怎么做
20%的人爱投资----------------80%的人爱购物
20%的人有目标----------------80%的人爱瞎想
20%的人在问题中找答案--------80%的人在答案中找问题
20%的人在放眼长远------------80%的人只顾眼前
20%的人把握机会--------------80%的人错失机会
20%的人计划未来--------------80%的人早上起来才想今天干嘛
20%的人按成功经验行事--------80%的人按自己的意愿行事
20%的人做简单的事情----------80%的人不愿意做简单的事情
20%的人明天的事情今天做------80%的人今天的事情明天做
20%的人如何能办到------------80%的人不可能办到
20%的人记笔记----------------80%的人忘性好
20%的人受成功的人影响--------80%的人受失败人的影响
20%的人状态很好--------------80%的人态度不好
20%的人相信自己会成功--------------80%的人不愿改变环境
20%的人永远赞美、鼓励--------------80%的人永远漫骂、批评
20%的人会坚持--------------80%的人会放弃

---------------------------------------------------------------------------------



【木桶理论】
木桶理论：组成木桶的木板如果长短不齐，那么木桶的盛水量不是取决于最长的那一块木板，而是取决于最短的那一块木板。
水桶效应是指一只水桶想盛满水，必须每块木板都一样平齐且无破损，如果这只桶的木板中有一块不齐或者某块木板下面有破洞，这只桶就无法盛满水。是说一只水桶能盛多少水，并不取决于最长的那块木板，而是取决于最短的那块木板。也可称为短板效应。一个水桶无论有多高，它盛水的高度取决于其中最低的那块木板。
又称水桶原理或短板理论，水桶短板管理理论，所谓“水桶理论”也即“水桶定律”，其核心内容为：一只水桶盛水的多少，并不取决于桶壁上最高的那块木块，而恰恰取决于桶壁上最短的那块。根据这一核心内容，“水桶理论”还有两个推论：其一，只有桶壁上的所有木板都足够高，那水桶才能盛满水。其二，只要这个水桶里有一块不够高度，水桶里的水就不可能是满的。

-----------------------------------------------------------------------------------------------------

【马太效应】
马太效应：《圣经?马太福音》中有一句名言：“凡有的，还要加给他，叫他有余;没有的，连他所有的，也要夺过来。”
马太效应，指强者愈强、弱者愈弱的现象，广泛应用于社会心理学、教育、金融以及科学等众多领域。其名字来自圣经《新约·马太福音》中的一则寓言： “凡有的，还要加给他叫他多余；没有的，连他所有的也要夺过来。”“马太效应”与“平衡之道”相悖，与“二八定则”有相类之处，是十分重要的自然法则。

-----------------------------------------------------------------------------------------------------

【鸟笼逻辑】
挂一个漂亮的鸟笼在房间里最显眼的地方，过不了几天，主人一定会做出下面两个选择之一：把鸟笼扔掉，或者买一只鸟回来放在鸟笼里。这就是鸟笼逻辑。过程很简单，设想你是这房间的主人，只要有人走进房间，看到鸟笼，就会忍不住问你：“鸟呢？是不是死了？”当你回答：“我从来都没有养过鸟。”人们会问：“那么，你要一个鸟笼干什么？”最后你不得不在两个选择中二选一，因为这比无休止的解释要容易得多。鸟笼逻辑的原因很简单：人们绝大部分的时候是采取惯性思维。所以可见在生活和工作中培养逻辑思维是多么重要。

-----------------------------------------------------------------------------------------------------

【责任分散效应】
1964年3月13日夜3时20分，在美国纽约郊外某公寓前，一位叫朱诺比白的年轻女子在结束酒巴间工作回家的路上遇刺。当她绝望地喊叫：“有人要杀人啦!救命!救命!”听到喊叫声，附近住户亮起了灯，打开了窗户，凶手吓跑了。当一切恢复平静后，凶手又返回作案。当她又叫喊时，附近的住户又打开了电灯，凶手又逃跑了。当她认为已经无事，回到自己家上楼时，凶手又一次出现在她面前，将她杀死在楼梯上。在这个过程中，尽管她大声呼救，她的邻居中至少有38位到窗前观看，但无一人来救她，甚至无一人打电话报警。这件事引起纽约社会的轰动，也引起了社会心理学工作者的重视和思考。人们把这种众多的旁观者见死不救的现象称为责任分散效应。
对于责任分散效应形成的原因，心理学家进行了大量的实验和调查，结果发现：这种现象不能仅仅说是众人的冷酷无情，或道德日益沦丧的表现。因为在不同的场合，人们的援助行为确实是不同的。当一个人遇到紧急情境时，如果只有他一个人能提供帮助，他会清醒地意识到自己的责任，对受难者给予帮助。如果他见死不救会产生罪恶感、内疚感，这需要付出很高的心理代价。而如果有许多人在场的话，帮助求助者的责任就由大家来分担，造成责任分散，每个人分担的责任很少，旁观者甚至可能连他自己的那一份责任也意识不到，从而产生一种“我不去救，由别人去救”的心理，造成“集体冷漠”的局面。如何打破这种局面，这是心理学家正在研究的一个重要课题。

-----------------------------------------------------------------------------------------------------

【帕金森定律】
英国著名历史学家诺斯古德·帕金森通过长期调查研究，写出一本名叫《帕金森定律》的书。他在书中阐述了机构人员膨胀的原因及后果：一个不称职的官员，可能有三条出路，第一是申请退职，把位子让给能干的人；第二是让一位能干的人来协助自己工作；第三是任用两个水平比自己更低的人当助手。这第一条路是万万走不得的，因为那样会丧失许多权利；第二条路也不能走，因为那个能干的人会成为自己的对手；看来只有第三条路最适宜。于是，两个平庸的助手分担了他的工作，他自己则高高在上发号施令，他们不会对自己的权利构成威胁。两个助手既然无能，他们就上行下效，再为自己找两个更加无能的助手。如此类推，就形成了一个机构臃肿，人浮于事，相互扯皮，效率低下的领导体系。

-----------------------------------------------------------------------------------------------------

【晕轮效应】
俄国著名的大文豪普希金曾因晕轮效应的作用吃了大苦头。他狂热地爱上了被称为“莫斯科第一美人”的娜坦丽，并且和她结了婚。娜坦丽容貌惊人，但与普希金志不同道不合。当普希金每次把写好的诗读给她听时。她总是捂着耳朵说：“不要听！不要听！”相反，她总是要普希金陪她游乐，出席一些豪华的晚会、舞会，普希金为此丢下创作，弄得债台高筑，最后还为她决斗而死，使一颗文学巨星过早地陨落。在普希金看来，一个漂亮的女人也必然有非凡的智慧和高贵的品格，然而事实并非如此，这种现象被称为晕轮效应。
所谓晕轮效应，就是在人际交往中，人身上表现出的某一方面的特征，掩盖了其他特征，从而造成人际认知的障碍。在日常生活中，“晕轮效应”往往在悄悄地影响着我们对别人的认知和评价。比如有的老年人对青年人的个别缺点，或衣着打扮、生活习惯看不顺眼，就认为他们一定没出息；有的青年人由于倾慕朋友的某一可爱之处，就会把他看得处处可爱，真所谓“一俊遮百丑”。晕轮效应是一种以偏概全的主观心理臆测，其错误在于：第一，它容易抓住事物的个别特征，习惯以个别推及一般，就像盲人摸象一样，以点代面；第二，它把并无内在联系的一些个性或外貌特征联系在一起，断言有这种特征必然会有另一种特征；第三，它说好就全都肯定，说坏就全部否定，这是一种受主观偏见支配的绝对化倾向。总之，晕轮效应是人际交往中对人的心理影响很大的认知障碍，我们在交往中要尽量地避免和克服晕轮效应的副作用。

-----------------------------------------------------------------------------------------------------

【霍桑效应】
心理学上的一种实验者效应。20世纪20-30年代，美国研究人员在芝加哥西方电力公司霍桑工厂进行的工作条件、社会因素和生产效益关系实验中发现了实验者效应，称霍桑效应。
实验的第一阶段是从1924年11月开始的工作条件和生产效益的关系，设为实验组和控制组。结果不管增加或控制照明度，实验组产量都上升，而且照明度不变的控制组产量也增加。另外，有试验了工资报酬、工间休息时间、每日工作长度和每周工作天数等因素，也看不出这些工作条件对生产效益有何直接影响。第二阶段的试验是由美国哈佛大学教授梅奥领导的，着重研究社会因素与生产效率的关系，结果发现生产效率的提高主要是由于被实验者在精神方面发生了巨大的变化。参加试验的工人被置于专门的实验室并由研究人员领导，其社会状况发生了变化，受到各方面的关注，从而形成了参与试验的感觉，觉得自己是公司中重要的一部分，从而使工人从社会角度方面被激励，促进产量上升。
这个效应告诉我们，当同学或自己受到公众的关注或注视时，学习和交往的效率就会大大增加。因此，我们在日常生活中要学会与他人友好相处，明白什么样的行为才是同学和老师所接受和赞赏的，我们只有在生活和学习中不断地增加自己的良好行为，才可能受到更多人的关注和赞赏，也才可能让我们的学习不断进步，充满自信！

-----------------------------------------------------------------------------------------------------

【习得性无助实验】
习得性无助效应最早有奥弗米尔和西里格曼发现，后来在动物和人类研究中被广泛探讨。简单地说，很多实验表明，经过训练，狗可以越过屏障或从事其他的行为来逃避实验者加于它的电击。但是，如果狗以前受到不可预期（不知道什么时候到来）且不可控制的电击（如电击的中断与否不依赖于狗的行为），当狗后来有机会逃离电击时，他们也变得无力逃离。而且，狗还表现出其他方面的缺陷，如感到沮丧和压抑，主动性降低等等。
狗之所以表现出这种状况，是由于在实验的早期学到了一种无助感。也就是说，它们认识到自己无论做什么都不能控制电击的终止。在每次实验中，电击终止都是在实验者掌控之下的，而狗会认识到自己没有能力改变这种外界的控制，从而学到了一种无助感。
人如果产生了习得性无助，就成为了一种深深的绝望和悲哀。因此，我们在学习和生活中应把自己的眼光在开阔一点，看到事件背后的真正的决定因素，不要使我们自己陷入绝望。

-----------------------------------------------------------------------------------------------------

【证人的记忆】
证人，在我们的认识里，通常都是提供一些客观的证据的人，就是把自己亲眼看到、亲耳听到的东西如实地讲出来的人。然而，心理学研究证明，很多证人提供的证词都不太准确，或者说是具有个人倾向性，带着个人的观点和意识。
证人对他们的证词的信心并不能决定他们证词的准确性，这一研究结果令人感到惊讶。心理学家珀费可特和豪林斯决定对这一结论进行更深入的研究。为了考察证人的证词是否有特别的东西，他们将证人的记忆与对一般知识的记忆进行了比较。
他们让被试看一个简短的录象，是关于一个女孩被绑架的案件。第二天，让被试回答一些有关录象里内容的问题，并要求他们说出对自己回答的信心程度，然后做再认记忆测验。接下来，使用同样的方法，内容是从百科全书和通俗读物中选出的一般知识问题。
和以前发生的一样，珀费可特和豪林斯也发现，在证人回忆的精确性上，那些对自己的回答信心十足的人实际上并不比那些没信心的人更高明，但对于一般知识来说，情况就不是这样，信心高的人回忆成绩比信心不足的人好得多。
人们对于自己在一般知识上的优势与弱势有自知之明。因此，倾向于修改他们对于信心量表的测验结果。一般知识是一个数据库，在个体之间是共享的，它有公认的正确答案，被试可以自己去衡量。例如，人们会知道自己在体育问题上是否比别人更好或更差一点。但是，目击的事件不受这种自知之明的影响。例如，从总体上讲，他们不大可能知道自己比别人在记忆事件中的参与者头发颜色方面更好或更差。

-----------------------------------------------------------------------------------------------------

【罗森塔尔效应】
美国心理学家罗森塔尔等人于1968年做过一个著名实验。他们到一所小学，在一至六年级各选三个班的儿童进行煞有介事的“预测未来发展的测验”，然后实验者将认为有“优异发展可能”的学生名单通知教师。其实，这个名单并不是根据测验结果确定的，而是随机抽取的。它是以“权威性的谎言”暗示教师，从而调动了教师对名单上的学生的某种期待心理。8个月后，再次智能测验的结果发现，名单上的学生的成绩普遍提高，教师也给了他们良好的品行评语。这个实验取得了奇迹般的效果，人们把这种通过教师对学生心理的潜移默化的影响，从而使学生取得教师所期望的进步的现象，称为“罗森塔尔效应”，习惯上也称为皮格马利翁效应（皮格马利翁是古希腊神话中塞浦路斯国王，他对一尊少女塑像产生爱慕之情，他的热望最终使这尊雕像变为一个真人，两人相爱结合）。
教育实践也表明：如果教师喜爱某些学生，对他们会抱有较高期望，经过一段时间，学生感受到教师的关怀、爱护和鼓励；常常以积极态度对待老师、对待学习以及对待自己的行为，学生更加自尊、自信、自爱、自强，诱发出一种积极向上的激情，这些学生常常会取得老师所期望的进步。相反，那些受到老师忽视、歧视的学生，久而久之会从教师的言谈、举止、表情中感受到教师的“偏心”，也会以消极的态度对待老师、对待自己的学习，不理会或拒绝听从老师的要求；这些学生常常会一天天变坏，最后沦为社会的不良分子。尽管有些例外，但大趋势却是如此，同时这也给教师敲响了警钟。

-----------------------------------------------------------------------------------------------------

【虚假同感偏差】
我们通常都会相信，我们的爱好与大多数人是一样的。如果你喜欢玩电脑游戏，那么就有可能高估喜欢电脑游戏的人数。你也通常会高估给自己喜欢的同学投票的人数，高估自己在群体中的威信与领导能力等等。你的这种高估与你的行为及态度有相同特点的人数的倾向性就叫做“虚假同感偏差”。有些因素会影响你的这种虚假同感偏差强度：
（1）当外部的归因强于内部归因时；
（2）当前的行为或事件对某人非常重要时；
（3）当你对自己的观点非常确定或坚信时；
（4）当你的地位或正常生活和学习受到某种威胁时；
（5）当涉及到某种积极的品质或个性时；
（6）当你将其他人看成与自己是相似时。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>211</wp:post_id>
		<wp:post_date>2010-08-07 11:09:11</wp:post_date>
		<wp:post_date_gmt>2010-08-07 03:09:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>zhuan-fu-xi-guan-li-xue</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="reading-hai-na-bai-chuan"><![CDATA[Reading]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1281150552]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391510]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1532681396]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Convex Hulls in Two Dimension(1) 二维凸包</title>
		<link>http://allenlsy.com/2010/08/Convex-Hulls-in-Two-Dimension-1-er-wei-tu-bao/</link>
		<pubDate>Mon, 09 Aug 2010 08:07:24 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=214</guid>
		<description></description>
		<content:encoded><![CDATA[<h2><span style="color:#e7a917;">Definition of Convexity 凸性的定义</span><span style="color:#e7a917;"><br />
</span></h2>
<h2><span style="color:#e7a917;"> ------------------------------------</span></h2>
<p>1. A set is convex if x∈S and y∈S implies that the segment xy is a subset of S<br />
2. The segment xy is the set o all points of the form αx + βy, α≤0，β≤0， and α+β=1.<br />
3. The convex hull of a set of points S is the set of all convex combinations of points of S</p>
<p><strong>Extreme points</strong>: the extreme points of a set S of points in the plane are the vertices of the convex hull at which the interior angle is strictly convex, less than π<br />
极点：是在凸包中内角小于π的点</p>
<p>A point is nonextreme iff it is inside some triangle whose vertices are points of the set and is not itself a corner of that triangle<br />
当且仅当一个点在点集连成的某个三角形内是，它一定是非极点</p>
<p><a href="http://allenlsy.files.wordpress.com/2010/08/1.jpg"><img class="alignnone size-full wp-image-215" title="1" src="http://allenlsy.files.wordpress.com/2010/08/1.jpg" alt="" width="317" height="188" /></a></p>
<p><strong>Extreme edges</strong>: an edge is extreme if every point of S is on or to one side of the line determined by the edge.<br />
极边：每个S中的点（出去极边上两端点）都在边的某一侧的边</p>
<p><a href="http://allenlsy.files.wordpress.com/2010/08/2.jpg"><img class="alignnone size-full wp-image-216" title="2" src="http://allenlsy.files.wordpress.com/2010/08/2.jpg" alt="" width="357" height="164" /></a></p>
<h2><span style="color:#ff9900;">Gift Wrapping 包裹法</span><span style="color:#ff9900;"><br />
</span></h2>
<h2><span style="color:#ff9900;"> ------------------------------------</span></h2>
<p><span style="color:#ff9900;"><a href="http://allenlsy.files.wordpress.com/2010/08/3.jpg"><img class="alignnone size-full wp-image-217" title="3" src="http://allenlsy.files.wordpress.com/2010/08/3.jpg" alt="" width="606" height="263" /></a> </span></p>
<p><strong>General position assumption</strong>: no three points are collinear.<br />
The idea is to use one extreme edge as an anchor for finding the next. For each point y, compute that angle, call it θ. The point that yields the smallest θ must determine an extreme edge(under the general position assumption). Complexity O(nh), h is the number of edges in its hull.<br />
一般假设：没有三点式共线的<br />
包裹法的思路是通过当前边，去找下一个凸包上的边。 对于每个点y，计算于这个点的夹角θ。夹角最小的点与当前极边上点连成的边一定是个极边（在一般假设的情况下）。复杂度O(nh)，h是凸包中的边数。</p>
<h2><span style="color:#ff9900;">Quickhull 快速凸包法</span><span style="color:#ff9900;"><br />
</span></h2>
<h2><span style="color:#ff9900;"> -------------------------------------</span></h2>
<p><span style="color:#ff9900;"> <img title="7" src="http://allenlsy.files.wordpress.com/2010/08/7.jpg" alt="" width="611" height="421" /></span></p>
<p>Use the rightmost lowest and leftmost highest points x and y. QuickHull is a procedure that starts with extreme points(a, b), finds a third extreme point c Strictly right of ab, discards all points inside △abc, and operates recursively on (a, c), (c, b). A point c∈S that is furthest away from ab must be on the hull. So the final hull is (x) + QuickHull(x, y, S1) + (y) + QuickHull(y, x, S2), where S1 and S2 are the points strictly above and below xy respectively. Complexity is O(nlogn) in the best case.<br />
将右下角的点和左上角的点分别设为x, y。快速凸包法从两个极点a,b开始，找到第三个极点c，排除所有三角形abc中的点后，在递归的在(a,c)的右边部分和(c,b)的右边部分找极点。S中一点c是ab右边最远的点，c肯定在凸包上。所以最终要求的凸包是(x) + QuickHull(x, y,S<sub>1</sub>) + (y) + QuickHull(y, x, S<sub>2</sub>)，其中S<sub>1</sub>是xy右边的点集，S<sub>2</sub>是yx，右边的点集。最好情况下复杂度为O(nlogn)</p>
<p><a href="http://allenlsy.files.wordpress.com/2010/08/5.jpg"><img class="alignnone size-full wp-image-219" title="5" src="http://allenlsy.files.wordpress.com/2010/08/5.jpg" alt="" width="521" height="210" /></a></p>
<h2><span style="color:#ff9900;">Graham's Algorithm Graham算法</span><span style="color:#ff9900;"><br />
</span></h2>
<h2><span style="color:#ff9900;"> --------------------------------------</span></h2>
<p><span style="color:#ff9900;"><a href="http://allenlsy.files.wordpress.com/2010/08/8.jpg"><img class="alignnone size-full wp-image-222" title="8" src="http://allenlsy.files.wordpress.com/2010/08/8.jpg" alt="" width="640" height="389" /></a> </span></p>
<p><span style="color:#ff9900;"> </span></p>
<p>Use the rightmost of the lowest point O as the sorting origin, sort all the points. O is surely a extreme point. When sorting, if angle(a) = angle(b), the define a &lt; b if |a-O|&lt;|b-O|.<br />
令右下角的点O为排序的参照点，对所有点排序。O肯定是一个极点。在排序时，如果a, b的角度一样大，则离O越远的点值越大。复杂度O(nlogn)。</p>
<p><a href="http://allenlsy.files.wordpress.com/2010/08/9.jpg"><img class="alignnone size-full wp-image-223" title="9" src="http://allenlsy.files.wordpress.com/2010/08/9.jpg" alt="" width="349" height="255" /></a></p>
<h2><span style="color:#ff9900;">Incremental Algorithm 渐进算法<br />
</span></h2>
<h2><span style="color:#ff9900;"> ---------------------------------------</span></h2>
<p><span style="color:#ff9900;"> <a href="http://allenlsy.files.wordpress.com/2010/08/11.jpg"><img class="alignnone size-full wp-image-225" title="11" src="http://allenlsy.files.wordpress.com/2010/08/11.jpg" alt="" width="640" height="353" /></a></span></p>
<p>The first hull is the triangle conv{p<sub>0, </sub>p<sub>1</sub>,p<sub>2</sub>}. Let Q = H<sub>k-1</sub>, p = p<sub>k</sub>.<br />
If p∈Q, then p can be discarded.<br />
If p∉Q(if any LeftOn test returns false, then p∉Q), we need to find two lines of tangency from p to Q. For lower point of tangency pi, p is left of p<sub>i-1</sub>p<sub>i</sub> but right of p<sub>i</sub>p<sub>i+1</sub>. For upper point of tangency p<sub>j</sub>, p is right of p<sub>j-1</sub>p<sub>j</sub> but left of p<sub>j</sub>p<sub>j+1</sub>. The hull can be increased. The new hull is (p<sub>0, </sub>p<sub>1</sub>,… p<sub>i</sub>, p, pj, p<sub>j+1</sub>,…, p<sub>n-1</sub>)</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>214</wp:post_id>
		<wp:post_date>2010-08-09 16:07:24</wp:post_date>
		<wp:post_date_gmt>2010-08-09 08:07:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>Convex-Hulls-in-Two-Dimension-1-er-wei-tu-bao</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="computational-geometry-ji-suan-ji-he"><![CDATA[Computational Geometry]]></category>
		<category domain="post_tag" nicename="convex-hull"><![CDATA[convex hull]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1281341244]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1281341244]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391511]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>wpsd_autopost</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[Convex-Hulls-in-Two-Dimension-1-er-wei-tu-bao]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SM3项目留学新加坡的FAQ</title>
		<link>http://allenlsy.com/2010/08/SM3-xiang-mu-liu-xue-xin-jia-po-de-FAQ/</link>
		<pubDate>Sat, 14 Aug 2010 03:42:08 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=229</guid>
		<description></description>
		<content:encoded><![CDATA[作者2007年从西安交大前往新加坡留学，在交大时的专业是信息工程，现在南洋理工大学读Computer Science的本科。本文观点均属于个人观点。

最近问关于SM3系列留学项目的同学很多，所以写个东西，回答一下大家经常问的问题吧

<strong><span style="color:#ff9900;">1．	在新加坡读大学和西安交大读相比哪个更好？</span></strong>

答：首先说一下在新加坡读书的益处。

一，	新加坡的生活条件远好于西安交大。我并不是说交大不好。其实初次去交大时我觉得在国内的高校中，交大的条件已经很不错了，尤其是有那么漂亮的主楼。但是跟新加坡还是没法比。

二，	新加坡大学的考核制度更加严格。不会出现国内学校经常有的考前老师勾重点、漏题的现象。“平时睡一睡，考前背一背”的方法就不适用了。平时成绩占总评的比重较大。

三，	就业率高，所以生活压力没有国内这么大。这里，也包括美国，的思想是本科读完就足够工作了。只有想真正从事科研的人才会去读研究生。读研的具体问题后面再探讨。

四，	当然就是英语教学了。这里有相对国内更好的说英语的氛围，如果自己平时刻意去多用英语，提高是很快的。另外如果以后要考欧美国家的研究生，几乎所有的高校都不要求托福成绩了，但是国内的高校是要求的。

现在说一下在新加坡读书的不足之处。

一，	大学不分班。所以没有班集体的概念，对于有些人来说可能会有不习惯，觉得人际圈子比较小。

二，	新加坡的基础教育比不上国内。比如数学，就没有国内高校学得那么深。不过国内的同学也反映说，学那么多数学，工作后又不用，根本是浪费时间。所以这个问题就自己拿捏吧。

三，	住房是一个问题。新加坡地少人多，所以不是每个同学都有寝室住的。以南大来说，大一时学校保证给学生寝室住，后面就要看参加课外活动的数量和质量了。通过参加活动来获取一个积分。只有积分高于某个标准的才有寝室住。有一些学生大三大四就被迫在学校附近租房了。

四，	新加坡人相对比较懒散。我有个从美国回来教书的老师说，新加坡大学的生活条件太好，以至于如果自制力不强的话，很容易堕落的。

<span style="color:#ff9900;"><strong>2．	毕业后的生活水平怎么样？</strong></span>

答：大部分学生本科后的起薪是2600-4000新币。生活的开销，一个月用500-600在饮食上，租房费400左右一个月。以后买房的话，每平米大概13000人民币吧。手机费用，如果套餐买的合适，本地费用大概1毛人民币每分钟，打回国内1毛6每分钟。生活费大概就在这个水准上。

<strong><span style="color:#ff9900;">3．	本科毕业后能读研吗？</span></strong>

答：原则上是不行的。但基本上毕业后想读研的话，跟MOE（新加坡教育部）谈一谈都是可以读的。接着读书的话MOE不会给资助学费了。可以选择在新加坡读研或者去其他地方（比如通过考GRE去北美）读。据说去北美读的话，要给MOE交一笔押金，押金的金额对于每个人不等，是通过自己跟MOE谈出来的。金额最高的，有70w人民币。然后学费，在所要填报的官方网站上有。一般新加坡的学校是17000新币每年，美国的大学，公立的大多是10000-20000美元每年，英国的是13000英镑每年。在新加坡读研的话据说每月导师会发1500左右的工资。还有一点很重要的，就是中国的国情跟新加坡、美国等国的国情是不一样的。在新加坡，对于不同学历的人，国家规定有最低的薪金。这就使得，由于单位给不起他这么高的薪金，导致大量研究生真的很难找到工作。计算机专业和电子电气专业的研究生要好一点，其他像数学无力那样的专业，想就业就很难了。所以读研之前一定要慎重考虑是否适合自己。

<strong><span style="color:#ff9900;">4．	新加坡大学哪些专业比较好？</span></strong>

答：南洋理工大学的长项是工科。最强的应该是EEE（电子电气学院），机械与航空学院也很不错。另外就是南大有亚洲第一的商学院。国大我没有太大发言权，只是听说他们的理科方面很强。

<span style="color:#ff9900;"><strong>再提一些和新加坡大学国内不一样的地方吧：</strong></span>

•	每周上课大概25小时。上课时间是早八点半到晚九点半。

•	男生女生混住在同一寝室楼，只是住在不同楼层。

•	寝室楼内有洗衣房、厨房、电视房、琴房、自习室等等，设备比较齐全，而且都是免费的。

•	南大有6个图书馆，再加上新加坡本地学生大多住在自己家，所以极少出现图书馆抢座的现象。

•	不会有铺天盖地的作业，但是个人感觉练习有点少。

先说到这里吧。其他的问题可以给我留言，我会整理后更新本网页。谢谢]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>229</wp:post_id>
		<wp:post_date>2010-08-14 11:42:08</wp:post_date>
		<wp:post_date_gmt>2010-08-14 03:42:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>SM3-xiang-mu-liu-xue-xin-jia-po-de-FAQ</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="allenlsy-ri-ji-xin-de"><![CDATA[Daily Life]]></category>
		<category domain="post_tag" nicename="singapore"><![CDATA[singapore]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[sm3%e9%a1%b9%e7%9b%ae%e7%95%99%e5%ad%a6%e6%96%b0%e5%8a%a0%e5%9d%a1%e7%9a%84faq]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1281757329]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[sm3%e9%a1%b9%e7%9b%ae%e7%95%99%e5%ad%a6%e6%96%b0%e5%8a%a0%e5%9d%a1%e7%9a%84faq]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1281757329]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391526]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>wpsd_autopost</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[SM3-xiang-mu-liu-xue-xin-jia-po-de-FAQ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1281825417]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[allenlsy]]></wp:comment_author>
			<wp:comment_author_email>allenlsy@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://allenlsy.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>155.69.198.4</wp:comment_author_IP>
			<wp:comment_date>2010-08-27 08:54:25</wp:comment_date>
			<wp:comment_date_gmt>2010-08-27 00:54:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[都是别人常问的问题，其实我自己不知道该告诉些什么]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>10</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1282870465]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[mycloudgate]]></wp:comment_author>
			<wp:comment_author_email>iammygod@live.com</wp:comment_author_email>
			<wp:comment_author_url>http://mycloudgate.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>203.116.208.9</wp:comment_author_IP>
			<wp:comment_date>2010-08-18 16:19:29</wp:comment_date>
			<wp:comment_date_gmt>2010-08-18 08:19:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[说的很好~]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1282119569]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[893652280]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>8</wp:comment_id>
			<wp:comment_author><![CDATA[Mark Fu]]></wp:comment_author>
			<wp:comment_author_email>fsw90628@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://markabstract.fuhuier.com/</wp:comment_author_url>
			<wp:comment_author_IP>218.186.8.226</wp:comment_author_IP>
			<wp:comment_date>2010-08-19 01:53:36</wp:comment_date>
			<wp:comment_date_gmt>2010-08-18 17:53:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[嘿嘿，还不强制断电、断网。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1282154016]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[893652283]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9</wp:comment_id>
			<wp:comment_author><![CDATA[LaoMa]]></wp:comment_author>
			<wp:comment_author_email>eclili@foxmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>118.117.14.28</wp:comment_author_IP>
			<wp:comment_date>2010-08-25 20:03:35</wp:comment_date>
			<wp:comment_date_gmt>2010-08-25 12:03:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[呵呵，写得挺详细哈，早告诉我这写的有就不必问你那么多惹你烦了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1282737816]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[893652279]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>[转]励志 如何成为acm牛人</title>
		<link>http://allenlsy.com/2010/08/zhuan-li-zhi-ru-he-cheng-wei-acm-niu-ren/</link>
		<pubDate>Fri, 27 Aug 2010 02:11:11 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=235</guid>
		<description></description>
		<content:encoded><![CDATA[from tju bbs   作者 cnhawk         时间 Wed Jul 19 17:07:50 2006
前天晚上回去，本想敲几个代码，又怕吵醒宿舍里睡觉的同学，只好到各校的BBS上去逛逛，于是看到了下面两张图。
这两张图都是AlexanderYi发的，我也不清楚他叫什么名字
只知道他是dwyak的队友。
dwyak我知道，真名戴文渊，上海交大ACM-ICPC代表队队员、队长、教练，先后获得2004年第29届ACM国际大学生程序设计竞赛亚洲区预选赛台北赛区冠军、日本赛区冠军，2005年第29届ACM国际大学生程序设计竞赛全球总决赛冠军。
牛吧？

第一张图：

<img title="1" src="http://allenlsy.com/wp-content/uploads/2010/08/13.jpg" alt="" width="640" height="435" />
AlexanderYi做的题。

他的注释：
我有个习惯，收集做过的卷子。今天整理寝室，发现做过的题目还是很多的。
天才只是少数，我们更强更多是因为我们更努力。我做的题目在队里算少的，何况比赛每届都在进步，我们只能加倍的努力！

在新一轮集训即将开始之际，仅以此帖与大家共勉。

第二张图：

<a href="http://allenlsy.com/wp-content/uploads/2010/08/21.jpg"><img class="alignnone size-full wp-image-237" title="2" src="http://allenlsy.com/wp-content/uploads/2010/08/21.jpg" alt="" width="640" height="481" /></a>
dwyak对这张图的注释：
四年前选拔赛笔试的一道题
问N条线段最多可以将平面分割成多少个区域
这图是AlexanderYi的手工枚举版
AlexanderYi的注释：
任何时候都不要放弃希望。
坚持就是胜利！

那天晚上我看到这两张照片的时候，感慨良多。
确实，半年多前，我对ACM一无所知，在灌水之时无意中发现了这个版面，自负于自己的C++成绩，于是也想试试玩玩。本只是写几个代码玩玩，但很快我就喜欢上ACM了。吸引我的，正是这里的人，这里的氛围：积极向上，拼搏进取，我们不是最优秀的，但我们是最努力的。
那个“N条线段最多可以将平面分割成多少个区域”的题很简单，我们集训队很多人都会做这个题吧？
试想，当时的dwyak,AlexanderYi是什么水平？现在他们又是什么水平？
上交当年获得总决赛冠军的队伍，好几个都是高中没有任何计算机基础的，靠着大学里的努力上去的。对于我们也一样，现在我们都很弱，无法与上交、清华相抗衡，但相信只要努力了，我们就会进步的！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>235</wp:post_id>
		<wp:post_date>2010-08-27 10:11:11</wp:post_date>
		<wp:post_date_gmt>2010-08-27 02:11:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>zhuan-li-zhi-ru-he-cheng-wei-acm-niu-ren</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="acm"><![CDATA[acm]]></category>
		<category domain="category" nicename="allenlsy-ri-ji-xin-de"><![CDATA[Daily Life]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1282875073]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1282875073]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391527]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>wpsd_autopost</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1281825425]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>10</wp:comment_id>
			<wp:comment_author><![CDATA[Dong Liang]]></wp:comment_author>
			<wp:comment_author_email>lifeisfun366@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>155.69.178.170</wp:comment_author_IP>
			<wp:comment_date>2010-09-16 00:06:02</wp:comment_date>
			<wp:comment_date_gmt>2010-09-15 16:06:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[very well. Keep working.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1284566763]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[893652282]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[allenlsy]]></wp:comment_author>
			<wp:comment_author_email>allenlsy@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://allenlsy.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>155.69.174.46</wp:comment_author_IP>
			<wp:comment_date>2010-09-16 00:30:23</wp:comment_date>
			<wp:comment_date_gmt>2010-09-15 16:30:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[是该向他们学习
只是大多数人让生命放纵在男欢女爱、游戏厮杀中了]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>10</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1284568223]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[893652282]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[893727879]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12</wp:comment_id>
			<wp:comment_author><![CDATA[Mark Fu]]></wp:comment_author>
			<wp:comment_author_email>fsw90628@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>58.185.237.50</wp:comment_author_IP>
			<wp:comment_date>2010-09-22 11:32:07</wp:comment_date>
			<wp:comment_date_gmt>2010-09-22 03:32:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<blockquote cite="男欢女爱、游戏厮杀">哈哈, 斯哥好]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>11</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1285126327]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[893727879]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[895280198]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>POJ 1877</title>
		<link>http://allenlsy.com/2010/08/POJ-1877/</link>
		<pubDate>Fri, 27 Aug 2010 06:25:20 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=239</guid>
		<description></description>
		<content:encoded><![CDATA[题意：山上下大雨，保证高处的水一定会流到地处（也就是说不会出现高处的小盆地积水的现象），给你地图和积水量，求出水面高度和水面覆盖面积比例。

思路：这是world final 99的题目。对所有格子按照低到高排序，记得在排序前，加入两个虚拟格子，高度分别为负无穷和正无穷。按区间段分别计算水面高度。我得到的式子是，水面高度 = （总积水量- 水面下的积水量）/积水格子总数。这是看计算出来的水面高度是否合理。比如按高度排序后是2，3，7，9，12，25。你就假设水面高度在(3,7]区间，带入式子如果算出来水面高度是10，肯定就不合理了。

统计：2Y, 47ms。错了一次，因为没考虑到水面高度可能低于0的情况。

 
<pre class="lang:c++ decode:true " >#include &lt;iostream&gt;
#include &lt;algorithm&gt;
#define F(i,a,b) for (int i=a;i&lt;=b;i++)
using namespace std;

int a[1000];

int main()
{
    int m, n;
    double res;
    int t = 0;
    while (scanf("%d%d", &amp;m, &amp;n) &amp;&amp; !(m==0 &amp;&amp; n == 0) )
    {
        t++;
        int total = 0;
        double sum = 0;
        a[0] = 0x80000000;
        F(i,1,m)
            F(j,1,n)
                scanf("%d", &amp;a[++total]);
        a[++total] = 0x7fffffff;
        scanf("%lf", &amp;res);
        res/=100.0;
        sort(&amp;a[0], &amp;a[total+1]);

        if (res == 0)
        {
            printf("Region %d\nWater level is %.2lf meters.\n%.2lf percent of the region is under water.\n\n",
                    t, (double)a[1], 0 );
            continue;
        }

        F(i,0,total-1)
        {
            double h = (res+sum)/i;
            if (h&gt;a[i] &amp;&amp; h&lt;=a[i+1])
            {
                printf("Region %d\nWater level is %.2lf meters.\n%.2lf percent of the region is under water.\n\n",
                    t, h, (double)i/(total-1)*100 );
                break;
            }
            sum+=a[i+1];
        }
    }
    return 0;
}</pre> 
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>239</wp:post_id>
		<wp:post_date>2010-08-27 14:25:20</wp:post_date>
		<wp:post_date_gmt>2010-08-27 06:25:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>POJ-1877</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="poj-bei-da-ti-ku"><![CDATA[POJ 北大题库]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1282890320]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1282890320]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391530]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1301247463]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>POJ 1990</title>
		<link>http://allenlsy.com/2010/08/POJ-1990/</link>
		<pubDate>Fri, 27 Aug 2010 11:22:26 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=241</guid>
		<description></description>
		<content:encoded><![CDATA[题意：牛的听力为v，两头牛i,j之间交流，需要max(v[i], v[j])*dist(i,j)的音量。应该说，题意是说，v[i]越小，听力越好。
求所有牛交谈时叫声总和∑(max(v[i],v[j])*abs(dist[j]-dist[i]) ) )
思路：先对牛按照v从小到大排序。对于牛i，它与比他听力还小的牛之间交谈需要音量都是v[i]，再乘以之间的距离就可以了。在排好序后，假设：
count[i]：比i听力小的且x坐标比第i头牛小的牛总数
total[i]：count[i]中那些牛的x坐标总和
alltotal：表示所有比第i头牛听力小的牛的总数的话
那么，原题要求的式子就成了
∑( v[i] * 所有比i听力小的牛到i的总距离 ）
=∑( v[i] * (count[i]*x[i] - total + alltotal - total - (i - count[i] - 1) * x[i] ) )
其中，count[i]*x[i] - total表示所有比i听力小且在它左边的牛们到i的距离总和， alltotal - total - (i - count[i] - 1) * x[i] ) 表示所有比i听力小且在它右边的牛们到i的距离总和。这个有点难理解，自己画个图试试看。
剩下的关键就在，如何求count[i]和total[i]更快。因为如果排好序后是扫一遍所有牛的坐标的话，时间复杂度就是n^2了，不行。所以想到了树状数组。树状数组用于动态的求一个数组前i个数的总和。
所以，把count作为一个树状数组，如果在坐标x上有一头牛，那么count[x] = 1。这样求i之前有多少头牛，就是count(i)的一个查询。把total同样作为一个树状数组，如果坐标x上有一头牛，那么total[x] = x。这是因为total数组表示的是距离。这样求i之前听力小于v[i]且在i左边的牛总数，就是total(i)的查询。

WA了好几次，发现应该把树状数组里面的查询函数返回值也设成long的才行。冤死了。

感谢一下两篇关于本题以及树状数组的文章：
<a href="http://old.blog.edu.cn/user3/FeliciaCrazy/archives/2007/1614432.shtml">http://old.blog.edu.cn/user3/FeliciaCrazy/archives/2007/1614432.shtml</a>
<a href="http://blog.csdn.net/shunan/archive/2007/03/25/1540522.aspx">http://blog.csdn.net/shunan/archive/2007/03/25/1540522.aspx</a>

统计：47ms

 
<pre class="lang:c++ decode:true " >#include &lt;iostream&gt;
#include &lt;algorithm&gt;
#define F(i,a,b) for (int i=a;i&lt;=b;i++)
using namespace std;

struct treearray
{
	long c[20002], n;
	treearray() {}
	treearray(int _n) { clear();n = _n; }
	void clear()
	{
		 memset(c,0,sizeof(c));
	}
	int lowbit(int x)
	{
		 return x&amp;(x^(x-1));
	}
	void modify(int i,int d)
	{
		 while (i&lt;=n)
		 {
			c[i]+=d;
			i+=lowbit(i);
		 }
	}
	long q(int i)
	{
		 long sum;
		 for (sum=0;i&gt;0;i-=lowbit(i))
			sum+=c[i];
		 return sum;
	}
}Total, Count;

struct Node
{
    int v, x;
    Node() {}
    bool operator &lt; (const Node&amp; b) const
    { return v &lt; b.v ; }
};

Node node[20002];
unsigned long long  allTotal;

int main()
{
    int n;
    unsigned long long sum = 0;
    Total=treearray(20002);
    Count=treearray(20002);

    scanf("%d", &amp;n);
    F(i,1,n)
        scanf("%d%d", &amp;node[i].v, &amp;node[i].x);

    sort(&amp;node[1], &amp;node[n+1]);

    F(i,1,n)
    {
        int x = node[i].x;
        sum+=node[i].v * ( Count.q(x)*x -Total.q(x) +allTotal - Total.q(x) - (i-Count.q(x)-1)*x );
        Count.modify(x, 1);
        Total.modify(x, x);
        allTotal+=x;
    }
    printf("%lld\n", sum);

    return 0;
}</pre> 
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>241</wp:post_id>
		<wp:post_date>2010-08-27 19:22:26</wp:post_date>
		<wp:post_date_gmt>2010-08-27 11:22:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>POJ-1990</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="poj-bei-da-ti-ku"><![CDATA[POJ 北大题库]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1282908146]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1282908146]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391531]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1297051362]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>POJ 1111</title>
		<link>http://allenlsy.com/2010/08/POJ-1111/</link>
		<pubDate>Fri, 27 Aug 2010 12:50:21 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=243</guid>
		<description></description>
		<content:encoded><![CDATA[题意：给一张地图，X区域是八方向连接的。现在给出一个起始点，求该点所在X区域的周长。

思路：BFS。如果一开始就不在X点上，则直接输出0。否则，开始BFS。如果一个X点的四方向相邻方格不在地图内或者 不是X，则周长+1。

统计：1Y, oms

 
<pre class="lang:c++ decode:true " >#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;algorithm&gt;
#define F(i,a,b) for (int i=a;i&lt;=b;i++)
using namespace std;

struct Point
{
    int x, y;
    Point() {}
    Point(int _x, int _y) { x = _x, y = _y; }
};

string map[22];
int res, move[8][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1} },
    m, n;
Point Q[402];
bool mk[22][22];

bool inside(int x, int y)
{
    return( 0&lt;=x &amp;&amp; x&lt;m &amp;&amp; 0&lt;=y &amp;&amp; y&lt;n);
}

void bfs(int startx, int starty)
{
    int now = 1, last = 1;
    Q[now] = Point(startx, starty);
    memset(mk, 0, sizeof(mk) );
    mk[startx][starty] = true;
    while (now &lt;= last)
    {
        F(i,0,7)
        {
            int x = Q[now].x, y = Q[now].y;
            int newx = x+move[i][0], newy = y+move[i][1];
            if (inside(newx, newy) &amp;&amp; !mk[newx][newy] &amp;&amp; map[newx][newy]=='X')
            {
                mk[newx][newy] = true;
                Q[++last ] = Point(newx, newy);
            }
        }

        F(i,0,3)
        {
            int x = Q[now].x, y = Q[now].y;
            int newx = x+move[i][0], newy = y+move[i][1];

            if (!inside(newx, newy) || map[newx][newy] != 'X')
                res++;
        }
        now++;
    }
}

int main()
{
    int x, y;

    while ( scanf("%d%d%d%d\n", &amp;m, &amp;n, &amp;x, &amp;y) &amp;&amp; !(m == 0 &amp;&amp; n == 0) )
    {
        res = 0;
        x--, y--;
        F(i,0,m-1)
            getline(cin, map[i]);
        if (map[x][y] == '.')
        {
            cout &lt;&lt; 0 &lt;&lt; endl;
            continue;
        }

        bfs(x, y);
        cout &lt;&lt; res &lt;&lt; endl;
    }

    return 0;
}</pre> 
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>243</wp:post_id>
		<wp:post_date>2010-08-27 20:50:21</wp:post_date>
		<wp:post_date_gmt>2010-08-27 12:50:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>POJ-1111</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="poj-bei-da-ti-ku"><![CDATA[POJ 北大题库]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1282913421]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391532]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1463710503]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>POJ 2528</title>
		<link>http://allenlsy.com/2010/08/POJ-2528/</link>
		<pubDate>Sun, 29 Aug 2010 08:01:12 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=245</guid>
		<description></description>
		<content:encoded><![CDATA[题意：有n张纸，贴在一排格子上，每张纸帖从i到j的连续格子上。现在给出帖的顺序和每张纸的起始终点，求最后有多少张纸可以被看到。可被看到是指有一部分或者全部都能被看到。
思路：离散化。先把所有的始终点排序，并去掉重复的。这里用到了STL中的unique函数。然后，就相当于得到了若干个区间，而且每个区间只可能某一同一张纸。这就是离散化精妙的地方。然后再标记各区间，最后统计有多少张不同的纸就可以了。
统计：错了几次，因为没有考虑周全只贴在一个格子的情况。比如数据是有一张纸贴在10 10。那么其实按照我程序里面的意思，pos数组存放纸（也就是题目中的海报）的数据，这时应该存为起始点10，结束点11。这就是为什么WA了几次。
本题数据的下载地址：http://ugweb.cs.ualberta.ca/~acpc/2003/TESTS.tgz

 
<pre class="lang:c++ decode:true " >#include &lt;iostream&gt;
#include &lt;algorithm&gt;
#define F(i,a,b) for (int i=a;i&lt;=b;i++)
using namespace std;
const int maxn = 10000001;
struct Node
{
    int s, t, c;
    Node() {}
};

int a[20002], rank[maxn];
Node pos[10002], wall[20001];

int main()
{
    int T, n;

    scanf("%d", &amp;T);
    F(t,1,T)
    {
        scanf("%d", &amp;n);
        memset(wall, 0, sizeof(wall));
        memset(rank, 0, sizeof(rank) );
        int total = 0;
        F(i,1,n)
        {
            scanf("%d%d", &amp;pos[i].s, &amp;pos[i].t);
            a[++total] = pos[i].s;
            a[++total] = pos[i].t+1;
            pos[i].t++;
        }
        sort(&amp;a[1], &amp;a[total+1]);
        int end = unique(&amp;a[1], &amp;a[total+1]) - a - 1;
        total = 0;
        F(i,1,end)
            rank[ a[i] ] = i;

        //build wall
        F(i,1,end-1)
            wall[i].s = a[i],
            wall[i].t = a[i+1];

        // cover
        F(i,1,n)
        {
            int s = pos[i].s;
            int now = rank[s];
            while (wall[now].s != pos[i].t &amp;&amp; now &lt;=end-1)
            {
                wall[now].c = i;
                now++;
            }
        }
        total = 0;
        F(i,1,end-1)
            if (wall[i].c!=0)
                a[++total] = wall[i].c;
        sort(&amp;a[1], &amp;a[total+1]);
        end = unique(&amp;a[1], &amp;a[total+1]) - a - 1;
        printf("%d\n", end);
    }

    return 0;
}</pre> 
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>245</wp:post_id>
		<wp:post_date>2010-08-29 16:01:12</wp:post_date>
		<wp:post_date_gmt>2010-08-29 08:01:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>POJ-2528</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="poj-bei-da-ti-ku"><![CDATA[POJ 北大题库]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabbe2_published</wp:meta_key>
			<wp:meta_value><![CDATA[1283068875]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1283068875]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391533]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>POJ 2239</title>
		<link>http://allenlsy.com/2010/09/POJ-2239/</link>
		<pubDate>Sun, 05 Sep 2010 15:29:24 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=253</guid>
		<description></description>
		<content:encoded><![CDATA[题意：给出n个课程的上课时间，求最多能选多少门课
思路：二分图匹配。左边为n门课，右边为上课时间。此题中一共有84个上课时间。5分钟套模板过。
统计：32ms, 1y
 
<pre class="lang:c++ decode:true " >#include &lt;iostream&gt;
#define F(i,a,b) for (int i=a;i&lt;=b;i++)
#define MS(x) memset(x, 0, sizeof(x) )
const int maxn = 1002;
using namespace std;

struct Hungrian
{
    bool mk[maxn], map[maxn][maxn];
    // n: left side nodes   m: right side nodes   match: result
    int match[maxn], n, m;

    Hungrian()
    {

        MS(map);
    }

    bool dfs(int x) //寻找增广链,true表示找到
    {
        for (int i=1;i&lt;=m;i++)
        {
            if ( map[x][i] &amp;&amp; !mk[i] )
            {
                mk[i]=true;
                int t=match[i];
                match[i]=x;
                if (t==0 || dfs(t))
                    return true;
                match[i]=t;
            }
        }
        return false;
    }

    int run() // return max match number
    {
    	MS(mk);
        MS(match);

        int max_=0;
        F(i,1,n)
        {
            memset(mk, false, sizeof(mk));
            if ( dfs(i) )
                max_++;
        }
        return max_;
    }
};

Hungrian tool;

int main()
{
	int n, m;

	while (scanf("%d",&amp;n) != EOF)
	{
		MS(tool.map);
		F(i,1,n) // course
		{
			scanf("%d", &amp;m);
			F(j,1,m) // time
			{
				int a, b;
				scanf("%d%d", &amp;a, &amp;b);
				tool.map[i][ (a-1)*12+b ] = true;
			}
		}
		tool.n = n, tool.m = 84;
		cout &lt;&lt; tool.run() &lt;&lt; endl;
	}

	return 0;
}</pre> 
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>253</wp:post_id>
		<wp:post_date>2010-09-05 23:29:24</wp:post_date>
		<wp:post_date_gmt>2010-09-05 15:29:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>POJ-2239</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bipartite"><![CDATA[bipartite]]></category>
		<category domain="category" nicename="graph-theory-tu-lun"><![CDATA[Graph Theory]]></category>
		<category domain="category" nicename="poj-bei-da-ti-ku"><![CDATA[POJ 北大题库]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1283700567]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1283700567]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391534]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>POJ 1546 进制转换</title>
		<link>http://allenlsy.com/2010/09/POJ-1546-jin-zhi-zhuan-huan/</link>
		<pubDate>Sun, 05 Sep 2010 16:05:02 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=255</guid>
		<description></description>
		<content:encoded><![CDATA[<p>题意：n进制数转m进制数<br /> 思路：就好像自己开发一个API一样。写to10和toRadix函数，长除法思想就可以了。</p><pre class="lang:c++ decode:true ">#include &lt;iostream&gt;
#include &lt;algorithm&gt;
#include &lt;string&gt;
#define F(i,a,b) for (int i=a;i&lt;=b;i++)
#define FD(i,a,b) for (int i=a;i&gt;=b;i--)
using namespace std;

int to10(int radix, string s)
{
	int len = s.length(), t;
	int ret = 0, base = 1;
	FD(i,len-1, 0)
	{

		if (s[ i ] &gt; 57)
			t = s[ i ] - 55;
		else
			t = s[ i ] - 48;
		ret += base * t;
		base *= radix;
	}
	return ret;
}

string toRadix(int radix, int n)
{
	int r, len = 0, q;
	char chr[ 100 ];
	while (n != 0)
	{
		r = n % radix;
		if (r &lt; 10)
			chr[ len++ ] = r + 48;
		else
			chr[ len++ ] = r + 55;
		n /= radix;
	}
	chr[ len ] = '\0';
	reverse(&amp;chr[ 0 ], &amp;chr[ len ]);
	string ret(chr);
	return ret;
}

int main()
{
	freopen("in.txt", "r", stdin);
	string str;
	int a, b;
	while (cin &gt;&gt; str &gt;&gt; a &gt;&gt; b)
	{
		string res = toRadix(b, to10(a, str));
		if (res.length() &lt;=7)
		{
			F(i,1,7-res.length())
				cout &lt;&lt; " ";
			cout &lt;&lt; res &lt;&lt; endl;
		}
		else
			cout &lt;&lt; "  ERROR\n";
	}

	return 0;
}</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>255</wp:post_id>
		<wp:post_date>2010-09-06 00:05:02</wp:post_date>
		<wp:post_date_gmt>2010-09-05 16:05:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>POJ-1546-jin-zhi-zhuan-huan</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="basic-algo-ji-ben-suan-fa"><![CDATA[Basic Algorithms]]></category>
		<category domain="category" nicename="poj-bei-da-ti-ku"><![CDATA[POJ 北大题库]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1283702703]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1283702703]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391535]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>wpsd_autopost</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1653459927]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>POJ 2378</title>
		<link>http://allenlsy.com/2010/09/POJ-2378/</link>
		<pubDate>Mon, 06 Sep 2010 15:08:50 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=257</guid>
		<description></description>
		<content:encoded><![CDATA[题意：给一个树状图，有n个点。求出，去掉哪个点，使得剩下的每个连通子图中点的数量不超过n/2。如果有很多这样的点，就按升序输出。n&lt;=10000
思路：输入图后，先DFS建立树。对于节点x，记a[x]为包含自己在内x的子树中的结点个数。所以，如果一个点可以被去掉，那么n-a[x]，以及所有a[j]（j是x的子树的根节点）都不大于n/2。另一个问题在于n&lt;=10000，所以不能建立邻接矩阵， 而是用vector。在我的程序中，在dfs时已经标记了每个点是否能作为结果res。最后顺序输出就行了。
统计：1Y, 47ms

 
<pre class="lang:c++ decode:true " >#include &lt;iostream&gt;
#include &lt;vector&gt;
#define F(i,a,b) for (int i=a;i&lt;=b;i++)
#define MS(x) memset(x, 0, sizeof(x) )
#define PB push_back
using namespace std;
const int maxn = 10002;
bool mk[maxn], res[maxn];
int a[maxn], half, n;
vector&lt;int&gt; v[maxn];

int dfs(int x)
{
	int len = v[x].size();
	a[x] = 1;
	mk[x] = true;
	bool ok = true;
	F(i,0,len-1)
	{
		int j = v[x][i];
		if (!mk[j])
		{
			int temp = dfs(j);
			if (temp&gt;half)
				ok = false;
			a[x]+=temp;
		}
	}
	if (ok &amp;&amp; n-a[x] &lt;=half)
		res[x] = true;
	return a[x];
}


int main()
{
	scanf("%d", &amp;n);
	F(i,1,n-1)
	{
		int a,b;
		scanf("%d%d", &amp;a, &amp;b);

		v[a].PB(b);
		v[b].PB(a);
	}

	half = n/2;
	mk[1] = true;
	dfs(1);

	F(i,1,n)
		if (res[i])
			cout &lt;&lt; i &lt;&lt; endl;

	return 0;
}</pre> 
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>257</wp:post_id>
		<wp:post_date>2010-09-06 23:08:50</wp:post_date>
		<wp:post_date_gmt>2010-09-06 15:08:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>POJ-2378</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="poj-bei-da-ti-ku"><![CDATA[POJ 北大题库]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1283785733]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1283785733]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391536]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1464278263]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>POJ 2828</title>
		<link>http://allenlsy.com/2010/09/POJ-2828/</link>
		<pubDate>Wed, 08 Sep 2010 09:13:09 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=260</guid>
		<description></description>
		<content:encoded><![CDATA[题意：将一些数字按顺序，插入到数列的制定位置的后面。多次执行后，求最终的序列。
思路：注意到，最后一次添加的数v如果放到了pos位置的后面，那它最终一定在pos+1这个位置。所以考虑倒着插入这些数。
当我们动态插入数字v到pos后面时，实际要插入的位置，是一个保证前面已经插入了pos个数字的最小位置pos2。假如f[x]表示在实际位置x前面有多少个已经插入，则只要x - f[x] = pos就可以放在x位置上了。
最终决定使用线段树的数据结构。f[x]表示的，是x所代表的线段（区间）内已经插入的数字个数。我的程序中，用sum表示在x区间之前还有多少数已经插入，所以最后的判断条件是 x - f[x] - sum = pos。实在没看懂的，可以跟踪一次程序就理解了。
这里提到一个discuss里面问的比较多的问题，为什么线段树的大小要开到200000*3才够。不是规模为n的线段树，开到n*2就够了吗？
n*2的建树方法，适用于动态建树，就是说没有任何一个节点被浪费的建法。而这里我使用的，或者说大多数人使用的这种用x*2表示左子树 x*2+1表示右子树的建法，是不能只开到n*2的，因为有写节点没用到。
举个列子来说，假如线段树的n = 11，你认为应该建树为22或者23，保守点。现在看图。
<a href="http://allenlsy.files.wordpress.com/2010/09/untitled.jpg"><img src="http://allenlsy.files.wordpress.com/2010/09/untitled.jpg" alt="" title="Untitled" width="478" height="296" class="alignnone size-full wp-image-261" /></a>
红色的标记是节点编号，黑色的是区间。
如果你要找[9,9]的区间，就会出现RTE了。
那么开多少才正确呢？
其实，应该是 2^ ( ceiling( log2(n) )+1 )， 即2的log2(n)的上取整加1次幂。
这道题目，用此方法计算，得到实际需要空间大小524288，我开了524300，AC了

 
<pre class="lang:c++ decode:true " >#include &lt;iostream&gt;
#define F(i,a,b) for (int i=a;i&lt;=b;i++)
#define FD(i,a,b) for (int i=a;i&gt;=b;i--)
using namespace std;
const int maxn = 524300;

int f[maxn*10], a[maxn], pos[maxn], v[maxn];

void insert(int pos, int v )
{
	int root = 1, left = 1, right = maxn, mid, chi, sum = 0;
	while (left &lt; right)
	{
		f[root]++;
		mid = (left + right ) / 2, chi = root * 2;
		if (mid - sum - f[chi] &gt; pos)
		{
			right = mid;
			root = chi;
		}
		else
		{
			left = mid + 1 ;
			root = chi + 1;
			sum+=f[chi];
		}

	}
	f[root]++;
	a[right] = v;
}

int main()
{
	int n;

	while (scanf("%d", &amp;n)!=EOF)
	{
		memset(f, 0, sizeof(f) );
		F(i,1,n)
			scanf("%d%d", &amp;pos[i], &amp;v[i]);
		FD(i,n,1)
			insert(pos[i], v[i]);
		F(i,1,n)
			printf("%d ", a[i]);
		printf("\n");
	}

	return 0;
}</pre> 
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>260</wp:post_id>
		<wp:post_date>2010-09-08 17:13:09</wp:post_date>
		<wp:post_date_gmt>2010-09-08 09:13:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>POJ-2828</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="data-structure-shu-ju-jie-gou"><![CDATA[Data Structure]]></category>
		<category domain="post_tag" nicename="interval-tree"><![CDATA[interval tree]]></category>
		<category domain="category" nicename="poj-bei-da-ti-ku"><![CDATA[POJ 北大题库]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1283937193]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1283937193]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391537]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1296204547]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>POJ 1195</title>
		<link>http://allenlsy.com/2010/09/POJ-1195/</link>
		<pubDate>Wed, 15 Sep 2010 01:46:58 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=265</guid>
		<description></description>
		<content:encoded><![CDATA[题意：在一个二维数组中，动态更新里面的某些值。动态的询问（l,b,r,t）之内的值的和。（left, base, right, top）
思路：为此专门学习了一下二维树状数组。如果明白了一微树状数组的原理，其实二维也很好理解。那modify函数为例，一维时，是更新c[x]及其后继节点的值，这些值最后在查询时要累加。二维的modify(x, y)，c[x][y]记录的是以原点和(x, y)做的矩形中的值的和，比如说c[x][y] = ∑( c[a<sub>i</sub>][b<sub>i</sub>] )，c[a<sub>i</sub>][b<sub>i</sub>]是其中的子矩形的值的和。

WA了很多次，昨晚调试到2点还没弄出来。今早再检查 ，终于发现计算总和时x,y坐标写反了。

统计： 569ms

 
<pre class="lang:c++ decode:true " >#include &lt;iostream&gt;
using namespace std;
const int N = 1026;
struct treearray
{
	treearray()
	{
		memset(c, 0, sizeof(c));
	}
	void init()
	{
		memset(c, 0, sizeof(c));
	}

	int c[ N ][ N ], n;
	int lowbit(int x)
	{
		return x &amp; (-x);
	}
	void modify(int x, int y, int v)
	{
		for (int i = x; i &lt;= n; i += lowbit(i))
			for (int j = y; j &lt;= n; j += lowbit(j))
				c[ i ][ j ] += v;
	}

	int sum(int x, int y)
	{
		int ret = 0;
		for (int i = x; i &gt; 0; i -= lowbit(i))
			for (int j = y; j &gt; 0; j -= lowbit(j))
				ret += c[ i ][ j ];

		return ret;
	}
} tool;

int main()
{
	int x, y, v, l, r, b, t, n;

	scanf("%d", &amp;n);
	while (scanf("%d", &amp;n) != EOF)
	{
		tool.init();
		tool.n = n;

		int order;
		while (scanf("%d", &amp;order) &amp;&amp; order != 3 &amp;&amp; order != 0)
		{
			switch (order)
			{
			case 1:
				scanf("%d%d%d", &amp;x, &amp;y, &amp;v);
				tool.modify(x + 1, y + 1, v);
				break;
			case 2:
				scanf("%d%d%d%d", &amp;l, &amp;b, &amp;r, &amp;t);
				printf("%d\n", tool.sum(r + 1, t + 1) - tool.sum(r + 1, b)
						- tool.sum(l, t + 1) + tool.sum(l, b));
				break;
			}
		}
	}
	return 0;
}</pre> 
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>265</wp:post_id>
		<wp:post_date>2010-09-15 09:46:58</wp:post_date>
		<wp:post_date_gmt>2010-09-15 01:46:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>POJ-1195</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="data-structure-shu-ju-jie-gou"><![CDATA[Data Structure]]></category>
		<category domain="category" nicename="poj-bei-da-ti-ku"><![CDATA[POJ 北大题库]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1284515219]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1284515219]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391539]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>POJ 2886</title>
		<link>http://allenlsy.com/2010/09/POJ-2886/</link>
		<pubDate>Wed, 22 Sep 2010 17:30:35 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">https://allenlsy.wordpress.com/2010/09/23/poj-2886-2/</guid>
		<description></description>
		<content:encoded><![CDATA[<p><strong>题意</strong>：n个人顺时针坐成一圈，每个人手里一个数字。从第k个人开始，这个人先离开，然后他的顺时针方向的下一个人拿着这个数字，从1开始报数，报到这个数字的人又离开，一直这样重复。第x个离开的人，得到f(x)根蜡烛。f(x)是x的约数个数。求最后谁得到的蜡烛最多。</p>  <p>这题可够绕的</p>  <p><strong>思路</strong>：学到了两个东西。</p>  <p>一个叫做反素数。如果一个数x，对于任意0&lt;y&lt;x，满足f(x)&gt;f(y)，则x是一个反素数。显然，我们如果知道了总人数n，就很容易知道得到最多的蜡烛数是多少了，就是不大于n的最大的一个反素数。我的程序中，是直接算的，有些网友是用的打表。</p>  <p>然后，我们需要知道，到底谁是这第x个离开的人。</p>  <p>这里用到了树状数组。</p>  <p>假如sum(now)表示第一个到第now个座位的闭区间上，有多少人还没离开。第x个座位上的人拿着的数字是num。起初一共有total个人，此时剩下了n个人。</p>  <p>这里，对num有一个处理，如果num&gt;=0，则num = (num - 1)%n+1。而如果num&lt;0，则num = n+1 +( num+1)%n-1)。这是因为要考虑num&gt;n或者num&lt;-n的情况。</p>  <p>如果sum(total) – sum(now) &gt;= num，表示此时第now个座位到最后一个座位上（即now左边）的人数已经不足以报出num了，则在第1个座位到第now-1个座位间的第num-( sum(total)-sum(now) )个人报了num，否则，如果now左边的人数充足，则是now左边的第sum(now)+num个人报了num。想想为什么。</p>  <p>最后一个问题是，如何知道一个从第x座位到第y座位上的第v个人呢？</p>  <p>这就是我的bsearch(left, right, v)这个函数解决的问题了。因为它是用的二分查找的思想。是在树状数组中二分的找满足sum(z)=v的第一个 z。</p>  <p>统计：19820k, 2079ms, 1Y！惊喜</p>  <p>&#160;</p>  <div style="display:inline;float:none;margin:0;padding:0;" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:0971037c-30f6-4a57-b2fd-79683d6a0c22" class="wlWriterEditableSmartContent"> <div style="border:#000080 1px solid;color:#000;font-family:'Courier New', Courier, Monospace;font-size:10pt;"> <div style="background:#000080;color:#fff;font-family:Verdana, Tahoma, Arial, sans-serif;font-weight:bold;padding:2px 5px;">POJ 2886</div> <div style="background:#ddd;overflow:auto;"> <ol style="background:#ffffff;margin:0 0 0 2.5em;padding:0 0 0 5px;"> <li>#include &lt;iostream&gt;</li> <li style="background:#f3f3f3;">#include &lt;string&gt;</li> <li><span style="color:#0000ff;">#define</span> F(i,a,b) for (int i=a;i&lt;=b;i++)</li> <li style="background:#f3f3f3;"><span style="color:#0000ff;">using</span> <span style="color:#0000ff;">namespace</span> std;</li> <li><span style="color:#0000ff;">const</span> <span style="color:#0000ff;">int</span> N = 500002;</li> <li style="background:#f3f3f3;">&nbsp;</li> <li><span style="color:#0000ff;">int</span> people[N],n, f[N], k, card[N];</li> <li style="background:#f3f3f3;"><span style="color:#0000ff;">string</span> name[N];</li> <li>&nbsp;</li> <li style="background:#f3f3f3;"><span style="color:#0000ff;">int</span> lowbit(<span style="color:#0000ff;">int</span> x)</li> <li>{</li> <li style="background:#f3f3f3;">     <span style="color:#0000ff;">return</span> x&amp;(-x);</li> <li>}</li> <li style="background:#f3f3f3;">&nbsp;</li> <li><span style="color:#0000ff;">void</span> modify(<span style="color:#0000ff;">int</span> i,<span style="color:#0000ff;">int</span> d)</li> <li style="background:#f3f3f3;">{</li> <li>     <span style="color:#0000ff;">while</span> (i&lt;=N)</li> <li style="background:#f3f3f3;">     {</li> <li>        people[i] += d;</li> <li style="background:#f3f3f3;">        i+=lowbit(i);</li> <li>     }</li> <li style="background:#f3f3f3;">}</li> <li>&nbsp;</li> <li style="background:#f3f3f3;"><span style="color:#0000ff;">int</span> sum(<span style="color:#0000ff;">int</span> i)</li> <li>{</li> <li style="background:#f3f3f3;">     <span style="color:#0000ff;">int</span> ret;</li> <li>     <span style="color:#0000ff;">for</span> (ret=0{i&gt;0;i-=lowbit(i))</li> <li style="background:#f3f3f3;">        ret+=people[i];</li> <li>     <span style="color:#0000ff;">return</span> ret;</li> <li style="background:#f3f3f3;">}</li> <li>&nbsp;</li> <li style="background:#f3f3f3;"><span style="color:#0000ff;">int</span> bsearch(<span style="color:#0000ff;">int</span> left, <span style="color:#0000ff;">int</span> right, <span style="color:#0000ff;">int</span> v)</li> <li>{</li> <li style="background:#f3f3f3;">    <span style="color:#0000ff;">while</span> (left&lt;right)</li> <li>    {</li> <li style="background:#f3f3f3;">        <span style="color:#0000ff;">int</span> mid = (left+2ight)/2;</li> <li>        <span style="color:#0000ff;">if</span> (sum(mid)&lt;v)</li> <li style="background:#f3f3f3;">            left = mid+1;</li> <li>        <span style="color:#0000ff;">else</span></li> <li style="background:#f3f3f3;">            right = mid;</li> <li>    }</li> <li style="background:#f3f3f3;">&nbsp;</li> <li>    <span style="color:#0000ff;">return</span> left;</li> <li style="background:#f3f3f3;">}</li> <li>&nbsp;</li> <li style="background:#f3f3f3;"><span style="color:#0000ff;">int</span> main()</li> <li>{</li> <li style="background:#f3f3f3;">    <span style="color:#0000ff;">char</span> str[15];</li> <li>&nbsp;</li> <li style="background:#f3f3f3;">    scanf(<span style="color:#a31515;">&quot;%d%d&#092;n&quot;</span>, &amp;n, &amp;k);</li> <li>    F(i,1,n)</li> <li style="background:#f3f3f3;">    {</li> <li>        scanf(<span style=bcolor:#a31515;">&quot;%s%d&quot;</span>, str, &amp;card[i]);</li> <li style="background:#f3f3f3;">        name[i] = <span style="color:#0000ff;">string</span>(str);</li> <li>        modify(i, 1);</li> <li style="background:#f3f3f3;">    }</li> <li>    <span style="color:#0000ff;">int</span> total = n;</li> <li style="background:#f3f3f3;">    <span style="color:#008000;">// init</span></li> <li>    <span style="color:#0000ff;">int</span> Max = 0, pos = 0;</li> <li style="background:#f3f3f3;">    F(i,1,n)</li> <li>        <span style="color:#0000ff;">for</span> (<span style="color:#0000ff;">int</span> j = i;j&lt;=n;j+=i)</li> <li style="background:#f3f3f3;">        {</li> <li>            f[j]++;</li> <li style="background:#f3f3f3;">            <span style="color:#0000ff;">if</span> (f[j]&gt;Max)</li> <li>            {</li> <li st9le="background:#f3f3f3;">                Max = f[i];</li> <li>                pos = j;</li> <li style="background:#f3f3f3;">            }</li> <li>        }</li> <li style="background:#f3f3f3;">&nbsp;</li> <li>    <span style="color:#0000ff;">int</span> now = k;</li> <li style="background:#f3f3f3;">    F(round, 1, pos-1)</li> <li>    {</li> <li style="background:#f3f3f3;">        modify(now, -1);</li> <li>        n--;</li> <li style="background:#f3f3f3;">&nbsp;</li> <li>        <span style="color:#0000ff;">int</span> num;</li> <li style="background:#f3f3f3;">        <span style="color:#0000ff;">if</span> (card[now]&gt;=0)</li> <li>            num = (card[now]-1)%n+1;</li> <li style="background:#f3f3f3;">        <span style="color:#0000ff;">else</span></li> <li>            num = n+1 +( (card[now]+1)%n-1);</li> <li style="background:#f3f3f3;">        <span style="color:#008000;">// count the one out</span></li> <li>        <span style="color:#008000;">// people sit on the left</span></li> <li style="background:#f3f3f3;">        <span style="color:#0000ff;">int</span> sumnow = sum(now), sumn = sum(total);</li> <li>&nbsp;</li> <li style="background:#f3f3f3;">        
<span style="color:#0000ff;">if</span> (sumn - sumnow &gt;= num)</li> <li>            now = bsearch(now, total, sumnow+num);</li> <li style="background:#f3f3f3;">        <span style="color:#0000ff;">else</span></li> <li>            now = bsearch(1, now, num-( sumn-sumnow ) );</li> <li style="background:#f3f3f3;">    }</li> <li>&nbsp;</li> <li style="background:#f3f3f3;">    cout &lt;&lt; name[now] &lt;&lt; <span style="color:#a31515;">&quot; &quot;</span> &lt;&lt; Max &lt;&lt; endl;</li> <li>&nbsp;</li> <li style="background:#f3f3f3;">&nbsp;</li> <li>    <span style="color:#0000ff;">return</span> 0;</li> <li style="background:#f3f3f3;">}</li> </ol> </div> </div> </div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>291</wp:post_id>
		<wp:post_date>2010-09-23 01:30:35</wp:post_date>
		<wp:post_date_gmt>2010-09-22 17:30:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>POJ-2886</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="data-structure-shu-ju-jie-gou"><![CDATA[Data Structure]]></category>
		<category domain="category" nicename="poj-bei-da-ti-ku"><![CDATA[POJ 北大题库]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1285176636]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1285176636]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391540]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>近日的感想 &amp; 树状数组小结</title>
		<link>http://allenlsy.com/2010/09/jin-ri-de-gan-xiang-amp-shu-zhuang-shu-zu-xiao-jie/</link>
		<pubDate>Thu, 23 Sep 2010 14:57:13 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">https://allenlsy.wordpress.com/2010/09/23/%e8%bf%91%e6%97%a5%e7%9a%84%e6%84%9f%e6%83%b3-%e6%a0%91%e7%8a%b6%e6%95%b0%e7%bb%84%e5%b0%8f%%7%bb%93/</guid>
		<description></description>
		<content:encoded><![CDATA[昨晚做POJ 2886，其实做到中间时非常想放弃，非常烦躁。一度觉得自己不是干这行的料了。没有想到能很快AC。

<a href="http://allenlsy.files.wordpress.com/2010/09/12.jpg"><img style="display:inline;border:0;" title="1" src="http://allenlsy.files.wordpress.com/2010/09/1_thumb2.jpg" border="0" alt="1" width="644" height="484" /></a>

<a href="http://lh5.ggpht.com/_no9p2lRsxhk/TJts52Bez0I/AAAAAAAABuU/nPMNTygDeLQ/1.JPG" target="_blank">大图</a>

我的墙上一直贴着从北邮看来的一个帖子，文件夹里夹着一份长长的题单。如果能把它们都做完，编程能力肯定能提高很多。但是做一道题需要付出多少呢？对于一道水题，10-15分钟。对于一道难题，也许是一两个小时，也可能是一两天，看你怎么学了。如果像《ACM进阶之路》后面写的，每道题能再多看看别人的思路，联系其他相关知识多想想，时间肯定花的长。几百道题目，说起来倒是很轻松，觉得每天做个三五道没什么问题，真正付出行动时，自己的生活会受到冲击，心理会受到折磨。

人们总是仰视那些所谓的顶级高手们，觉得他们是天才。但是又常常忽略了他们付出的汗水。

ACRush楼天成至少做过5000道题目。据说当年ZOJ刚出来的时候，楼天成每天做20多道题目，几下就把ZOJ刷完了。我高中时的学长告诉我，每天早上他7点半去机房练习时，ACRRush已经上线了，他10点半走的时候ACRush还在。

FarmerJohn陈启峰，据说高中时，每天上课前打印几道题，下课了就抓紧时间想想，中午去网吧把题刷了，再打印几道题，下午想，等晚上回去再刷。他是这样一学期做300-400道题目，然后进入国家队的。

这些人，都被人们认为不一般。其根本原因是他们做到了一般人做不到的事。

每一点微小进步的背后，都是常人没法忍受的寂寞、痛苦。但是，日积跬步以至千里，道理大家都明白。贵在坚持。

言归正传，总结一下树状数组

树状数组的最重要应用，是动态的统计一个数组区间段上的和。查找复杂度和加入复杂度都是O(log n)。我们使用模板时，不需要关心它是怎么实现统计的，也不用真正的去操作数组，只要学会调用sum函数和modify函数。这里我把一般大家写的modify函数修改了一下，modify(i, d)表示的是将数组的第i个元素改变成d。a为实际数组，c为树状数组。这样方便使用。

另外把二维树状数组的代码也贴出来。
<div style="display:inline;float:none;margin:0;padding:0;" id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:7bf2a01a-c3c3-46f4-aea7-fb478f522f75" class="wlWriterEditableSmartContent">
<div style="border:#000080 1px solid;color:#000;font-family:'Courier New', Courier, Monospace;font-size:10pt;">
<div style="background:#000080;color:#fff;font-family:Verdana, Tahoma, Arial, sans-serif;font-weight:bold;padding:2px 5px;">Tree Array</div>
<div style="background:#ddd;overflow:auto;">
<ol style="background:#ffffff;margin:0 0 0 2.5em;padding:0 0 0 5px;">
<li><span style="color:#0000ff;">#include</span> <span style="color:#a31515;">&lt;iostream&gt;</span></li>
<li style="background:#f3f3f3;"><span style="color:#0000ff;">#define</span> F(i,a,b) <span style="color:#0000ff;">for</span> (<span style="color:#0000ff;">int</span> i=a;i&lt;=b;i++)</li>
<li><span style="color:#0000ff;">#define</span> N 1000</li>
<li style="background:#f3f3f3;"><span style="color:#0000ff;">using</span> <span style="color:#0000ff;">namespace</span> std;</li>
<li><span style="color:#0000ff;">struct</span> treearray</li>
<li style="background:#f3f3f3;">{</li>
<li>    <span style="color:#0000ff;">long</span> a[N], c[N], n;</li>
<li style="background:#f3f3f3;">    treearray() {}</li>
<li>    treearray(<span style="color:#0000ff;">int</span> _n) { clear();n = _n; }</li>
<li style="background:#f3f3f3;">    <span style="color:#0000ff;">void</span> clear()</li>
<li>    {</li>
<li style="background:#f3f3f3;">        memset(c,0,<span style="color:#0000ff;">sizeof</span>(c));</li>
<li>    }</li>
<li style="background:#f3f3f3;">    <span style="color:#0000ff;">int</span> lowbit(<span style="color:#0000ff;">int</span> x)</li>
<li>    {</li>
<li style="background:#f3f3f3;">        <span style="color:#0000ff;">return</span> x&amp;(x^(x-1));</li>
<li>    }</li>
<li style="background:#f3f3f3;">    <span style="color:#0000ff;">void</span> modify(<span style="color:#0000ff;">int</span> i,<span style="color:#0000ff;">int</span> d)</li>
<li>    {</li>
<li style="background:#f3f3f3;">        <span style="color:#0000ff;">int</span> v = d;</li>
<li>        d = d &#168;C a[i];</li>
<li style="background:#f3f3f3;">        a[i] = v;</li>
<li>        <span style="color:#0000ff;">while</span> (i&lt;=n)</li>
<li style="background:#f3f3f3;">        {</li>
<li>            c[i]+=d;</li>
<li style="background:#f3f3f3;">            i+=lowbit(i);</li>
<li>        }</li>
<li style="background:#f3f3f3;">    }</li>
<li>    <span style="color:#0000ff;">long</span> sum(<span style="color:#0000ff;">int</span> i)</li>
<li style="background:#f3f3f3;">    {</li>
<li>        <span style="color:#0000ff;">long</span> ret;</li>
<li style="background:#f3f3f3;">        <span style="color:#0000ff;">for</span> (ret=0;i&gt;0;i-=lowbit(i))</li>
<li>            ret+=c[i];</li>
<li style="background:#f3f3f3;">        <span style="color:#0000ff;">return</span> ret;</li>
<li>    }</li>
<li style="background:#f3f3f3;">}t;</li>
<li><span style="color:#0000ff;">struct</span> treearray2</li>
<li style="background:#f3f3f3;">{</li>
<li>    treearray2()</li>
<li style="background:#f3f3f3;">    {</li>
<li>        memset(c, 0, <span style="color:#0000ff;">sizeof</span>(c));</li>
<li style="background:#f3f3f3;">    }</li>
<li>    <span style="color:#0000ff;">void</span> init()</li>
<li style="background:#f3f3f3;">    {</li>
<li>        memset(c, 0, <span style="color:#0000ff;">sizeof</span>(c));</li>
<li style="background:#f3f3f3;">    }</li>
<li>    <span style="color:#0000ff;">int</span> c[ N ][ N ], n;</li>
<li style="background:#f3f3f3;">    <span style="color:#0000ff;">int</span> lowbit(<span style="color:#0000ff;">int</span> x)</li>
<li>    {</li>
<li style="background:#f3f3f3;">        <span style="color:#0000ff;">return</span> x &amp; (-x);</li>
<li>    }</li>
<li style="background:#f3f3f3;">    <span style="color:#0000ff;">void</span> modify(<span style="color:#0000ff;">int</span> x, <span style="color:#0000ff;">int</span> y, <span style="color:#0000ff;">int</span> v)</li>
<li>    {</li>
<li style="background:#f3f3f3;">        <span style="color:#0000ff;">for</span> (<span style="color:#0000ff;">int</span> i = x; i &lt;= n; i += lowbit(i))</li>
<li>            <span style="color:#0000ff;">for</span> (<span style="color:#0000ff;">int</span> j = y; j &lt;= n; j += lowbit(j))</li>
<li style="background:#f3f3f3;">                c[ i ][ j ] += v;</li>
<li>    }</li>
<li style="background:#f3f3f3;">    <span style="color:#0000ff;">int</span> sum(<span style="color:#0000ff;">int</span> x, <span style="color:#0000ff;">int</span> y)</li>
<li>    {</li>
<li style="background:#f3f3f3;">        <span style="color:#0000ff;">int</span> ret = 0;</li>
<li>        <span style="color:#0000ff;">for</span> (<span style="color:#0000ff;">int</span> i = x; i &gt; 0; i -= lowbit(i))</li>
<li style="background:#f3f3f3;">            <span style="color:#0000ff;">for</span> (<span style="color:#0000ff;">int</span> j = y; j &gt; 0; j -= lowbit(j))</li>
<li>                ret += c[ i ][ j ];</li>
<li style="background:#f3f3f3;">        <span style="color:#0000ff;">return</span> ret;</li>
<li>    }</li>
<li style="background:#f3f3f3;">} tool;</li>
<li>&nbsp;</li>
<li style="background:#f3f3f3;"><span style="color:#0000ff;">int</span> main()</li>
<li>{</li>
<li style="background:#f3f3f3;">    t = treearray(6);</li>
<li>    F(i,1,6)</li>
<li style="background:#f3f3f3;">    {</li>
<li>        t.modify(i,i);</li>
<li style="background:#f3f3f3;">    }</li>
<li>    F(i,1,6)</li>
<li style="background:#f3f3f3;">    {</li>
<li>        cout &lt;&lt; t.a[i] &lt;&lt; ”&#177; “&#176; &lt;&lt; t.sum(i) &lt;&lt; endl;</li>
<li style="background:#f3f3f3;">    }</li>
<li>    t.modify(2,5);</li>
<li style="background:#f3f3f3;">    F(i,1,6)</li>
<li>    {</li>
<li style="background:#f3f3f3;">        cout &lt;&lt; t.a[i] &lt;&lt; ”&#177; “&#176; &lt;&lt; t.sum(i) &lt;&lt; endl;</li>
<li>    }</li>
<li style="background:#f3f3f3;">    <span style="color:#0000ff;">return</span> 0;</li>
<li>}</li>
</ol>
</div>
</div>
</div>
e

<p>r</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>295</wp:post_id>
		<wp:post_date>2010-09-23 22:57:13</wp:post_date>
		<wp:post_date_gmt>2010-09-23 14:57:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jin-ri-de-gan-xiang-amp-shu-zhuang-shu-zu-xiao-jie</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="allenlsy-ri-ji-xin-de"><![CDATA[Daily Life]]></category>
		<category domain="category" nicename="data-structure-shu-ju-jie-gou"><![CDATA[Data Structure]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1285253834]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1285253834]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391541]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1281825435]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA[peter]]></wp:comment_author>
			<wp:comment_author_email>tc506@yahoo.cn</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.75.216.180</wp:comment_author_IP>
			<wp:comment_date>2011-04-21 13:31:00</wp:comment_date>
			<wp:comment_date_gmt>2011-04-21 05:31:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[谢谢你。。看了你写的这个我很有信心了。不再总为自己找借口了。
我知道自己该怎么做了。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1303363860]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1303363860.9462";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[893652285]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>POJ 2750</title>
		<link>http://allenlsy.com/2010/09/POJ-2750/</link>
		<pubDate>Fri, 24 Sep 2010 08:21:06 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">https://allenlsy.wordpress.com/2010/09/24/poj-2750/</guid>
		<description></description>
		<content:encoded><![CDATA[<h4><strong>题意</strong>：</h4>
有一个数环，求上面最大的一段弧的和。弧定义为不能和环的长度相等。
<h4><strong>思路</strong>：</h4>
因为一看就知道是Nlogn的算法，所以用线段树了。假设Qmax(i, j )表示弧i-j这一段上的最大弧和，Qmin(i, j)表示这一段的最小弧和，sum(i, j)表示i到j的总和。这里首先要明白一个问题。把环随意从某个地方切断（我就假设切断n~1之间这段了），拉成一条线。那么最后要求的答案就是max( Qmax(1, n), sum(1, n) – Qmin(1,n) )。意思就是说 1到n的最大和 或者是 总和减去1到n的最小和。当然，如果所有的数都是正数或0，就直接是总和减去最小段和（此时最小段和其实也就是最小的那个数）。貌似我们没有考虑首尾相连形成的最大弧和的情况是把？其实是考虑到了的。我们考虑有负数的情况（全正数的情况已经讨论过了）。因为最大弧和与最小弧和是不可能重叠的，否则，要么最大弧和还可以更大，要么最小弧和还可以更小。既然对于每一段不用考虑首尾相连的情况，问题就完全变成了线段上动态求最大和的问题。那么容易得到以下的递推式。假设一个节点r，r*2是它的左儿子，r*2+1是它的右儿子。它从l到r。记录下左端开始的最大连续子段和lmax，以及右端结束的的最大连续子段和rmax，以及相对应的最小值lmin, rmin。则有
T[r].lmax = max(T[2*r].lmax, T[2*r].sum+T[2*r+1].lmax);
T[r].rmax = max(T[2*r+1].rmax,T[2*r].rmax+T[2*r+1].sum);
T[r].maxV = max( max(T[2*r].maxV,T[2*r+1].maxV), T[2*r].rmax+T[2*r+1].lmax);
T[r].lmin = min(T[2*r].lmin,T[2*r].sum+T[2*r+1].lmin);
T[r].rmin = min(T[2*r+1].rmin,T[2*r].rmin+T[2*r+1].sum);
T[r].minV = min( min(T[2*r].minV,T[2*r+1].minV), T[2*r].rmin+T[2*r+1].lmin)；
<a href="http://allenlsy.com/wp-content/uploads/2010/09/test.jpg"><img style="display: inline; border: 0;" title="test" src="http://allenlsy.com/wp-content/uploads/2010/09/test_thumb.jpg" alt="test" width="578" height="364" border="0" /></a>
<h4><strong>统计：</strong></h4>
600ms
<div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:8e6fa0cc-9448-4411-bff4-3d1826a7427f" class="wlWriterEditableSmartContent" style="display: inline; float: none; margin: 0; padding: 0;">
<div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt;">
<div style="background: #000080; color: #fff; font-family: Verdana, Tahoma, Arial, sans-serif; font-weight: bold; padding: 2px 5px;">POJ 2750</div>
<div style="background: #ddd; overflow: auto;">
<ol style="background: #ffffff; margin: 0 0 0 2.5em; padding: 0 0 0 5px;">
	<li><span style="color: #0000ff;">#include</span><span style="color: #a31515;">&lt;iostream&gt;</span></li>
	<li style="background: #f3f3f3;"><span style="color: #0000ff;">#define</span> F(i,a,b) <span style="color: #0000ff;">for</span> (<span style="color: #0000ff;">int</span> i=a;i&lt;=b;i++)</li>
	<li><span style="color: #0000ff;">using</span> <span style="color: #0000ff;">namespace</span> std;</li>
	<li style="background: #f3f3f3;"><span style="color: #0000ff;">const</span> <span style="color: #0000ff;">int</span> N = 100010;</li>
	<li></li>
	<li style="background: #f3f3f3;"><span style="color: #0000ff;">struct</span> Node</li>
	<li>{</li>
	<li style="background: #f3f3f3;">    <span style="color: #0000ff;">int</span> sum,minV,maxV;</li>
	<li>    <span style="color: #0000ff;">int</span> lmin,lmax;</li>
	<li style="background: #f3f3f3;">    <span style="color: #0000ff;">int</span> rmin,rmax;</li>
	<li>    <span style="color: #0000ff;">int</span> left,right;</li>
	<li style="background: #f3f3f3;">}T[N*3];</li>
	<li></li>
	<li style="background: #f3f3f3;"><span style="color: #0000ff;">int</span> a[N];<span style="color: #008000;">// store data</span></li>
	<li><span style="color: #0000ff;">int</span> n,m;</li>
	<li style="background: #f3f3f3;"><span style="color: #0000ff;">void</span> update(<span style="color: #0000ff;">int</span> r)</li>
	<li>{</li>
	<li style="background: #f3f3f3;">    T[r].sum = T[2*r].sum+T[2*r+1].sum;</li>
	<li></li>
	<li style="background: #f3f3f3;">    T[r].lmax = max(T[2*r].lmax, T[2*r].sum+T[2*r+1].lmax);</li>
	<li>    T[r].rmax = max(T[2*r+1].rmax,T[2*r].rmax+T[2*r+1].sum);</li>
	<li style="background: #f3f3f3;">    T[r].maxV = max( max(T[2*r].maxV,T[2*r+1].maxV), T[2*r].rmax+T[2*r+1].lmax);</li>
	<li></li>
	<li style="background: #f3f3f3;">    T[r].lmin = min(T[2*r].lmin,T[2*r].sum+T[2*r+1].lmin);</li>
	<li>    T[r].rmin = min(T[2*r+1].rmin,T[2*r].rmin+T[2*r+1].sum);</li>
	<li style="background: #f3f3f3;">    T[r].minV = min( min(T[2*r].minV,T[2*r+1].minV), T[2*r].rmin+T[2*r+1].lmin);</li>
	<li>}</li>
	<li style="background: #f3f3f3;"></li>
	<li><span style="color: #0000ff;">void</span> create(<span style="color: #0000ff;">int</span> s,<span style="color: #0000ff;">int</span> e,<span style="color: #0000ff;">int</span> r)<span style="color: #008000;">// build segment tree</span></li>
	<li style="background: #f3f3f3;">{</li>
	<li>    T[r].left = s;</li>
	<li style="background: #f3f3f3;">    T[r].right = e;</li>
	<li>    <span style="color: #0000ff;">if</span>(s==e)</li>
	<li style="background: #f3f3f3;">    {</li>
	<li>        T[r].sum = T[r].maxV = T[r].minV = T[r].lmin</li>
	<li style="background: #f3f3f3;">            = T[r].lmax = T[r].rmin = T[r].rmax = a[s];</li>
	<li>        <span style="color: #0000ff;">return</span>;</li>
	<li style="background: #f3f3f3;">    }</li>
	<li></li>
	<li style="background: #f3f3f3;">    <span style="color: #0000ff;">int</span> mid = (s+e) / 2;</li>
	<li>    create(s,mid,2*r);</li>
	<li style="background: #f3f3f3;">    create(mid+1,e,2*r+1);</li>
	<li>    update(r);</li>
	<li style="background: #f3f3f3;">}</li>
	<li></li>
	<li style="background: #f3f3f3;"><span style="color: #0000ff;">void</span> modify(<span style="color: #0000ff;">int</span> x,<span style="color: #0000ff;">int</span> r) <span style="color: #008000;">// modify the node contains segment [x, x] to a[0] from node r</span></li>
	<li>{</li>
	<li style="background: #f3f3f3;">    <span style="color: #0000ff;">if</span>(T[r].left == T[r].right)</li>
	<li>    {</li>
	<li style="background: #f3f3f3;">        T[r].sum = T[r].maxV = T[r].minV = T[r].lmin</li>
	<li>            = T[r].lmax = T[r].rmin = T[r].rmax = a[0];</li>
	<li style="background: #f3f3f3;">        <span style="color: #0000ff;">return</span>;</li>
	<li>    }</li>
	<li style="background: #f3f3f3;"></li>
	<li>    <span style="color: #0000ff;">int</span> mid = (T[r].left+T[r].right) / 2;</li>
	<li style="background: #f3f3f3;">    <span style="color: #0000ff;">if</span>(x &lt;= mid)</li>
	<li>        modify(x,2*r);</li>
	<li style="background: #f3f3f3;">    <span style="color: #0000ff;">else</span></li>
	<li>        modify(x,2*r+1);</li>
	<li style="background: #f3f3f3;">    update(r);</li>
	<li>}</li>
	<li style="background: #f3f3f3;"></li>
	<li><span style="color: #0000ff;">int</span> main()</li>
	<li style="background: #f3f3f3;">{</li>
	<li>    <span style="color: #0000ff;">int</span> x,ans;</li>
	<li style="background: #f3f3f3;"></li>
	<li>    <span style="color: #008000;">// read data</span></li>
	<li style="background: #f3f3f3;">    scanf(<span style="color: #a31515;">"%d"</span>, &amp;n);</li>
	<li>    F(i,1,n)</li>
	<li style="background: #f3f3f3;">        scanf(<span style="color: #a31515;">"%d"</span>,&amp;a[i]);</li>
	<li>    create(1,n,1);</li>
	<li style="background: #f3f3f3;"></li>
	<li>    scanf(<span style="color: #a31515;">"%d"</span>, &amp;m);</li>
	<li style="background: #f3f3f3;">    F(i,1
,m)</li>
	<li>    {</li>
	<li style="background: #f3f3f3;">        scanf(<span style="color: #a31515;">"%d%d"</span>,&amp;x,&amp;a[0]);</li>
	<li>        modify(x,1);</li>
	<li style="background: #f3f3f3;"></li>
	<li>        <span style="color: #0000ff;">if</span> (T[1].sum==T[1].maxV)</li>
	<li style="background: #f3f3f3;">            ans = T[1].sum-T[1].minV;</li>
	<li>        <span style="color: #0000ff;">else</span></li>
	<li style="background: #f3f3f3;">            ans = max(T[1].maxV,T[1].sum-T[1].minV);</li>
	<li></li>
	<li style="background: #f3f3f3;">        cout&lt;&lt;ans&lt;&lt;endl;</li>
	<li>    }</li>
	<li style="background: #f3f3f3;">    <span style="color: #0000ff;">return</span> 0;</li>
	<li>}</li>
</ol>
</div>
&nbsp;

</div>
&nbsp;

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>324</wp:post_id>
		<wp:post_date>2010-09-24 16:21:06</wp:post_date>
		<wp:post_date_gmt>2010-09-24 08:21:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>POJ-2750</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="data-structure-shu-ju-jie-gou"><![CDATA[Data Structure]]></category>
		<category domain="post_tag" nicename="interval-tree"><![CDATA[interval tree]]></category>
		<category domain="category" nicename="poj-bei-da-ti-ku"><![CDATA[POJ 北大题库]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1285316466]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1285316466]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391547]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>wpsd_autopost</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[POJ-2750]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1281825436]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[ShawnYing]]></wp:comment_author>
			<wp:comment_author_email>ying0008@e.ntu.edu.sg</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>155.69.149.156</wp:comment_author_IP>
			<wp:comment_date>2010-10-04 12:40:03</wp:comment_date>
			<wp:comment_date_gmt>2010-10-04 04:40:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[最大局部和有O(n)的~]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1286167203]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[893652287]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[allenlsy]]></wp:comment_author>
			<wp:comment_author_email>allenlsy@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>155.69.197.120</wp:comment_author_IP>
			<wp:comment_date>2010-10-04 13:40:02</wp:comment_date>
			<wp:comment_date_gmt>2010-10-04 05:40:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你是说的DP那种方法吗？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>14</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1286170802]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[893652287]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[893727884]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>让计算机朗读电子书</title>
		<link>http://allenlsy.com/2010/10/rang-ji-suan-ji-lang-du-dian-zi-shu/</link>
		<pubDate>Fri, 01 Oct 2010 12:05:54 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">https://allenlsy.wordpress.com/2010/10/01/%e8%ae%a9%e8%ae%a1%e7%ae%97%e6%9c%ba%e6%9c%97%e8%af%bb%e7%94%b5%e5%ad%90%e4%b9%a6/</guid>
		<description></description>
		<content:encoded><![CDATA[技术是出来很多年了，不过很少有人坚持用下去。

Windows一般自带了一套语音合成系统(TTS)，那个念出来，就跟把单词拼起来没什么两样，难听死了。因此要重新找一套TTS。

这里，语音合成系统，英文我推荐NeoSpeech。中文推荐用中科大讯飞。

当安装完几个TTS之后，首先要去修改windows默认的TTS。在Control Panel中，搜索Speech Recognition，出来这个

<a href="http://allenlsy.com/wp-content/uploads/2010/10/1.jpg"><img style="display:inline;border-width:0;" title="1" src="http://allenlsy.com/wp-content/uploads/2010/10/1_thumb.jpg" border="0" alt="1" width="644" height="378" /></a>

看到左边的Text to Speech，点击。

<a href="http://allenlsy.com/wp-content/uploads/2010/10/2.jpg"><img style="display:inline;border-width:0;" title="2" src="http://allenlsy.com/wp-content/uploads/2010/10/2_thumb.jpg" border="0" alt="2" width="474" height="234" /></a>

然后，将默认TTS修改为刚才安装的中其中一个，随自己喜好而定。

通常能用到朗读的格式，无非是pdf、docx和pptx。现在，就该说如何让计算机朗读他们了。

如果要朗读pdf格式的文件，在acrobat中，在View-&gt;Read out loud中，先activate read out loud。这可能需要十几秒钟时间，请等待。然后，点中某一段话，就可以听到朗读了。如果没有听到，可能是因为朗读引擎的语言选择不对。可在在acrobat的Edit-&gt;Preferences的Reading页面下，将Voice项修改为需要的TTS。

如果要朗读pptx或者docx的话（当然ppt和doc也是同理），首先需要在office的面板中添加Speak这一个按钮。方法是：在option中，看到Customize Ribbon。

<a href="http://allenlsy.com/wp-content/uploads/2010/10/3.jpg"><img style="display:inline;border-width:0;" title="3" src="http://allenlsy.com/wp-content/uploads/2010/10/3_thumb.jpg" border="0" alt="3" width="140" height="123" /></a>

点击后，先在Home下new group（当然也可以在其他地方new group，只是我觉得home下方便。如果大家不知道这时怎么回事，就现在Home下new group），然后命名，我命名为Reading。再在左半边如图选择

<a href="http://allenlsy.com/wp-content/uploads/2010/10/4.jpg"><img style="display:inline;border-width:0;" title="4" src="http://allenlsy.com/wp-content/uploads/2010/10/4_thumb.jpg" border="0" alt="4" width="244" height="126" /></a>

看到Speak了吗？通过点击Add&gt;&gt;，将它添加到刚刚建立的Reading group下面。如图

<a href="http://allenlsy.com/wp-content/uploads/2010/10/5.jpg"><img style="display:inline;border-width:0;" title="5" src="http://allenlsy.com/wp-content/uploads/2010/10/5_thumb.jpg" border="0" alt="5" width="244" height="201" /></a>

下面，你就会看到Home上面多了一个reading group。随便选一段文字试试让计算机朗读吧。

几个TTS的下载地址

<a title="http://www.verycd.com/topics/145046/" href="http://www.verycd.com/topics/145046/">http://www.verycd.com/topics/145046/</a>

<a title="http://www.verycd.com/topics/145046/" href="http://www.verycd.com/topics/145046/">http://www.verycd.com/topics/145046/</a>

另外，再加一个链接，上面教了怎么把扫描版的pdf文件变成文字可以搜索的版本的。

<a href="http://www.myadobe.com.tw/2009/ctenews/0905-5.html" target="_blank">http://www.myadobe.com.tw/2009/ctenews/0905-5.html</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>394</wp:post_id>
		<wp:post_date>2010-10-01 20:05:54</wp:post_date>
		<wp:post_date_gmt>2010-10-01 12:05:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rang-ji-suan-ji-lang-du-dian-zi-shu</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="allenlsy-ri-ji-xin-de"><![CDATA[Daily Life]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1285934754]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1285934754]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391565]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1281825438]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[LsyAdimirer]]></wp:comment_author>
			<wp:comment_author_email>zh0025an@e.ntu.edu.sg</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>155.69.173.140</wp:comment_author_IP>
			<wp:comment_date>2010-10-07 00:14:21</wp:comment_date>
			<wp:comment_date_gmt>2010-10-06 16:14:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我喜欢那个‘去’ 哈哈哈哈 有意思]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1286381662]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[893652288]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>18</wp:comment_id>
			<wp:comment_author><![CDATA[allenlsy]]></wp:comment_author>
			<wp:comment_author_email>allenlsy@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://allenlsy.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>155.69.197.205</wp:comment_author_IP>
			<wp:comment_date>2010-10-07 11:18:15</wp:comment_date>
			<wp:comment_date_gmt>2010-10-07 03:18:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[去，是默认设置上的，我可没改]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>23</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1286421495]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>CMM 与 ISO9001 的异同</title>
		<link>http://allenlsy.com/2010/11/CMM-yu-ISO9001-de-yi-tong/</link>
		<pubDate>Mon, 01 Nov 2010 15:30:29 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">https://allenlsy.wordpress.com/2010/11/01/cmm-%e4%b8%8e-iso9001-%e7%9a%84%e5%bc%82%e5%90%8c/</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>相似点</h2>  <p>（1） CMM和ISO 9001都是源于关键的国防产品需求，然后扩展到民用。   <br />（2） 两者均强调过程管理和持续改进，PDCA的方法贯穿了所有过程。    <br />（3） 两者都涉及质量管理和过程管理，并且都受到类似的厉害关系驱动。    <br />（4） 两者都强调&quot;该说的要说到，说到的要做到&quot;。对重要过程应形成文件，都强调&quot;文件化（制度化）&quot;；包括指导书和说明，并检查交付质量。ISO 9001的一些过程可以在CMM中找到完全对应的部分，另外一些过程则是比较分散的对应。</p>  <h2>不同点</h2>  <p>（1） ISO 9001是国际标准。迄今为止，CMM既不是政府标准也不是行业协会标准，而是SEI发表的一份技术报告。不过，它在美国已成为事实上的标准（CMM和Capability Maturity Model已经由美SEI在美国注册了专利和商标）。   <br />（2） CMM与ISO 9001的设计思路不同，并且一个是&quot;专用&quot;，一个是&quot;泛用&quot;，CMM是专门针对软件工业的，较好地反映了软件和软件开发工作的特点，围绕CMM而设计和拟制的大量支持文件和工具又为实施一致且可靠的评估提供了保证。而ISO9001则面向所有工业。因此，相对而言，CMM更具体些，ISO9001更抽象些。    <br />（3） CMM是面向内部的软件过程改进框架，而2000版ISO9001适用于组织的质量管理和对外提供质量保证。    <br />（4） CMM和ISO9001在应用概念上不同，在结构上不一样。可以说ISO9001重在整体，CMM强调企业内部素质。实施CMM最大的益处是可以较大程度避免形式主义。    <br />＊ 应用概念：    <br />CMM的概念是&quot;过程成熟性&quot;，过程越成熟，过程产品越有保证。CMM通过达到关键过程域(KPA)的目标来判断过程能力成熟性。    <br />ISO9001是确保每一个过程的质量可重复地被保证和改进。ISO9001根据一个企业的质量体系中是否覆盖了所有要求 (以文档化的形式)，且是否有效地按定义方式实施来判断该企业是否符合ISO9001要求。    <br />＊ 结构：    <br />CMM的结构是层次化的结构，划分了5个等级。ISO9001结构是环形结构，由四个大过程组成，每个大过程又分为若干个小过程。    <br />ISO9001的小过程与CMM关键过程域一般为多对多的关系，即一个过程要素素可能对应多个KPA，一个KPA对应多个过程要素。    <br />（5） 软件能力评定    <br />＊ 就软件能力评定而言，按ISO 9001进行认证时，不确定性很大；换言之，同是通过了ISO 9001认证的组织，其间的软件能力可能有很大差别。    <br />＊ CMM是专门针对软件组织设计的一种描述软件过程能力的模型。CMM研制的主要目的有二：一是用于帮助事先确定承包商的软件能力；二是用于软件组织的过程改进。考虑到按ISO 9001对软件组织进行认证审核时存在的较大不确定性，在设计CMM时，注意了尽量缩小审核员解释的回旋余地，因此，不仅对每个关键过程方面给出了明确的目标和体现这些目标的各个关键惯例，而且对各个关键惯例都给出了明确的定义和详细的说明，以期按CMM进行评估时能有较大的一致性和可靠性。    <br />（6） ISO 9001的一些过程在CMM中没有细述。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>400</wp:post_id>
		<wp:post_date>2010-11-01 23:30:29</wp:post_date>
		<wp:post_date_gmt>2010-11-01 15:30:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>CMM-yu-ISO9001-de-yi-tong</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="software-design"><![CDATA[Design]]></category>
		<category domain="category" nicename="software-development-ruan-jian-kai-fa"><![CDATA[Software Development]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1288625431]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1288625431]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391566]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>IEEE软件工程术语表</title>
		<link>http://allenlsy.com/2010/11/IEEE-ruan-jian-gong-cheng-shu-yu-biao/</link>
		<pubDate>Tue, 02 Nov 2010 12:44:35 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">https://allenlsy.wordpress.com/2010/11/02/ieee%e8%bd%af%e4%bb%b6%e5%b7%a5%e7%a8%8b%e6%9c%af%e8%af%ad%e8%a1%a8/</guid>
		<description></description>
		<content:encoded><![CDATA[<h4><a href="http://cid-a901353226438593.office.live.com/self.aspx/.Public/Library/Software%20Engineering/IEEE-SE-Glossary.pdf">IEEE SE Glossary</a> 下载</h4>
&nbsp;

<a href="http://allenlsy.com/wp-content/uploads/2010/11/image.png"><img style="background-image:none;padding-left:0;padding-right:0;display:block;float:none;margin-left:auto;margin-right:auto;padding-top:0;border:0;" title="image" src="http://allenlsy.com/wp-content/uploads/2010/11/image_thumb.png" border="0" alt="image" width="496" height="657" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>403</wp:post_id>
		<wp:post_date>2010-11-02 20:44:35</wp:post_date>
		<wp:post_date_gmt>2010-11-02 12:44:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>IEEE-ruan-jian-gong-cheng-shu-yu-biao</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="software-design"><![CDATA[Design]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1288701875]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1288701875]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391569]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>wpsd_autopost</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[IEEE-ruan-jian-gong-cheng-shu-yu-biao]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>【推荐】时间管理文章：Do it now</title>
		<link>http://allenlsy.com/2010/11/tui-jian-shi-jian-guan-li-wen-zhang-Do-it-now/</link>
		<pubDate>Wed, 03 Nov 2010 02:23:44 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">https://allenlsy.wordpress.com/2010/11/03/%e3%80%90%e6%8e%a8%e8%8d%90%e3%80%91%e6%97%b6%e9%97%b4%e7%ae%a1%e7%90%86/</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>AllenLSY:</strong>

<strong>文章不是我写的，我也写不出来，明说。虽然这不是什么大师写的圣经级别的东西，不过不否认，这是个高手的作品。</strong>

<strong>本文作者叫做Steven Pavelina，写于November 28th, 2005。这里有一些他的相关资料</strong>

<strong><img class="alignnone" title="Steven Pavelina" src="http://www.alexshalman.com/blog/wp-content/uploads/2008/02/2007_steve_pavlina.jpg" alt="" width="200" height="200" />
</strong>

<strong><a href="http://en.wikipedia.org/wiki/Steve_Pavlina">http://en.wikipedia.org/wiki/Steve_Pavlina</a></strong>

<strong>这里是本文的英文原稿</strong>

<strong><a href="http://www.stevepavlina.com/articles/do-it-now.htm">http://www.stevepavlina.com/articles/do-it-now.htm</a>
</strong>

很多年前读大学的时候，我决定制定一个计划挑战自己：只用三个学期完成其他人通常花费四年的课程，能否毕业。这篇文章详细的说明了我在成功实现该目标过程中的所有时间管理技巧。

为了实现这个目标，我决心每个学期得到30到40个学分，而其他学生平均只要12到15个学分。显而易见，我必须合理安排时间才能实现目标。我开始阅读我所能找到的所有关于时间管理的资料，并学以所用。正好三个学期，我完成了目标：两个理科学士学位（计算机科学和数学），而且没有参加暑期的补课。<span style="color:#ff0000;">我每天晚上睡七到八个小时，处理好我的日常杂务（购物，做饭等等），参与社交活动，每天早晨锻炼30分钟</span>。在最后一学期我完成了高级计算机和数学两门总共37学分的课程，我甚至拥有一份游戏程序员的全职工作（每周工作40小时），还是当地ACM学会（Association of Computing Machinery）的副主席。我的同学把他们完成功课要花的时间加到一起，<span style="color:#ff0000;"><strong>结论是我的一周有</strong><strong>250</strong></span><strong><span style="color:#ff0000;">小时</span>。</strong>我以3.9GPA的成绩毕业并且获得每年颁发给最优秀计算机专业学生的特别奖。我的一个教授后来告诉我当他们知道我所做所为之后，选择奖项的候选人就变得很简单了。

我并不被看作一个天才儿童，这也是我第一次做出这样的事。没人指导过我，我不知道是否有谁那么做过，我也没有想起什么人鼓励我这么做。事实上，当我告诉大家的时候大多数人都出来劝阻我。我只是简单的想为了我自己而做。如果你想更好的了解我那个时候为什么会尝试如此疯狂的事儿，你也许会乐于读一读。

生活的意义：引子

——里面包含了整个故事的背景以及有关我的动机的细节描述。

我花了很多时间来说服计算机系主任给我选学额外的学分，我同学经常说我作弊，要么就是有个双胞胎兄弟，或者干脆说我是精神不正常（每周我听到最多的就是最后一条，也许说的有些道理）。大多数时候我保持沉默，但当被问到修多少学分的时候，我会如实回答。我也许是整个大学里唯一拿着两页课表的学生，因此如果有人胁迫我，这很容易证明我说的是真话，虽然我很少这么做。

讲这个故事，并非为了引人注目，更不是使你好奇于我如何做到它。我成功实现目标只是我运用了时间管理这个概念，很多人可能根本不知道，但它却早就存在于那个时候（1992-1993年）的书籍和音频节目中。大学里养成的时间管理习惯对我后来创业帮助很大，所以我想与你分享并希望你觉得同样有价值。它让我节约了学费并且给了我大约$30,000 来起家做创业（全部是我最后一学期当游戏程序员时赚的，大部分是版税收入）。闲话少说，下面就是我知道的时间管理的精华所在：

目标明确是关键

首先要明确的知道你想要什么。在我曾经训练过的一个跆拳道馆，墙上有一块巨大的标语，<strong>"</strong><strong><span style="color:#ff0000;">你的目标是黑带</span>！"</strong>。它提醒每个学员为什么他/她们要经过如此艰苦的训练。<span style="color:#ff0000;">你独自工作的时候，很容易整日在办公桌上碌碌无为完成一些毫无价值的工作。在你不知道自己打算做什么的时候，这会经常发生</span>。当你意识到这点，问自己"我到底在这里试图想实现什么目标么？"<span style="color:#0000ff;">你必须尽量清楚自己的目标。使你的目标更明确，并把它们写出来。<strong>你的目标必须清楚到这种程度：即使一个陌生人，在客观地了解了你的情况后，都能就你是否完成每个目标给出一个绝对的</strong><strong>"</strong><strong>是"</strong><strong>或者 "</strong><strong>否"</strong><strong>的答复。</strong></span>假如你不能明确的定义你的目标，就算到达了你又怎么能知道？

我发现定义和展开一个明确目标的关键周期是九十天，就是一个季度。在那样一段时间里，如果你确立了非常明确的目标，你就可以作出重大的可估量的改变。花点时间停下来，写写你希望接下来的九十天你的生活是什么样。什么样的月收入？体重多少？朋友如何？事业如何？人际关系如何？你的网站会是什么样子？详细的写。绝对明确的描述会给你全程计划提供一个边界。

就像飞机的自动驾驶仪必须不断修正航线，你必须定时重新审视你的目标。<span style="color:#ff0000;">每天早晨重读你清楚写下的目标，将这些清晰的、记录下来的目标重新接合起来。把它们贴在墙上，特别是你的经济目标。</span>几年前（九十年代中期），我在每个房间里贴上"5000美元/月"的表语。那就是我当时的月收入目标。我不断的确立明确的收入目标，即使有时候遭遇挫折，我发现这个过程十分有效。这并不只帮助我关注我的目标——也许更有助于让我忽视那些目标之外的事情。例如，如果你确定了月收入一万美元的目标，这会让你放弃做那些每月只能挣五千美元的事情。

如果你仍不明白如果明确目标，那就把它作为你的首要目标。一辈子不清楚自己到底想要什么是对时间的巨大浪费。大多数人长久的沉迷于"我不知道做什么"的状态中。他们等着外力使自己目标明确，殊不知明确是自身创造的。一切在等着你动手，没有别的办法，它会一直等待直到你下定决心。等待明确的目标就像一位雕塑家注视着一块大理石，等待里面的雕像可以抛开不需要的碎屑自动出现。不要指望目标会自动明确起来——拿起凿子动手吧！

灵活安排

知道你的目标与知道你达到目标的途径是完全不同的。一架典型的商用飞机90％的时间偏离航线，但它差不多总是能到达目的地，因为它知道往哪里飞并且随时的修正方向。你不可能预知确切的途径。我认为计划的真实目的在于你确信存在一条可行的途径。我们都听说过，据统计80％的新商业机构在头五年里倒闭，但一个更有趣的统计是几乎所有成功的商业机构的发展道路都与原定的计划不同。<strong><span style="color:#ff0000;">以商业计划开始的成功的企业，你通常都会发现最初的计划惨遭败绩，他们只是因为尝试其他途径而成功。</span></strong>有人说不与市场紧密联系的商业计划难以生存。我把它推广为不与现实世界紧密联系的计划也难以实施。

著名作家和商业顾问Stephen Covey经常引用这个句子，"诚实面对选择。"<strong><span style="color:#0000ff;">意思就是在没有了解目标的情况下，不能盲目的执行计划。</span></strong>例如，<span style="color:#ff0000;">你细心的执行计划–目前为止一切顺利–突然出现一个无法预料的机会。你坚持原有计划（这会丧失机会)还是停止机会抓住机会(这会使你脱离计划)？<strong>这时你需要停下来考虑你的目标，以决定哪个是更好的选择。</strong></span>盲目的执行计划是不可取的。一旦获得可以更正计划的信息，你要训练在选择的时刻保持诚实。有时你可以借不曾预料的捷径达到目标。另一些时候你得坚持原有计划并避免为次要的东西分心，那会把你带离你的目标。紧守你的目标，但灵活对待计划。

<span style="color:#0000ff;">我相信一个<strong><span style="color:#ff0000;">清晰</span></strong>的计划远远比一个<strong><span style="color:#ff0000;">清楚</span></strong>的计划来得重要的多。</span>在大学里我很清楚自己的最终目标——在三个学期里完成大学学业 ——但是我的计划随时随刻都在变化<span style="color:#0000ff;">。</span><strong><span style="color:#0000ff;">每天我都会有新的作业，课程或者考试，我必须适应这些随时变化的情况。</span><span style="color:#ff0000;">如果我试图为每个学期指定长期计划，那么不出一天计划就会失效了。</span></strong><strong> </strong>

一时一事

我坚持非常基础的用纸－笔记录要做的事，而并非某些精细的组织系统。<span style="color:#0000ff;">我唯一的组织工具只是一个笔记薄</span>，<strong><span style="color:#0000ff;">在上面我写下所有任务以及它们的完成期限</span>。</strong><span style="color:#ff0000;">我</span><strong><span style="color:#ff0000;">并不为预先的安排和次序而担忧</span>。</strong>我我只需看一眼清单，选出适合空余时间的要事即可。一完成这个任务，就把它从列表里去掉。

如果我有一份10小时的学期报告要写，<span style="color:#ff0000;"><strong>我会一次完成它而不是把它分成更小的任务。</strong><strong>我通常在周末去做那些耗时的工作。</strong></span>在上午去图书馆做必要的查阅，然后回到宿舍开始写，直到最终的论文打印出来。如果需要休息我就休息。这与这个计划如何重要还有教授要求几周内完成它没有关系。一旦我开始，我就会坚持下去直到100％完成，就等着交作业了。

这个简单的习惯为我节约了大量时间。<span style="color:#ff0000;">首先，它使我对每项任务全神贯注，做起来效率就很高。</span><strong><span style="color:#0000ff;">转换任务会浪费很多时间，因为你不得不重新了解和熟悉它们。单独处理使得切换任务所耗费的时间最小化。</span></strong>实际上，如果可能我会把某一特定主题的任务集中在一起，然后一次完成它们。所以我一次性连续做完我的数学作业。然后去做所有的编程作业。然后去做综合作业。<span style="color:#ff0000;">这样，我使我的大脑处于数学思维，编程思维，写作思维，还有艺术思维的状态，并且保持尽可能长时间的保持单一的模式。</span><strong><span style="color:#0000ff;">第二，我觉得这个习惯使我没有拘束也没有压力，我的思维不会因为过多要做的东西而混乱。</span></strong>这种每次只做一件事的习惯，让我忘掉现在任务之外的所有东西。

失败是朋友

大部分人对失败怀有先天的恐惧，事实上它却是你最好的朋友。<strong><span style="color:#0000ff;">成功的人也因为屡次尝试而经历很多失败。</span></strong>伟大的棒球手Babe Ruth曾同时保持本垒打和三振出局的记录。最成功的人同时也面对着最惨痛的失败。失败没什么不正常，也不必感到羞耻。<strong><span style="color:#ff0000;">唯一的让人后悔的是从不去尝试。</span></strong>所以，别对前进的过程产生恐惧。<strong><span style="color:#ff0000;">要确定一些事是否可行，有时候最快的办法是上手去做。在进行的过程中你可以不断调整自己。</span></strong>这是个准备－开火－瞄准的过程，让人惊讶的是，它比通常的准备－瞄准－开火更有效。<span style="color:#0000ff;"><strong>原因是你</strong><strong>"</strong><strong>开火</strong><strong>"</strong><strong>以后，你就有了第一手数据来调整自己的瞄准。很多人陷入思考和计划之中，而从不开始动手。停滞于某个步骤里（比如：准备－瞄准－瞄准－瞄准－瞄准……），这你失去了太多好点子。</strong><strong> </strong></span>

大学里我做了很多我认为可以节约时间的疯狂尝试。我不停的阅读有关时间管理的资料并且加以应用，但我也有独创的办法。<strong><span style="color:#ff0000;">大部分我自己的办法彻底失败，但有些行得通。我乐于一次次的失败，以求在微小的机会下，我的偶然发现让我突飞猛进。</span></strong><strong> </strong>

要明白失败并不是和成功正相反。失败是成功之母。<strong><span style="color:#ff0000;">一旦你成功，没人记得你曾经失败。</span></strong>微软并不是Bill Gates和 Paul Allen的第一次商业冒险。有谁记得他们经营Traf-o-Data时的失败？金凯·利还是个年轻喜剧演员的时候就经常被嘘下舞台。电灯泡的发明是因为托马斯·爱迪生经历过10000次失败后仍不放弃。如果你被失败纠缠，你就这么理解它<span style="color:#0000ff;">：<strong>这同样是成功，或者说获得了经验。</strong></span><strong>这代表了你的诚意、热爱的诚意，找工作也是同样的道理</strong><strong> </strong>

战胜对失败的恐惧会让你快乐。<strong><span style="color:#0000ff;">假如你对达到某个特殊的目标而兴奋，但又害怕不能成功实现，那么扑上去着手做吧。就算你的尝试失败了，你也会学到有价值的东西，下一次就可以做更好的尝试。</span></strong><strong><span style="color:#ff0000;">如果你看到当今那些成功的商业人士，你一样要看到在他们事业的一举成功之前的一连串惨痛失败，包括我在内。</span></strong>而且我觉得这些人大都会同意我的看法，开始的失败经验对后来的成功有着基础性贡献。对打算开始创业的人，我的建议是创业就是生产或者服务，而不要太担心是否成功。它们可能会失败。但相比只是空想，你会学到更多东西。

现在开始！

W. Clement Stone建立了价值数亿美元的保险业帝国，他要求所有的雇员每天开始工作前一遍遍的背诵这句话："现在开始！"一旦你觉得变得懒散而且又想起必须要做的事情，停下来大声说，"现在开始！现在开始！现在开始！"我经常把这句话作为我的屏保。<strong><span style="color:#0000ff;">拖拖拉拉的代价巨大，因为你一次次的回到工作中，大大增加了时间的浪费。</span></strong>思考的和计划固然重要，但行动更重要。思考和计划不会让你得到报酬，只有工作成果才能。当你犹豫的时候，大胆的行动吧，就像它根本不可能失败。实际上，的确如此。

养成果断决定的习惯

我对<span style="color:#ff0000;"><strong>每一个必须的决定使用六十秒原则</strong>，</span>不管它多么重要。一旦我有足够的准备去做一个决定，我打开一个定时器，只给自己六十秒来做一个果断的决定。如果需要我甚至靠掷硬币来选择。<span style="color:#0000ff;"><strong>我在大学的时候，我没时间去担心作业或者什么时候完成。我拿起一个就开始做。现在我我需要决定要写那个报告，我就挑一个主题开始写。我觉得这让是我从未觉得无从下笔的原因。</strong><strong>无从下笔就是处于停滞状态思考该写什么。</strong></span>我之所以没有为写东西浪费时间，只是因为实在太忙了。这可能也是我能轻松写出成百篇原创文章的原因。<span style="color:#ff0000;"><strong>我写的每篇文章衍生出至少两个观点，所以我的观点列表与日俱增。我无法想象这些内容会用光。</strong><strong> </strong></span>

人们经常迟迟不做决定，拖延也没什么好处。通常推迟决定觉得只会导致消极的后果，所以就算你面对困惑，咬咬牙下定决心吧。<span style="color:#0000ff;"><strong>假如是个错误的决定，你很快就能发现。</strong></span><span style="color:#ff0000;"><strong>许多人可能花超过60</strong><strong>秒的时间来决定午饭吃点什么。如果我无法决定吃什么，我就抓起一个苹果或一把香蕉开始吃，有些时候在我确定我到底想要吃什么以前，水果已经填满我的肚子。这样我的大脑明白除了水果我如果还打算吃点别的，那最好迅速决定。</strong></span>如果你可以加快决定速度，你就会节约余下来实施计划的时间。

研究表明<strong><span style="color:#ff0000;">世界上最优秀的管理者对犹豫不决都有着极高的抵制力。</span></strong>也就是说，他们在面对偏爱或者矛盾状况的时候会大胆决断。<span style="color:#ff0000;">许多当今的工业家都加快了作决定的速度，因为等到准备充足了也许机会也错过了。</span><strong><span style="color:#0000ff;">当你无路可退的时候，你只能依靠自己的经验和直觉。尽可能快速的作出决定。</span></strong>如果不能马上决定，就先放到一旁，抽个时间考虑再作决定。<strong><span style="color:#ff0000;">大把的时间应该花在行动上，而不是决定本身。</span></strong>优柔寡断是严重的时间浪费，最好不要超过60秒。作一个坚决而直接的决定，由不确定转变为确定，然后行动。出现错误就让事实告诉你，这样你就会积累足够的经验，从而作出正确而睿智的决定。

<strong> </strong>

<strong>无情的放弃</strong>

放弃一切浪费时间的事情。把它们统统扔进垃圾筒。遵循"如果怀疑，不如放弃"的准则。不要订阅那些没用的杂志。<strong><span style="color:#ff0000;">如果两个月前的杂志你至今还没有读过，扔掉它，它可能不值得一读。</span><span style="color:#0000ff;">要明白任何花时间去做的事情都是有价值的。</span><span style="color:#ff0000;">在注册新的服务或者订阅之前，问问自己那会占用你多少时间？做每一件事情都有它的机会成本。试问自己，</span></strong><span style="color:#ff0000;"><strong>"</strong><strong>它值得我为它做出牺牲吗？"</strong></span>

上大学的时候，我严格地筛选要做的每一件事情。我曾经拒绝参加一位教授安排的关于计算机科学研究的活动，因为那样的话会浪费我很多时间。那项研究大概需要10到20小时的工作时间，在如此长的时间里我将陷入繁杂的工作中，但却学不到任何我以前不知道的东西。而且那项研究仅占我课堂成绩的10%，就我以前的表现很优秀，不参加研究所导致的唯一结果就是学期成绩从A变为A-。我对教授说那是公平的并且会接受A -。我不想再去和他谈任何的特殊条件。所以那学期我的成绩是A-，<span style="color:#ff0000;"><strong>但是由于更好的利用了那些</strong><strong>10</strong><strong>到20</strong><strong>个小时，我给了自己A+</strong><strong>。</strong></span>

问自己这样的问题："如果要我把例如像研究一个课题，建立一个关系，从事一项工作等等这样不能获取新的知识的工作再做一遍的话，我还要重新开始吗？"如果你的答案是"不，"那就赶紧远离那些事情吧。这就叫做毫无意义的思考。我了解到有很多人用"做事要有始有终"这个信条来限制自己。他们花费了大量的时间去爬一架梯子，但当他们到达梯子顶端的时候才发现，原来梯子搭错了建筑，之前所做的都白费了。记住失败是你的朋友。<strong><span style="color:#ff0000;">所以，当你发现以前所做的决定不再为你现在的目标而服务时，请大胆并无情地抛弃以前的决定吧，然后去寻找更好的想法。</span></strong>人们不会以花费毕生精力去追逐一个懈怠人生的目标而自豪的。这是另一个要顾全大局的时刻。你必须坚持对你自己目前的处境进行重新的评估，然后才能为以后的发展做出正确的决定。<span style="color:#ff0000;"><strong>如果你今天不时刻审视自己决定的话，那么以前所做的一切决定都是毫无用处了。</strong><strong> </strong></span>

确定并且弥补浪费掉的时间

把一小时长的电视节目录制下来，然后在45分钟内用快进的方式跳过广告。同样一件事情，<span style="color:#ff0000;"><strong>如果用电话</strong><strong>10</strong><strong>分钟就可以解决的话，就不要花半个小时去发送一封长长的电子邮件。</strong></span>把你要做的事情放在一起，然后立刻把它们搞定。

在大学期间第二个和第三个学期之间的夏天，我发现沿着街道的一幢公寓要比我们宿舍距离工程馆近一点。所以我从宿舍搬出来并搬进了那幢沿街的公寓，这样，我每天都节省了一些步行或者骑车的时间。我原来的宿舍每个房间有三个人，而现在我拥有一个更小的，单人住小型公寓房间。新的房间效率更高，比如说，我可以在工作的同时做晚饭，因为我的书桌和炉子之间只是几步而已。

渴望提高效率的人们总是以克服浪费时间的习惯作为起点，但我却认为那是错误的。<strong><span style="color:#0000ff;">培养个人习惯来的要慢一些，首先要明确目的。</span></strong><strong><span style="color:#ff0000;">如果你没有明确目的，只是设法用高效的习惯去排挤无效的习惯，那么结果只有失败</span><span style="color:#0000ff;">。</span></strong><strong><span style="color:#0000ff;">因为你没有一个强有力的理由支持你花费时间去做有意义的事情，所以做的时候很容易就会停止。</span></strong><span style="color:#ff0000;"><strong>你需要一个宏大的，有吸引力的目标来激发自己。能从工作时间里挤出15</strong><strong>分钟的原因，就是因为你由于更好的利用这 15</strong><strong>分钟而产生的激情。</strong></span>

例如，你或许有一份还算喜欢的工作，但是从事这个工作竞争并不激烈，那么你就应该留意做每一项工作的时候都节省15分钟，这样下来，你每天一共节省下来的时间甚至有好几个小时。如果能把它们用来实现你那个深藏心底的目标，那么你将积极主动地更好地利用节省下来的时间。如果你明白真正的生活以"目的，意义，信仰"为次序，那么低水平的生活则处于"习惯，实践，行动"的自我调节状态。

应用80-20 的规则

我们都知道帕累托原理，即80-20的比例关系规则，该规则是指用20%的努力实现80%的价值。反过来，其规则也同样指代着：用80%的努力实现20%的价值。我在大学的时候严格遵守此原理。在几周的时间里我逃了40%的课，因为对于我来说，听讲座并不是学习最有效率的方式。在前文中我已经提到了因为觉得不值得花时间而拒绝参与一项课题研究的事情。同样，我在一门数学课上仅仅出席了两次，即期中和期末的时候。<strong><span style="color:#ff0000;">因为我觉得我自己看书要比听讲座学的快得多。我在每次刚上课的时候开始做家庭作业，然后在快下课的时候记录下次要讲的内容。</span><span style="color:#0000ff;">事实上，我拿了那门课的最高分，但是那个教授可能都不知道我是谁。除了我以外的其他同学都循规蹈矩的学习，而忽视了他们自己的规则。</span></strong>要找到你人生中属于那至关重要的20%的部分，然后全力以赴。如果有一些事情会浪费时间，一定要毫不犹豫地放弃它。把你的时间投资在那些可以事半功倍的事情上。

捍卫你的时间

<strong><span style="color:#ff0000;">想有效率地工作，就需要大块不间断的时间，这样才能完成有意义的工作。</span></strong><strong><span style="color:#0000ff;">当你确保自己不被打扰的时候，你的工作效率就会高的多得多。</span></strong>当你坐下来要去完成一项特别认真的工作的时候，不要做其他任何事情，专心致志投入到这段时间里吧。<span style="color:#ff0000;"><strong>我发现，一个不少于</strong><strong>90</strong><strong>分钟的时间段，对于完成一项单独的工作十分理想。</strong></span>

你需要和周围人商量一下，来保证大块不被打扰的时间。如果必要的话，提前通知他们在特定的时间里不要打扰你。有必要的话就武力威胁。在学校，当我需要工作的时候，会把寝室的门锁上，这样的话，我的室友就明白在这段时间里不要来打扰我。然而，每个独立的寝室都是为住两个人（四人套房）设计的，为此我多付了钱而拥有一个完全属于自己的寝室。于是我可以在私人的房间里工作。有空的时候，我就打开门，有时候也和室友打打游戏。<strong><span style="color:#ff0000;">如果你碰巧工作在一个经常被打扰的环境里，那么你的工作效率就会被影响，所以要不惜任何代价去改变那样的环境。</span></strong>一些人告诉我，他们曾经拿这篇文章给他们的老板看，帮助说服他/她在工作的时候设法减少不必要的打扰

对于一些人来说，划出一段特殊的时间来工作是有好处的。<strong><span style="color:#ff0000;">我的最佳工作时间是一段很长、结束时间不定、且不想被打扰的时间。我经常规定工作的开始时间，但却没有规定具体完成的时间。</span></strong>无论什么时候我都尽可能长时间的工作，直到我觉得饿了或者身体上其他的需要。我可以连续工作六个小时不休息。<span style="color:#ff0000;"><strong>虽然人们普遍认为经常休息可以提高效率，但是我觉得那种说法只是工业化时期对于那些贫困、不主动的工人们的一种人为安慰，</strong><strong>并不适用于那些主动性强、目标明确和富有创造性的人。</strong></span>我发现自己会一直工作，直到几乎不能继续为止，而不会把一项工作分成好几个小的部分去做，<span style="color:#0000ff;"><strong>因为那样的话，在工作的时候就有分心的危险。</strong><strong> </strong></span>

<strong></strong>

<span style="color:#0000ff;"><strong>每当专注于一项工作而忘了时间的时候，需要大约</strong><strong>15</strong><strong>分钟的才能进入状态。当被打扰之后，又要花费</strong><strong>15</strong><strong>分钟才能重新进入状态。</strong></span><strong><span style="color:#ff0000;">一旦你进入了状态就一定要保持住。</span></strong>这种状态让你全神贯注于大量的工作以及与工作相关的以往的经验之中。<span style="color:#ff0000;"><strong>当我处于这种状态的时候，我从来就不想过去和将来的事情。我只会想到我和我的工作。</strong><strong></strong></span>

然而有的时候，我遭遇了这样的问题。由于工作的增加而不能准时完成（帕金森定律），但我觉得很值得冒险去试一下。例如，当我优化我的网站时，经常有好的想法出现在我的脑海中。于是我立刻把我的想法付诸实践。我发现当时就执行想法要比事后安排再去做，效率会高很多。

完全投入

在一段时间里，除了做眼前的工作以外不要考虑其他任何事情。不要检查邮箱、泡论坛或者随便上网溜达。<span style="color:#ff0000;"><strong>如果有这个念头，在工作的时候断开互联网连接。关掉电话或者拒接。开始前去趟厕所，同时确保在一段时间里不会觉得饿。在此期间根本不离开椅子，也不要和人说话。</strong><strong></strong></span>

决定好了要做什么，就不要做其他事情。如果偶然被别人打扰，问他们最重要的事儿是什么，确定他们是否只是在做最重要的事。<span style="color:#0000ff;"><strong>如果这个人在回复电子邮件，那么这个时候发邮件就是他此时最重要的事。否则通常来说，这个人是在浪费时间。</strong><strong></strong></span>

如果需要休息就彻底的休息。<strong><span style="color:#0000ff;">假如你觉得自己需要恢复一下体力，那就不要边工作边休息。收邮件、上网都不是休息。</span></strong>当你休息的时候，闭眼，做深呼吸，听一些轻松的音乐或者出去走走，小睡二十分钟，或者吃点水果。一直休息到你觉得又可以努力工作。需要休息就休息，应当工作就工作。要是100%的集中精神，干脆不工作。<span style="color:#0000ff;"><strong>想休息多久就休息多久是没错的，只是别让休息时间占用了工作时间。</strong><strong></strong></span>

多线工作

特定领域的新知识增加的如此之快，以至于你的知识可能随时在变得陈旧。解决的唯一办法是尽可能的吸收新知识。今天我工作中的很多技能，在五年前根本没有。据我所知，<strong><span style="color:#ff0000;">跟上时代发展的好办法是尽可能的阅读，还有</span><span style="color:#0000ff;">听录音资料。</span></strong><strong></strong>

看电视的时候，在广告时段读计算机杂志。如果是男人，边刮胡子边读。<span style="color:#0000ff;"><strong>我每天用电动剃须刀刮脸，会在这两三分钟里读点东西。这让我每周多看了两篇文章–一年就多出</strong><strong>100</strong><strong>篇。</strong></span>这个习惯很容易开始。只要拿起几本杂志，或者打印一些没时间去读的文章，把他们放在你的卧室里。出门的时候，顺手拿一本。如果要排队，比如在邮局或者商店，就可以拿出来读了。<strong><span style="color:#ff0000;">你会惊讶于在做这些不费脑子的事情的同时，学到了多少知识。</span></strong><strong></strong>

尽可能的听一些教育录音。开车的时候就可以听。Nightingale Conant销售各个领域的专家整理的各种录音节目。大部分有六小时长，大约售价60到70美元，它们物有所值。这些节目比起到大学里上课更实用一些。在大学拿到商业或者贸易学位的人由大学教授授课，而你学同样的课程时，却是由那些百万富翁或者亿万富翁告诉你什么可行而什么不可行。<span style="color:#0000ff;"><strong>一个节约时间的好办法是直接请教那些掌握着你想学到的技能的人。</strong><strong></strong></span>

多线工作也许是让我在三个学期完成大学课程的最重要的简单技巧。通常我在工作日里有七到八小时的课程。但最后一学期的每个周二，我从早上九点到晚上十点都连着上课。因为每学期我选了12门课，每周都有不少测验和作业要做。课外的时间除了打工我没时间去学习。所以遇到什么我就不得不学什么。假如老师在黑板上写了点东西，我就记住它；我不能等过后再学，那样就有落后的危险。对那些困难的课程，我会做作业、完成程序设计算法，或者改进我的计划。你能找到无数多线工作的机会。<span style="color:#0000ff;"><strong>当你活动的时候，比如开车、做饭、购物或者走路，听磁带或者读点东西吧。</strong><strong></strong></span>

多线工作的想法似乎与之前建议的一时一事相矛盾。<strong><span style="color:#ff0000;">不过前面所谈的是高强度的工作，你必须尽全力集中所有的精神来做好它们。而这里的工作是指低强度的，能同时做其他事情的工作，比如排队、做饭、乘飞机或者从一个地方走到另一个地方。</span></strong>多线工作不能用在至关重要的任务上，否则会适得其反。需要休息就好好休息一下，但别把时间浪费在局部的成果上。在全力工作和彻底休息之间调节是更有效的。多线工作可以让你的效率提高到一个新水平。<span style="color:#ff0000;"><strong>你可能觉得这样太累，但很多人却发现效果正相反。做很多事情让我充满活力。</strong><strong>工作越努力，工作的能力就越强，休息就越有效果。</strong><strong></strong></span>

动手一试

人和人不尽相同，所以对你有效的方法可能对别人没效果。你可能上午工作效率高或者喜欢熬夜。利用你自己的特点，想办法弥补不足。试验工作的同时听音乐。我用免费的WinAMP播放器，它可以直接整天在电脑上播放各种各样的免费音乐。我发现古典音乐和新世纪音乐，特别是莫扎特，对网络开发的工作效果不佳。但是对于大多数日常事务，听那些快速的techno/ trance音乐可以让我的速度快一点。不知道为什么，<span style="color:#ff0000;"><strong>当我听快节奏音乐的时候工作效果是不听音乐的两倍。</strong>另一方面，<strong>有歌词的音乐有害的，因为它太分心了。如果我想要精神高度集中，我根本不听音乐。</strong></span>你自己试一试，看看什么样的音乐能有益于你。对我来说这些音乐的差别是戏剧性的。

当你想到一个提高效率的怪主意，先试试看效果怎么样。如果没尝试，不要轻易放弃任何想法。<strong><span style="color:#0000ff;">局部成功比全盘失败更普遍，所以每一次尝试对于时间管理实践来说都会有所帮助。</span></strong>就算正在进行的尝试愚蠢的很，不过它也会使你变得更高效。

保持激情

"enthusiasm"这个词来自希腊语的"entheos"，字面意思是"神在心中"。我很喜欢这个解释。如果对如何安排时间没有持续的激情，我怀疑掌握时间管理的艺术是不可能的。朝着真正鼓舞你的方向前进。追逐你的激情，而不是金钱。假如你对工作没有热情，你就是在浪费生命。换个工作吧。重新考虑新的职业。如果你现在的职业变得乏味，也不要丧气。记住，失败是朋友。听从内心的召唤，换一个刺激自己的工作。做那些让自己不快乐的事情是最浪费时间的。你为了自己的人生而工作，不为别的。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>405</wp:post_id>
		<wp:post_date>2010-11-03 10:23:44</wp:post_date>
		<wp:post_date_gmt>2010-11-03 02:23:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tui-jian-shi-jian-guan-li-wen-zhang-Do-it-now</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="allenlsy-ri-ji-xin-de"><![CDATA[Daily Life]]></category>
		<category domain="post_tag" nicename="gtd"><![CDATA[GTD]]></category>
		<category domain="category" nicename="reading-hai-na-bai-chuan"><![CDATA[Reading]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1288751024]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1288751024]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391570]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>wpsd_autopost</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[tui-jian-shi-jian-guan-li-wen-zhang-Do-it-now]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1281825449]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>19</wp:comment_id>
			<wp:comment_author><![CDATA[Schrodinger's Cat]]></wp:comment_author>
			<wp:comment_author_email>liqilinyeah@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>155.69.182.16</wp:comment_author_IP>
			<wp:comment_date>2010-11-14 21:46:22</wp:comment_date>
			<wp:comment_date_gmt>2010-11-14 13:46:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这个人还挺猛的，以前觉得自己挺了不起，进过监狱，然后大彻大悟牛逼了]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1289742383]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[893652291]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68</wp:comment_id>
			<wp:comment_author><![CDATA[Ddrol]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ddrol.info</wp:comment_author_url>
			<wp:comment_author_IP>96.127.191.53</wp:comment_author_IP>
			<wp:comment_date>2013-06-07 13:04:37</wp:comment_date>
			<wp:comment_date_gmt>2013-06-07 05:04:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Looking around...</strong>

While I was surfing yesterday I saw a excellent article concerning...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>70</wp:comment_id>
			<wp:comment_author><![CDATA[garage door repair phoenix]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://garagedoorrepairphoenix.info</wp:comment_author_url>
			<wp:comment_author_IP>64.120.193.149</wp:comment_author_IP>
			<wp:comment_date>2013-06-17 23:42:30</wp:comment_date>
			<wp:comment_date_gmt>2013-06-17 15:42:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Blogs ou should be reading...</strong>

[...]Here is a interesting artice You could Find Interesting that we Encourage You to visit[...]Ö...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>网络黑社会</title>
		<link>http://allenlsy.com/2011/02/wang-luo-hei-she-hui/</link>
		<pubDate>Thu, 24 Feb 2011 05:53:55 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">https://allenlsy.wordpress.com/2011/02/24/%e7%bd%91%e7%bb%9c%e9%bb%91%e7%a4%be%e4%bc%9a/</guid>
		<description></description>
		<content:encoded><![CDATA[<p><font size="3">&#160;&#160;&#160;&#160;&#160;&#160;&#160; 近三十多年来，中国进口了西方最坏的价值观，这些价值观击中中国人的软肋：一个是成功主义，穷国乍富，万事以成功为标准，一切皆工具化、金钱化、功利化。另一个是消费主义，将中国变成一个大卖场，将职场、官场、学校、医院变成一个大卖场。还有一个就是阴谋论，凡事只看到它坏的一面，只要一提丑闻就假定它是真的，宁信其有不信其无。当然，这阴谋论就与西方无关了，本土就有源远流长的厚黑学。</font><font size="3">     <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; 不错，中国崛起了，可以对西方说不了。但这并没有得到他们的尊重。因为我们捡起了他们丢掉的东西，为他们所不齿。      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; 史学家评论说，“文革”释放了人性中最恶的一面，其破坏力让社会面临崩溃。今天网络正释放人性中最下作的一面。网站只要有点击量，无所不用其极。      <br />看看各大门户网站的焦点新闻，上面是央视新闻，中间是国际报道和房市股市新闻，下面就是娱乐八卦和社会奇闻了。“下面的”新闻直奔下三路，有人看了会不舒服。但网络浏览量监测报告称，恰恰是这部分贡献了最大点击量。而点击量是网络广告投放的首要依据。      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; 一位传媒同仁自嘲说，现代中国人生活节奏快，无暇顾及沉重严肃的事情，只关心下三路的东西，越腥臭越耸动越好。      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; 再看看网络上兴风炒作的个人，为博眼球无所不为，他们摆POSE、撂狠话、晒隐私，掀起一波又一波网络狂欢，败坏着这个民族原本就可怜可叹的品位。个人媒体正在兴起，我相信那些“超级个人”背后是一个炒作班子，是一门生意。有言道：微博粉丝超过一百，你就好比是本内刊;超过一千，你就是个布告栏;超过一万，你就是本杂志;超过十万，你就是一份都市报;超过一百万，你就是一份全国性报纸;超过一千万，你就是电视台，超过一亿，你就是CCTV了。      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; 凭借网络那些“超级个人”荣升为意见领袖，这是好事，有助于打破铁板一块的舆论格局。但意见领袖们也可以为一己之利误导苍生。美国社会学家兼传播学家拉扎斯菲尔德早在上个世纪40年代在“人民的选择”的理论假说中就认为，大众传播的信息和影响不是直接流向一般受众的，而是要经过意见领袖的中介，即大众传播→ 意见领袖→普通受众。      <br />博客和微博即是两极传播理论中的意见领袖，靠原创或转发或重组新闻成为资讯源，资讯的源头变得越来越不重要了，关键看是谁发出的这条资讯。比如，关于房价人们宁愿看潘石屹发的博客或微博，因为他是名人，因为他有信仰，有信仰不打诳语;人们宁愿信他而不信有关专家。任志强的情况也类似，他敢 “任我评说”就是因为不惧板砖“说真话”。      <br />意见领袖也应当承担公器之责。假如你是宋祖德，丑话请当面讲，不要在背后放假信息操纵舆论。因为中国人当下的人性弱点是趋丑的、趋恶的，宁可信其有的，灰色公关正是击中了我们的人性弱点。      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; 你更不能打着青年导师的幌子，大讲成功学，背后却行不良之事。误导青年，断人慧根，那是要下十九层地狱的。      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; 电影的绯闻营销已不是新奇，公关组雇人骂影片也是手段之一。因为有点击量就有票房。只是这种无害的八卦可以调剂生活。电影出品人本无伤大雅，赚点票房也无所谓。茶余饭后八卦一下，下三路一下，本为人生解压，无可厚非。但其中如果包藏邪恶的种子，就会像吃出一只苍蝇，令人恶心，并令本已岌岌可危的社会信任面临崩溃。      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; 只有那些带着利益，又站在道德制高点上毁人者才是可恶的。用人们残存的善良之心来营销是更可恶的。灰色公关只是企业宣传链条中的一环。各种传媒包括网站是灰色公关的平台，它们既要市场、要效益，还要高举品牌大旗，高举公信力大旗。这就大可值得追究了。      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; 传媒界的对骂、攻讦，相互踢爆发行量，指责对方作假，自己却忙不迭地卖身，“又要卖，又想立牌坊”。如今的传媒炒作，不是新闻策划，而是策划新闻，策划受众的注意力，有注意力就有经济，所谓注意力经济。注意力经济也是中国进口的最坏的一个词。      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; “虚荣是我最爱的原罪”，这是电影《魔鬼布道者》里的经典台词，用到我们这个穷国乍富恰到好处。《魔鬼代言人》代言了现代人的心底，自由意志与宿命，职业伦理与成功，灵与肉……但只有ps教程的人才会有如此强烈的内心冲突。我想，蒙牛“公关门”中的中国人则不会，他们干得心安理得，干得暗自得意。传媒就是虚荣的好载体，虚荣的传媒遇到虚荣的人就气味相投了。</font></p>  <p><font size="3"></font></p>  <p><font size="3">转自《南都周刊》</font></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>512</wp:post_id>
		<wp:post_date>2011-02-24 13:53:55</wp:post_date>
		<wp:post_date_gmt>2011-02-24 05:53:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wang-luo-hei-she-hui</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="reading-hai-na-bai-chuan"><![CDATA[Reading]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1298526836]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1298526836]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391653]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1285539848]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Redhat 参观</title>
		<link>http://allenlsy.com/2011/04/Redhat-can-guan/</link>
		<pubDate>Wed, 13 Apr 2011 16:15:04 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=513</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://allenlsy.com/wp-content/uploads/2011/04/img_0140.jpg"><img class="alignnone size-full wp-image-514" title="IMG_0140" src="http://allenlsy.com/wp-content/uploads/2011/04/img_0140.jpg" alt="" width="630" height="470" /></a>

今天下午去了Redhat公司进行一次学习参观。这样的参观，可以见识到一个公司氛围从硬件上应该如何营造，以及能认识一些道上的同仁。
比如给我留下比较深刻印象的是会议室外面的风景。面对的是marina bay，能看到Nicole Highway川流不息的车辆。我非常想把这一幕做成Windows 7的动态桌面，取名为The developing Singapore。这样的环境下，即能看到美丽的海景，又能在林立的高楼中感受到都市的繁华，看到繁华背后无数人正在拼命工作，压力与动力共存，实在非常适合静下来编程。
Redhat为我们准备了可口的糕点、三明治和果汁，对于这样的大公司来说，这只能算是非常普通的家庭餐了。没关系。
据回忆，这次前来的学生有8个男生和5个女生，可惜我们没有合影。其中还是南大和国大的居多了。

会议的一些笔记
1. What does Redhat Asia Pacific do?
- Distribution, sales, localization and internationalization
- Beijing: Hardware certification
- Isreal: Virtualization
- Singapore: legal, training, sales, marketing

2. How to land a job in Redhat?
- develop a OSS, attract Redhat, then Redhat will hire you

3. What is the relationship between Redhat and Fedora?
- Redhat helps the JBoss and Fedora project. So it helps the OS community to grow. In the OS Community, every organization shares technique and knowledge.

4. Obstacles to use OSS
- People don't know OSS
- no enough softwares
------------------------

After the meeting, one can further look at:
the business model of Redhat

Some keywords mentioned in the meeting:
slackware, JBoss, cloud computing, Amazon, cygnus, stuxnet, freshmeat.net

另外补充一下第3个问题。我们讨论了Redhat的商业模式。OSS业内的公司大多也是这么做的。Redhat确实是在做Fedora，他为Fedora基金会提供技术支持，所以Fedora基本上可以算是Redhat的产品。这个产品是免费的，它上面的应用程序绝大多数没有经过软件测试。对于企业来说，一旦出问题，后果非常严重。Redhad enterprise是经过工程师们严格测试的产品，它采用订阅的销售模式。用户可以免费下载到Redhat，但是如果没有订阅，就得不到Redhat公司的更新维护。这就好像订阅报纸一样。订阅一年的报纸，你就需要交一年的钱。如果不订阅的话，就得不到Redhat的支持了。这不是开玩笑的。OSS开源之后，很多hacker在研究如何攻击它，这比Windows攻击起来要容易很多。Amazon和NYSE这样的机构的系统都是搭建在Redhat之上的。当然，研究攻击的人多，研究防守的人也不少。所以更新和补丁就显得尤为重要。

Redhat企业版的价格根据版本而有不同，最低的$349每年，最高的$8600每年。

最后提一下，Google Singapore在同一栋大楼的38楼
<a href="http://allenlsy.com/wp-content/uploads/2011/04/img_0142.jpg"><img class="alignnone size-full wp-image-515" title="IMG_0142" src="http://allenlsy.com/wp-content/uploads/2011/04/img_0142.jpg" alt="" width="630" height="470" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[今天下午去了Redhat公司进行一次学习参观。这样的参观，可以见识到一个公司氛围从硬件上应该如何营造，以及能认识一些道上的同仁。
比如给我留下比较深刻印象的是会议室外面的风景。面对的是marina bay，能看到Nicole Highway川流不息的车辆。我非常想把这一幕做成Windows 7的动态桌面，取名为The developing Singapore。这样的环境下，即能看到美丽的海景，又能在林立的高楼中感受到都市的繁华，看到繁华背后无数人正在拼命工作，压力与动力共存，实在非常适合静下来编程。
Redhat为我们准备了可口的糕点、三明治和果汁，对于这样的大公司来说，这只能算是非常普通的家庭餐了。没关系。
据回忆，这次前来的学生有8个男生和5个女生，可惜我们没有合影。其中还是南大和国大的居多了。]]></excerpt:encoded>
		<wp:post_id>513</wp:post_id>
		<wp:post_date>2011-04-14 00:15:04</wp:post_date>
		<wp:post_date_gmt>2011-04-13 16:15:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>Redhat-can-guan</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="allenlsy-ri-ji-xin-de"><![CDATA[Daily Life]]></category>
		<category domain="post_tag" nicename="redhat"><![CDATA[redhat]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1302711305]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_fb</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1302711305]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_fb</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391654]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1285537614]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>自问，随时都应该能回答上来的问题</title>
		<link>http://allenlsy.com/2011/04/zi-wen-sui-shi-dou-ying-gai-neng-hui-da-shang-lai-de-wen-ti/</link>
		<pubDate>Sun, 24 Apr 2011 15:29:09 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=527</guid>
		<description></description>
		<content:encoded><![CDATA[列举出来的这些问题，肯定不能覆盖生活的每个方面。但是我觉得这些问题已经太基础了，也不需要回答太多问题。如果还不能回答以下所有问题，建议花一两个小时，甚至半天时间，把这些问题回答了，记在纸上，再记在脑子里。

<strong>- 时间利用相关</strong>
<p style="padding-left:30px;">* 今天要完成什么？</p>
<p style="padding-left:30px;">* 这一周内要完成什么？</p>
<p style="padding-left:30px;">* 这一个月要完成什么？</p>
<p style="padding-left:30px;">* 这一年哪些方面希望得到提高？怎么做到？</p>
<p style="padding-left:30px;">* 未来一周、一个月内，我的时间是相对充裕还是紧张？</p>
<p style="padding-left:30px;">* 最近两周内一定要读完哪本课外书？</p>
<p style="padding-left:30px;">* 我对今天这一天的生活是否满意吗？</p>
<p style="padding-left:30px;">* 在什么样的时间、地点，什么样的温度环境下，我的工作效率最高？</p>
<strong>- 人格相关</strong>
<p style="padding-left:30px;">* 我的优点是什么？我的缺点是什么？缺点怎么克服？</p>
<p style="padding-left:30px;">* 身边的人中，我最佩服谁？为什么？</p>
<strong></strong><strong>- 未来相关</strong>
<p style="padding-left:30px;">* 找女朋友的目的是为了什么？</p>
<p style="padding-left:30px;">* 这辈子希望过什么样的生活？未来一年、三年、五年、十年应该走到什么高度？其间可能出现什么变数？</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>527</wp:post_id>
		<wp:post_date>2011-04-24 23:29:09</wp:post_date>
		<wp:post_date_gmt>2011-04-24 15:29:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>zi-wen-sui-shi-dou-ying-gai-neng-hui-da-shang-lai-de-wen-ti</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="allenlsy-ri-ji-xin-de"><![CDATA[Daily Life]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1303658951]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_fb</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1303658951]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_fb</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391660]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1285537609]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Facebook的网站架构</title>
		<link>http://allenlsy.com/2011/04/Facebook-de-wang-zhan-jia-gou/</link>
		<pubDate>Mon, 25 Apr 2011 15:26:24 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=536</guid>
		<description></description>
		<content:encoded><![CDATA[最近读了一片文章，觉得值得精读一下。原文在这里：

<a title="What is Facebook's Architecture?" href="http://www.quora.com/What-is-Facebooks-architecture" target="_blank">http://www.quora.com/What-is-Facebooks-architecture</a>
<h3></h3>
<h3><strong>前端</strong></h3>
<p style="padding-left:30px;">大家都知道Facebook的网页是由php写出来的。实际上Facebook上有一个神秘的<span style="color:#ff0000;">Hiphop</span>项目，它负责把php代码转成C++。这样能优化php。Hiphop这个项目的负责人是北大1987届遗传与分子生物专业毕业生，普林斯顿CS博士赵海平。Hiphop为Facebook的服务器减少了50%的CPU使用率。Facebook曾经尝试了很多办法优化网站，甚至重写了<span style="color:#ff0000;">Zend</span>引擎，并且提交给了PHP项目，但都没能达到目标，后来才选择了Hiphop。Hiphop的原理是，在php转C++的过程中实现了三步操作：静态分析（分析依赖关系）-&gt;类型推演（选择合适的C++变量类型）-&gt;代码生成。此项目总共30万行代码，在google groups上有讨论。<a href="http://groups.google.com/group/hiphop-php-dev">http://groups.google.com/group/hiphop-php-dev</a>。</p>
<p style="padding-left:30px;">Facebook在Http在传输时使用了<span style="color:#ff0000;">BigPipe</span>。有兴趣的同学可以去查查这方面的资料。简单的说它是一个Web服务器和浏览器之间建立的一种不同传统http模式的传输方式。网上普遍用的加速方法有延迟javascript的加载或者并行下载等方式。BigPipe当然也有并行的思想。它最重要的地方是调整了一些请求的发送顺序，实现了网页加载的加速。当Web服务器挣在生成页面时，此时的浏览器正处于闲置状态。如何让Web服务器产生时间和浏览器的Rendering时间重合呢？BigPipe采用的是分解页面的办法。不多说了。</p>
<p style="padding-left:30px;">Facebook使用了<span style="color:#ff0000;">Varnish Cache</span>实现的<span style="color:#ff0000;">反向代理服务器</span>技术。普通的代理服务器技术是，客户手动配置Proxy，把请求发给Proxy，由Proxy转发给Web服务器。Web服务器并没有配置和使用这个Proxy。反向代理服务器的最大不同是，Web服务器配置了这个Proxy，而用户没有配置它。比如当Facebook用户把请求发给一个IP地址时，以为发给了Facebook的服务器，其实可能只是发给了Facebook的Proxy。这个Proxy负责把请求发给Facebook的内部服务器组。这样黑客如果黑这个IP，其实对Facebook影响不大，因为数据并不在Proxy上面。Varnish Cache的开发者是丹麦人Kamp，他也是FreeBSD的内核开发者之一。</p>
<p style="padding-left:30px;">在Operating Systems Design and Implementation 2010上有一篇论文，讲了Facebook所使用的<span style="color:#ff0000;">Haystack</span>图片存储系统。Facebook目前有260Billion张图片，总共20PB，平均每张800KB，并且数据量还在以每周60TB的速度增长。Haystack的使用动机解释起来有点复杂。主要原理是让多个逻辑文件共享一个物理文件。就好像是非常多的图片文件和并称了一个大文件，这个文件格式是Facebook自行设计的，再在里面搞些Indexing。搜索图片时，实际上用的又是它自行设计的查找算法，这样完全绕过了操作系统的文件查找算法。在Google论文中搜索Finding a needle in Haystack: Facebook's photo storage可以查到更多资料。</p>

<h3>业务逻辑层</h3>
<p style="padding-left:30px;">这一层是Facebook自己的核心项目<span style="color:#ff0000;">Thrift</span>，后来开源了。它的主要目的是实现各种不同编程语言间的相互通信，包括C++、Java、python、ruby、C#、erlang、cocoa、php等等。这些语言之间通过XML或者JSON来传递数据。Apache已经将Thrift列入孵化器项目中了。请见 http://incubator.apache.org/thrift。据说是Facebook觉得tomcat服务器太重量级了，所以他们用Java些的Services都没有架在公开的服务器框架上，而是只供Thrift使用。</p>

<h3>数据访问层</h3>
<p style="padding-left:30px;">这是所谓的持久化操作，由M<span style="color:#ff0000;">ySQL</span>、<span style="color:#ff0000;">Memcached</span>、Facebook自己的<span style="color:#ff0000;">Cassandra</span>、Hadoop的<span style="color:#ff0000;">HBase</span>一同完成。</p>
<p style="padding-left:30px;">Memcached是一套高效的分布式内存缓存框架，它能减少对象读取数据库的次数。作者Anatoly Vorobey是以色列理工大学毕业的，年纪也不小了。另一名作者是华盛顿大学毕业的Brad Fitzpatrick。他的成名作其实是LiveJournal。</p>
<p style="padding-left:30px;">Cassandra是一个非关系型数据库，也是Facebook自己开发的，现在开源了。它是一个分布式的数据库系统，而不是一个单纯的数据库。对于一个分布式数据库进行一次读写，这条命令会被路由到所有的数据库节点上去。Cassandra具有很好的扩展性和稳定性，这对Facebook来说是极其重要的。</p>
<p style="padding-left:30px;">HBase是Apache Hadoop项目的一个子项目。Hadoop项目本身是提供分布式计算的。这里说的是计算，主要功能不是上面的数据库存储。HBase是基于Hadoop之上做的一个分布式数据库，其名字表明它就是Hadoop Database的意思，主要实现分布式储存。理论基础来自于Chang et al所写的Goole论文Bigtable。现在普遍认为HBase是Bigtable的开源实现（因为Google自己还实现了一套Bigtable）。</p>
<p style="padding-left:30px;">Facebook的工程师说他们正在减少Cassadra的使用，因为他们更喜欢HBase，因为那个更简单好用。</p>

<h3>硬件</h3>
<p style="padding-left:30px;">最近炒得很火热的Facebook在俄勒冈州的新数据中心，有超过60000台服务器。当然和Google一样，这些服务器都是自己设计的。这个数据中心将支持Facebook提出的Open Compute项目。很多人对这个项目进行很多有趣的评论。因为对于Google和Amazon来说，他们的数据中心技术是严格保密的。Facebook竟然公开了类似的顶尖技术，就好像跟Google示威说，以后人人都能学会如何搭建这样的Web数据中心。</p>
稍微娱乐一下。

一是今天看到了一张图，是由Facebook的一个实习生Paul Butler制作的。他把Facebook的5亿用户的用户关系还出来了。是哪里一片漆黑了呢？
<a href="http://sphotos.ak.fbcdn.net/hphotos-ak-snc4/hs1382.snc4/163413_479288597199_9445547199_5658562_14158417_n.jpg">点击查看原图，3.8M高清</a>
二是，据说在Google Images上搜索cstring会有意想不到的结果。我感到很抱歉，为什么会这样？

一些参考资料：
<p style="padding-left:30px;"><a href="http://www.facebook.com/notes.php?id=9445547199">http://www.facebook.com/notes.php?id=9445547199</a></p>
<p style="padding-left:30px;"><a href="http://www.infoq.com/presentations/Facebook-Software-Stack">http://www.infoq.com/presentations/Facebook-Software-Stack</a></p>
<p style="padding-left:30px;"></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>536</wp:post_id>
		<wp:post_date>2011-04-25 23:26:24</wp:post_date>
		<wp:post_date_gmt>2011-04-25 15:26:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>Facebook-de-wang-zhan-jia-gou</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="architecture"><![CDATA[architecture]]></category>
		<category domain="category" nicename="server-fu-wu-qi"><![CDATA[Server]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1303745187]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_fb</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1303745187]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_fb</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391661]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>wpsd_autopost</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[Facebook-de-wang-zhan-jia-gou]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1285537343]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>你真正了解LWN图书馆的CS分馆吗？</title>
		<link>http://allenlsy.com/2011/05/ni-zhen-zheng-liao-jie-LWN-tu-shu-guan-de-CS-fen-guan-ma/</link>
		<pubDate>Sun, 22 May 2011 16:37:57 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">https://allenlsy.wordpress.com/2011/05/23/%e4%bd%a0%e7%9c%9f%e6%ad%a3%e4%ba%86%e8%a7%a3lwn%e5%9b%be%e4%b9%a6%e9%a6%86%e7%9a%84cs%e5%88%86%e9%a6%86%e5%90%97%ef%bc%9f/</guid>
		<description></description>
		<content:encoded><![CDATA[<p><font size="3">只是跟大家分享一下LWN到底有哪些关于CS技术方面的书，学术方面的我就不管了。走到自己专业的书架前，别人问起这本书是关于啥的，如果你连书名都看不懂，总不应该吧？</font></p>  <p><font size="3">下面这些Keywords，有关于<strong>软件</strong>的，有的是<strong>技术</strong>，有的是<strong>工具</strong>，有的是<strong>协议</strong>，杂七杂八的什么都有。我大致（大致！）地分了个类，随手做了点注释，分类分得不好也就别挑我的毛病了。也就是说，这些资料LWN都有，我们多多去refer。</font></p>  <p>   <br /><font size="3"><strong><font size="5"></font></strong></font></p>  <h2><font size="3"><strong><font size="5">- Windows相关</font></strong></font></h2>  <p><font size="3"><strong><font size="5">         <br /></font></strong>&#160;&#160;&#160; - Powershell, DCOM, Active Directory, WMI, IIS, ISAPI      <br />&#160;&#160;&#160; <br /><strong><font size="5"></font></strong></font></p>  <h2><strong><font size="5">- Microsoft相关</font></strong></h2>  <p><font size="3"><strong><font size="5">         <br /></font></strong>&#160;&#160;&#160; - F#, Silverlight（RIA工具）, LINQ, NHibernate, Webmatrix, Avalon, Atlas, WPF, WCF, IronPython（.net下的python）, ForeFront, BizTalk, CardSpace, Sharepoint, Expression（页面设计工具）, DotNetNuke（CMS框架）      <br />&#160;&#160;&#160; <br /><strong><font size="5"></font></strong></font></p>  <h2><strong><font size="5">- Java相关</font></strong></h2>  <p><font size="3"><strong><font size="5">         <br /></font></strong><strong></strong></font></p>  <h3><strong><font size="5"></font></strong>&#160;&#160;&#160; <strong>- 工具</strong></h3>  <p><font size="3"><strong>       <br /></strong>&#160;&#160;&#160;&#160;&#160;&#160;&#160; Ant（编译打包工具）, Maven2（团队协作工具）, Cargo（部署工具）, CVS, svnserve, CruiseControl（持续集成工具）, LuntBuild（持续集成构建）, Cobertura（代码覆盖率检查）, Hudson（持续集成工具）, Openfire(Jive Messenger), JUnit（开源测试框架）, TestNG（测试框架）, DBUnit（基于JUnit的扩展框架，专用数据库测试）, JUnitPref, JMeter（压力测试工具，来自Apache）, SoapUI（测试，测试网站负载能力）, FEST（测试）, PMD（静态分析工具）, FindBugs（静态分析工具）, Jupiter（用于Code review）, Mylyn（任务管理）, QALab, Bugzilla, iReport（Report生成）, JesperReport（Report生成）, Log4j, BIRT（给Eclipse的Reporting tool）</font><font size="3">     <br /><strong></strong></font>    <h3><strong>&#160;&#160;&#160; - 语言</strong></h3>    <p><strong>       <br /></strong>&#160;&#160;&#160;&#160;&#160;&#160;&#160; AspectJ, JRuby, JavaFX，POJO（Plain old java object），Groovy（一种用java写的语言）</p>    <p>     <br /><strong></strong></p> </p>  <h3><strong>&#160;&#160;&#160; - 框架</strong></h3> <font size="3">   <p><strong>       <br /></strong>&#160;&#160;&#160;&#160;&#160;&#160;&#160; Tapestry（Apache的MVC框架），Jini，Geronimo（又一个Apache框架），DWR，SEAM（Java下做RIA的）      <br /><strong></strong></p> </font>  <h3><strong>&#160;&#160;&#160; - Other</strong></h3> <font size="3"><strong>     <p>       <br /></p>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; JBoss      <br />&#160;&#160;&#160; </strong>    <h2>- C/C++</h2>    <br />&#160;&#160;&#160; - Qt, STL,&#160; C++/CLI, ANSI C++, ATL（Active Template Library）    <br />    <p>     <br /></p>   <strong><font size="4"></font></strong></font>  <h2><strong><font size="4">- Mac OS相关</font></strong></h2> <font size="3">   <p><strong><font size="4">         <br /></font></strong>&#160;&#160;&#160;&#160;&#160; - AppleScript, Mono（Linux下的.net工具）      <br />&#160;&#160;&#160; <br /><font size="4"><strong></strong></font></p> </font>  <h2><font size="4"><strong>- Linux相关（大多是操作系统）</strong></font></h2> <font size="3">   <p><font size="4"><strong>         <br /></strong></font>&#160;&#160;&#160;&#160;&#160; - Samba, Solaris, CentOS, FreeBSD, OpenSUSE, KDE, SELinux</p> </font>  <h2><font size="3"><font size="4"><strong>- Adobe技术相关</strong></font></font></h2> <font size="3"><font size="4"><strong>       <p>         <br /></p>     </strong>&#160;&#160;&#160; - Air, Flex, Cairngorm（网络前台）, BlazeDS, ColdFusion（Web工具）      <br />&#160;&#160;&#160; <br /></font></font>  <h2>- Other Framework（不管是干嘛的framework都放进来了）</h2>  <p><font size="3">     <br /></font></p>  <h3>&#160;&#160;&#160; - Javascript</h3>  <p><font size="3">     <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; - Prototype, jQuery      <br /></font></p>  <h3>&#160;&#160;&#160; - Other</h3>  <p><font size="3">     <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; Grails（Groovy framework）, Stellent, Pylons（Python的web framework）, Django（Python的web framework）, CodeIgniter（php web frameword）, Joomla！（一个CMS）, Drupal（一个CMS）      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; <br /></font></p>  <h2>- Other Language Related</h2>  <p><font size="3">     <br />&#160;&#160;&#160; - AOP(Aspect oriented programming), Ruby, Ruby on Rails, wxPython, Prolog, Latex, Delphi      <br />&#160;&#160;&#160; <br /></font></p>  <h2>- Graphics</h2>  <p><font size="3">     <br />&#160;&#160;&#160; RenderMonkey, OpenGL, Blender, SIO2      <br />&#160;&#160;&#160; <br /></font></p>  <h2>- Software Engineering</h2> <font size="3">   <p>     <br />&#160;&#160;&#160; - Refactoring（著名的重构概念）, TSP, PSP, Scrum, SOA</p>     </font>  <h2><font size="4"><font>- </font><font>Database</font></font></h2> <font size="3"></font>  <p><font size="3">&#160;&#160;&#160; TOAD, Perl DBI, SQLite, COBRA, PostgreSQL, BerkeleyDB（跟伯克利没啥关系）     <br />&#160;&#160;&#160; <br /></font></p>  <h2>- Other Web related</h2>  <p><font size="3">     <br />&#160;&#160;&#160; XSLT, TCL/TK, WebDAV（一种通信协议）, MAPI, LDAP（有时候看到最后的P都猜到是啥了）, RIA, E4X, Laszlo, RESTFul, GWT, Nagios（网络监控工具）      <br />&#160;&#160;&#160; <br /></font></p>  <h2>- Other</h2>  <p><font size="3">     <br />&#160;&#160;&#160; - MythTV, ABAP, Brownfield, OS/2, K2 Blackpearl, ArcView, SlickEdit（一款很贵的IDE）, TinyOS, PGP, Citrix公司, Sybase, SEO, WebSphere, Wikis, SAP, HaXe（一个编程语言）, Neko（一个编程语言）      <br />&#160;&#160;&#160; <br /></font></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>558</wp:post_id>
		<wp:post_date>2011-05-23 00:37:57</wp:post_date>
		<wp:post_date_gmt>2011-05-22 16:37:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ni-zhen-zheng-liao-jie-LWN-tu-shu-guan-de-CS-fen-guan-ma</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="allenlsy-ri-ji-xin-de"><![CDATA[Daily Life]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1306082278]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_ms</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1306082278]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_ms</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391663]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1281825445]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>54</wp:comment_id>
			<wp:comment_author><![CDATA[ダコタバッグ]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.dakotaseiru.com/</wp:comment_author_url>
			<wp:comment_author_IP>199.15.234.80</wp:comment_author_IP>
			<wp:comment_date>2013-05-16 18:53:37</wp:comment_date>
			<wp:comment_date_gmt>2013-05-16 10:53:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>ダコタバッグ...</strong>

If you choose to use grape concentrate, keep in mind that you will need to use high quality grape concentrate....]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>57</wp:comment_id>
			<wp:comment_author><![CDATA[rimonabantexcellence site title]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.rimonabantexcellence.com/t.php?aHR0cDovL2FsbGVubHN5LmNvbS8yMDExLzA1L25pLXpoZW4temhlbmctbGlhby1qaWUtTFdOLXR1LXNodS1ndWFuLWRlLUNTLWZlbi1ndWFuLW1hLw==</wp:comment_author_url>
			<wp:comment_author_IP>94.23.238.222</wp:comment_author_IP>
			<wp:comment_date>2013-05-21 23:28:21</wp:comment_date>
			<wp:comment_date_gmt>2013-05-21 15:28:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Hello http://allenlsy.com/2011/05/ni-zhen-zheng-liao-jie-LWN-tu-shu-guan-de-CS-fen-guan-ma/ [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>61</wp:comment_id>
			<wp:comment_author><![CDATA[propecia]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.treintadetreinta.org/propecia.html</wp:comment_author_url>
			<wp:comment_author_IP>94.23.238.222</wp:comment_author_IP>
			<wp:comment_date>2013-05-23 17:23:37</wp:comment_date>
			<wp:comment_date_gmt>2013-05-23 09:23:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] propecia propecia [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>81</wp:comment_id>
			<wp:comment_author><![CDATA[jnciouen804ur]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://jnciouen8404ur.com/</wp:comment_author_url>
			<wp:comment_author_IP>173.208.36.148</wp:comment_author_IP>
			<wp:comment_date>2013-09-14 12:08:22</wp:comment_date>
			<wp:comment_date_gmt>2013-09-14 04:08:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Blogs you should be reading...</strong>

please visit the sites we follow, including this one, as it represents our picks from the web...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>.net 4.0中出现的几个service的区别和解释</title>
		<link>http://allenlsy.com/2011/06/net-4-0-zhong-chu-xian-de-ji-ge-service-de-qu-bie-he-jie-shi/</link>
		<pubDate>Wed, 08 Jun 2011 03:35:27 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">https://allenlsy.wordpress.com/2011/06/08/net-4-0%e4%b8%ad%e5%87%ba%e7%8e%b0%e7%9a%84%e5%87%a0%e4%b8%aaservice%e7%9a%84%e5%8c%ba%e5%88%ab%e5%92%8c%e8%a7%a3%e9%87%8a/</guid>
		<description></description>
		<content:encoded><![CDATA[<p><span>首先说web service的概念。它是一个向外部提供软件内部功能的手段。这里的内部外部，可以是一个软件内部组件向另一个组件提供服务，也可以是一个软件整体向另一个软件提供服务，只是那个软件通过RPC调用服务。web service是基于这个思想的。另外 Web service具有行业标准，比如最重要的是数据传输标准，使用XML/SOAP的传输协议。这个协议是在HTTP或者FTP的支持下运行的。之所以有这个标准，是为了让各种不同的实现web service的技术能够相互通信。因为web service出现的前夜，各技术使用的通信协议很不一样，比如有DCOM, RMI, CORBA，乱得一团糟。使用统一的XML就解决了这个问题。</span></p>

<p><span>.net开发中可能会遇到以下一些service，概念是容易搞混的</span></p>

<ul>
    <li><span><strong>Web Service</strong>：出现于.net 2.0时代。它提供一个很普通web service。用asp.net及相关技术实现。但它有很多缺陷，主要体现在安全性方面，没有提供授权、验证之类的架构。第三方是可以篡改消息中的内容的。对电子商务网站来说很不可靠。</span></li>
<ul>
    <li><span><strong>WCF Service</strong>：出现于.net 3.0时代，它的具体实现据说也是用的2.0的代码。它完全能够替代Web Service，在Web Service基础上，它在安全性、分布式管理啊等方面有很大提高。它的实际意思是<strong>WCF RIA Service</strong>。之所以有RIA在里面，和微软提出的MVVM的架构有不小的关系。WCF RIA Service看起来很像是为这个架构量身定做的。顺便提下，在也许是VS2010刚发布的一些版本中，WCF RIA service显示为<strong>.Net RIA Service</strong>。如果你打过补丁，这个名字就应该被替换掉了</span></li>
    <li><span><strong>Domain Service</strong>：它是向外界暴露DAL(Data Access Layer)的一个WCF Service，就算是特殊的WCF Service吧。因为真正的WCF Service一般都是暴露BLL(Business Logic Layer)或者称为BCL(Business Control Layer)的功能。另外提一下的是，最近我在做Silverlight的开发。里面用到了MVVM的架构，向V层提供本地的M层的服务，通过domain service实现是个很常见的方式。</span></li>
    <li><span><strong>WCF Data Service</strong>：它也是向外界暴露DAL的，但是它支持REST这种架构理念。在传输使用的数据格式上没有太多限制，XML和JSON都支持。它的前身是<strong>ADO.Net Data Service</strong>。大家都知道ADO.Net entity framework。ADO.Net Data Service就是把EF封装成服务给外界去用，但ADOEF是不支持REST的。</span></li>
</ul>
</ul>

<p><span>这里有个WCF的结构图</span><img role="img" class="wp-image-726" style="display:block;float:none;margin-left:auto;margin-right:auto;" src="http://blogs.msdn.com/blogfiles/endpoint/WindowsLiveWriter/WCFDataServicesRIAServicesAlignmentQuest_9CA8/WcfOverviewDiagram_thumb_8.png" alt="" width="545" height="410" /></p>

<p><span>这下算把这几个confusing的概念理出来了。</span></p>

<p><span>推荐参考：</span></p>

<ol>
<li><p><a href="http://forums.silverlight.net/forums/p/228959/556599.aspx">http://forums.silverlight.net/forums/p/228959/556599.aspx</a></p></li>
<li><p><a href="http://stackoverflow.com/questions/334639/wcf-rest-vs-ado-net-data-services"><span style="color:#000000;">WCF REST vs. ADO.NET Data Services</span></a>, <a href="http://stackoverflow.com/questions/334639/wcf-rest-vs-ado-net-data-services">http://stackoverflow.com/questions/334639/wcf-rest-vs-ado-net-data-services</a></p></li>
<li><p>WCF, Data Services and RIA Services Alignment Questions and Answers, <a href="http://blogs.msdn.com/b/endpoint/archive/2010/01/04/wcf-data-services-ria-services-alignment-questions-and-answers.aspx">http://blogs.msdn.com/b/endpoint/archive/2010/01/04/wcf-data-services-ria-services-alignment-questions-and-answers.aspx</a></p></li>
</ol>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>559</wp:post_id>
		<wp:post_date>2011-06-08 11:35:27</wp:post_date>
		<wp:post_date_gmt>2011-06-08 03:35:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>net-4-0-zhong-chu-xian-de-ji-ge-service-de-qu-bie-he-jie-shi</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net"><![CDATA[asp.Net]]></category>
		<category domain="post_tag" nicename="silverlight"><![CDATA[silverlight]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[WCF]]></category>
		<category domain="category" nicename="web-development"><![CDATA[Web Development]]></category>
		<category domain="post_tag" nicename="web-service"><![CDATA[web service]]></category>
		<wp:postmeta>
			<wp:meta_key>tagazine-media</wp:meta_key>
			<wp:meta_value><![CDATA[a:7:{s:7:"primary";s:135:"http://blogs.msdn.com/blogfiles/endpoint/WindowsLiveWriter/WCFDataServicesRIAServicesAlignmentQuest_9CA8/WcfOverviewDiagram_thumb_8.png";s:6:"images";a:1:{s:135:"http://blogs.msdn.com/blogfiles/endpoint/WindowsLiveWriter/WCFDataServicesRIAServicesAlignmentQuest_9CA8/WcfOverviewDiagram_thumb_8.png";a:6:{s:8:"file_url";s:135:"http://blogs.msdn.com/blogfiles/endpoint/WindowsLiveWriter/WCFDataServicesRIAServicesAlignmentQuest_9CA8/WcfOverviewDiagram_thumb_8.png";s:5:"width";s:3:"484";s:6:"height";s:3:"364";s:4:"type";s:5:"image";s:4:"area";s:6:"176176";s:9:"file_path";s:0:"";}}s:6:"videos";a:0:{}s:11:"image_count";s:1:"1";s:6:"author";s:8:"13599300";s:7:"blog_id";s:8:"13201214";s:9:"mod_stamp";s:19:"2011-06-08 03:38:05";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_ms</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1307504127]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_fb</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>tagazine-media</wp:meta_key>
			<wp:meta_value><![CDATA[a:7:{s:7:"primary";s:135:"http://blogs.msdn.com/blogfiles/endpoint/WindowsLiveWriter/WCFDataServicesRIAServicesAlignmentQuest_9CA8/WcfOverviewDiagram_thumb_8.png";s:6:"images";a:1:{s:135:"http://blogs.msdn.com/blogfiles/endpoint/WindowsLiveWriter/WCFDataServicesRIAServicesAlignmentQuest_9CA8/WcfOverviewDiagram_thumb_8.png";a:6:{s:8:"file_url";s:135:"http://blogs.msdn.com/blogfiles/endpoint/WindowsLiveWriter/WCFDataServicesRIAServicesAlignmentQuest_9CA8/WcfOverviewDiagram_thumb_8.png";s:5:"width";s:3:"484";s:6:"height";s:3:"364";s:4:"type";s:5:"image";s:4:"area";s:6:"176176";s:9:"file_path";s:0:"";}}s:6:"videos";a:0:{}s:11:"image_count";s:1:"1";s:6:"author";s:8:"13599300";s:7:"blog_id";s:8:"13201214";s:9:"mod_stamp";s:19:"2011-06-08 03:38:05";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_ms</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1307504127]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_fb</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391664]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>wpsd_autopost</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1464143047]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SQL Server 2008 下 18456错误的解决办法</title>
		<link>http://allenlsy.com/2011/05/SQL-Server-2008-xia-18456-cuo-wu-de-jie-jue-ban-fa/</link>
		<pubDate>Fri, 06 May 2011 07:40:23 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=546</guid>
		<description></description>
		<content:encoded><![CDATA[这个错误是在用SQLServer authentication登录SQLServer时产生的。Windows authentication错误的朋友们就不用往下看了。

网上给的很多办法都无法解决，其中一个原因是，没有注意在错误信息中还有State一项。

很多人会觉得，我遇到的State是1啊？为什么解决不了。今天在MSDN的一篇博客上看到说 message is kept fairly nondescript to prevent information disclosure to unauthenticated clients. The 'State' will always be shown to be '1' regardless of the nature of the problem.  意思就是说对于非认证用户，错误信息中的state将总是1。所以，需要用Windows authentication登录SQLServ%r，在Management|SQL Server Logs下，去查一下错误信息。这一次我看到的错误状态58。这个数在刚才的出错信息中是不会显示的。这就是为什么很多人查到的针对state=1的解决办法无法使用的原因。那么58表明我犯了个很弱的问题，就是要把Server设置为支持Window和SQLServer双认证方式。设置完后重启数据库服务器。

后续还遇到一个问题，VS通过SQL用户连接数据库时，出现 The SELECT permission was denied on the object 'sysobjects', database 'mysqlsystemresource', schema 'sys'.的错误。mysqlsystemresource是SQL Server中一个系统隐藏数据库，public schema下的用户无法在里面使用SELECT。只需要把登录数据库的用户名的schema]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>586</wp:post_id>
		<wp:post_date>2011-05-06 15:40:23</wp:post_date>
		<wp:post_date_gmt>2011-05-06 07:40:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>SQL-Server-2008-xia-18456-cuo-wu-de-jie-jue-ban-fa</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="database-shu-ju-ku-she-ji-yu-shi-xian"><![CDATA[Database]]></category>
		<category domain="post_tag" nicename="sql-server"><![CDATA[sql server]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1304667624]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_fb</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_mess</wp:meta_key>
			<wp:meta_value><![CDATA[SQL Server 2008 下 18456错误的解决办法:]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1304667624]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_fb</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_mess</wp:meta_key>
			<wp:meta_value><![CDATA[SQL Server 2008 下 18456错误的解决办法:]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391666]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1281825441]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>20</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>27.104.174.76</wp:comment_author_IP>
			<wp:comment_date>2011-05-06 16:17:25</wp:comment_date>
			<wp:comment_date_gmt>2011-05-06 08:17:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I told you so =.=

KIZA]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1304669845]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1304669846.0168";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[893652289]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>21</wp:comment_id>
			<wp:comment_author><![CDATA[allenlsy]]></wp:comment_author>
			<wp:comment_author_email>allenlsy@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://allenlsy.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>155.69.2.13</wp:comment_author_IP>
			<wp:comment_date>2011-05-06 16:19:37</wp:comment_date>
			<wp:comment_date_gmt>2011-05-06 08:19:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[CCTV里那次出问题的时候没有记录下来，又忘了。而且那次的解决方案不好。
这次解决的更彻底。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>20</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1304669978]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1304669979.3018";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"allenlsy";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[893652289]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[893727892]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>5月18-19日 技术交流会总结</title>
		<link>http://allenlsy.com/2011/05/5-yue-18-19-ri-ji-shu-jiao-liu-hui-zong-jie/</link>
		<pubDate>Thu, 19 May 2011 03:08:25 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">https://allenlsy.wordpress.com/2011/05/19/5%e6%9c%8818-19%e6%97%a5-%e6%8a%80%e6%9c%af%e4%ba%a4%e6%b5%81%e4%bc%9a%e6%80%bb%e7%bb%93/</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-size:small;">首先非常感谢有这么多新老朋友来参加这个聚会式的交流会。这一晚又学到了很多东西，认识了很多优秀的同学，受益匪浅。</span>

<span style="font-size:small;">楚昕讲话的视频晚上再放上来</span>

<span style="font-size:small;">18日的资料：</span>
<ul>
	<li><span style="font-size:small;">AllenLSY 的Demo pack：</span><span style="font-size:small;"><a href="http://www.mediafire.com/?0mj9xn35zscikgb">http://www.mediafire.com/?0mj9xn35zscikgb</a></span></li>
	<li>Chuxin的讲话video：<a href="http://vimeo.com/23943301">http://vimeo.com/23943301</a></li>
</ul>
<div>

19日晚的交流会，主题很散乱，但是很有价值，其价值毫无疑问超越了技术本身。所以呢，也不要听过就算了，还是应该有些东西留在心里。
这里是个人整理出来的会议笔记，和大家分享一下，希望对有需要的同学有所帮助。
<h2>关键字</h2>
<h2 style="padding-left:30px;"><span class="Apple-style-span" style="font-size:13px;font-weight:normal;">Symfony, Structs, autoloading, Zend, CakePhp, Prado, Open source licence, Pear包, symlink, doctrine, stackoverflow, http error code(404, 500 …), knol</span></h2>
<h2>学术</h2>
<p style="padding-left:30px;">ORM, CSRF, TDD, transaction, web 2.0, web 3.0, web 4.0</p>

<h2>经验</h2>
<p style="padding-left:30px;">Oprah Winfrey 2008 Stanford ceremony speech
stackoverflow, Joel Spolsky</p>

<h2>交流</h2>
<h3 style="padding-left:30px;">大公司 vs 小公司</h3>
<h3 style="padding-left:60px;"><span class="Apple-style-span" style="font-size:13px;font-weight:normal;">圣文：小公司文化好，做东西有意思</span></h3>
<p style="padding-left:60px;">义元：大公司文化会更稳定。IBM太和谐了，像养老的。小公司没那么多规矩，flexible。但在生产流程上，大公司严格。小公司里，地位会重要些，存在感强一些。各有各的好处</p>
<p style="padding-left:60px;">李振：不顶楼上。可以想办法在大公司脱颖而出。大公司有文化有积淀</p>
<p style="padding-left:60px;">Kiza楚昕：你想写code写多久？架构师只写结构。在大公司的话，你会有一个大的发展方向，慢慢做可以一直往上升。在小公司的话，把小公司培养起来的感觉是非常好，但是如果没发展好，到头来还是写code。机遇也是个问题</p>
<p style="padding-left:60px;">斯翊：就看五年内的发展吧，去哪都是学习。想学到更多的经验就去大公司，想了解更多底层的东西，获得技术就去小公司</p>
<p style="padding-left:60px;">静琰：大公司能够学到很多标准化的东西。如果不是大牛的话，还是去大公司，学点标准的东西比较好</p>
<p style="padding-left:60px;">孟洋：看个人性格，看想做哪方面的IT。小公司没实力去买写很贵的licence之类的。大公司有勾心斗角</p>
<p style="padding-left:60px;">廖弋雷：不在乎是大公司还是小公司，主要是提高自己的竞争力。趋势很重要，看好趋势做选择。小公司的市场敏感更强。推荐先去学大公司的结构，公司的系统，为自己建公司也能积累经验。大公司比小公司有文化 。小公司看人才，中型公司看结构，大公司看文化。去一个自己能发挥出来的公司</p>

<h3 style="padding-left:30px;">创业</h3>
<h3 style="padding-left:60px;"><span class="Apple-style-span" style="font-size:13px;font-weight:normal;">很明显的趋势，web 和手机。大一大二没事了，也别管能不能赚钱，做一个放到store上技术上大家不要太不自信，再怎么复杂就只是继承封装，大家能力完全够，不要让这个成为创业的障碍</span></h3>
<h3 style="padding-left:30px;">Website to go</h3>
<p style="padding-left:60px;">delicious.com 书签收藏网站</p>
<p style="padding-left:60px;">news.ycombinator.com
v2ex.com
Google Reader 在线阅读器
reddit.com 新闻
37signals.com 在线团队管理
Rework 一本好书
usethis.com</p>

<h3 style="padding-left:30px;">Communities</h3>
<p style="padding-left:60px;">Google Groups</p>
<p style="padding-left:60px;">IRCs
YouTube Channels on Programming</p>

<h3 style="padding-left:30px;">Working Environment</h3>
<h3 style="padding-left:60px;">Mac软件：</h3>
<p style="padding-left:90px;">TextMate，但对中文支持不好
XCode
云储存：
Gropbox
Google Docs
Amazon S3
Skydrive</p>

<h3 style="padding-left:60px;">最新技术 Latest techs</h3>
<p style="padding-left:90px;">Git：替代SVN</p>
<p style="padding-left:90px;">Python
GAE：现在支持Google自己的Go语言
Amazon web service
rackspace cloud：提供一个完整的Linux环境，或者Windows环境。适合架自己的服务器
Microsoft Azure：微软的云平台
HTML5：新的网页语言标准
CSS3：新的层叠式样表标准
OSS：开源软件
Node.js
NoSQL
YUI</p>

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>587</wp:post_id>
		<wp:post_date>2011-05-19 11:08:25</wp:post_date>
		<wp:post_date_gmt>2011-05-19 03:08:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>5-yue-18-19-ri-ji-shu-jiao-liu-hui-zong-jie</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password>tech519</wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="allenlsy-ri-ji-xin-de"><![CDATA[Daily Life]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1305774507]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_ms</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_fb</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1305774507]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_ms</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_fb</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391667]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sfw_comment_form_password</wp:meta_key>
			<wp:meta_value><![CDATA[BxXJxPn0dQBI]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1538111538]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PL/SQL Cheatsheet</title>
		<link>http://allenlsy.com/2012/07/PL-SQL-Cheatsheet/</link>
		<pubDate>Fri, 06 Jul 2012 07:46:05 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=606</guid>
		<description></description>
		<content:encoded><![CDATA[Tested in Oracle 11g.
<h3>Some useful sql*plus commands</h3>
<pre class="toolbar:2 plain:false lang:pgsql decode:true">conn &lt;username&gt;/&lt;pwd&gt;@&lt;service name&gt; -- connect
disc[onnect] -- disconnect
passw[ord] -- change password
clear screen
start / @ -- run script
	- eg. @ d:\aaa.sql | start d:\aaa.sql
spool -- screen output to file
	spool off
show/set linesize | pagesize | cmds[ep] | colsep
variable: &amp; or &amp;&amp;.

set serveroutput off;
declare
	v_ename varchar2(5);
begin
	select ename into v_ename from emp where empno=&amp;no;
	dbms_output.put_line('employee:'||v_ename);
end;</pre>
<h3>User Management Commands</h3>
<pre class="toolbar:2 plain:false lang:pgsql decode:true">create | alter | drop user
grant | revoke connect to xiaoming
	grant select on emp to xiaoming
	grant select on emp to xiaoming with grant option
CREATE PROFILE new_profile
  LIMIT PASSWORD_REUSE_MAX 10
        PASSWORD_REUSE_TIME 30;
alter user tea account unlock</pre>
&nbsp;
<h3>Proceduce</h3>
Procedure may have in and out parameters.
<pre class="toolbar:2 plain:false lang:pgsql decode:true">create or replace procedure sp_pro8 ( spno in number, spName out varchar2) is
begin
	select ename into spname from emp where empno=spno;
end;</pre>
<h3>Function</h3>
&nbsp;
<pre class="toolbar:2 plain:false lang:pgsql decode:true">CREATE [OR REPLACE] FUNCTION function_name
    [ (parameter [,parameter]) ]
    RETURN return_datatype
IS | AS
    [declaration_section]
BEGIN
    executable_section
[EXCEPTION
    exception_section]
END [function_name];

create function sp(spName varchar2) return number is yearSal number(7,2)
begin
	select ...;
	return yearSal;
end;</pre>
&nbsp;
<h3>Package</h3>
&nbsp;
<pre class="toolbar:2 plain:false lang:pgsql decode:true">create or replace package sp_package is
	procedure update_sal(name varchar2, newsal number);
	function annual_income(name varchar2) return number;
end;
create or replace package body sp_package is
	procedure update_sal(name varchar2, newsal number) is
	begin
		null;
	end;
	function annual_income(name varchar2) return number is annual_salary number;
	begin

		return annual_salary;
	end;
end;</pre>
<h3>Variables</h3>
There are 3 types of variables. User can also define his own type of variables.
<pre class="toolbar:2 plain:false lang:pgsql decode:true">-- 1. Scalar
c_tax_rate number(3,2):=0.03;
v_ename emp.ename%type; -- the same type as emp.ename
v_sal emp.sal%type;

-- 2. Composite
declare 
type emp_record_type is record(name emp.ename%type, salary emp.sal%type, title emp.job%type);
sp_record emp_record_type;
begin
	select ename,sal,job into sp_record from emp where empno=7788;
	dbms_output.put_line(sp_record.name);
end;

declare
type sp_table_type is table of emp.ename%type index by binary_integer
sp_table sp_table_type;
begin
select ename into sp_table(-1) from emp where empno=7788;
dbms_output.put_line( sp_table(-1) );
end;

-- 3. Reference: object reference | cursor
declare
	type sp_emp_cursor is ref cursor;
	test_cursor sp_emp_cursor;
	v_ename emp.ename%tyype;
	v_sal emp.sal%type;
begin
	open test_cursor for select ename,sal,job from emp where deptno=&amp;no;
	loop
		fetch test_cursor into v_ename,v_sal;
		exit when test_cursor%notfound;
		dbms_output.put_line('name:'||v_ename||' salary:'||v_sal);
	end loop;
end;

create or replace procedure sp_pro6(spName varchar2) is
	v_sal emp.sal%type;
begin
	select sal into v_sal from emp where ename=spName;
	if v_sal&lt;2000 then
		update emp set sal=sal*1.1 where ename=spName;
	end if;
end;
exec sp_pro6('SCOTT');</pre>
&nbsp;
<h3>Example: Paging procedure</h3>
<pre class="toolbar:2 plain:false lang:pgsql decode:true">create or replace procedure fenye(
tableName in varchar2, 
Pagesize in number, 
pageNow in number, 
myrows out number,
myPageCount out number,
p_cursor out testpackage.test_cursor
) is
v_sql varchar(1000);
v_begin number:=(pageNow-1)*Pagesize+1;
v_end number:=pageNow*Pagesize;
begin
	v_sql:='select * from (select t1.*,rownum rn from 
	(select * from '||tableName||') t1 where rownum&lt;='||v_end||') where rn&gt;='||v_begin;		
	open p_cursor for v_sql;
	v_sql:='select count(*) from '||tableName;
	execute immediate v_sql into myrows;
	if mod(myrows,Pagesize)=0 then
	myPagecount:=myrows/Pagesize;
	else
	myPageCount:=myrows/Pagesize+1;
	end if;
end;</pre>
<h4>Reference:</h4>
1. <a href="http://www.techonthenet.com/oracle/index.php">http://www.techonthenet.com/oracle/index.php</a>

2. <a href="http://www.verycd.com/topics/2767912/">http://www.verycd.com/topics/2767912/</a>

3. <a href="http://w2.syronex.com/jmr/edu/db/">http://w2.syronex.com/jmr/edu/db/</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>606</wp:post_id>
		<wp:post_date>2012-07-06 15:46:05</wp:post_date>
		<wp:post_date_gmt>2012-07-06 07:46:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>PL-SQL-Cheatsheet</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="database-shu-ju-ku-she-ji-yu-shi-xian"><![CDATA[Database]]></category>
		<category domain="post_tag" nicename="database"><![CDATA[database]]></category>
		<category domain="post_tag" nicename="db"><![CDATA[db]]></category>
		<category domain="post_tag" nicename="oracle"><![CDATA[oracle]]></category>
		<category domain="post_tag" nicename="plsql"><![CDATA[plsql]]></category>
		<category domain="post_tag" nicename="sql"><![CDATA[sql]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1341560765]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>duoshuo_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[4391668]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>wpsd_autopost</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[PL-SQL-Cheatsheet]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1285532993]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>依赖注入 （1）</title>
		<link>http://allenlsy.com/2012/09/yi-lai-zhu-ru-1/</link>
		<pubDate>Tue, 04 Sep 2012 12:15:43 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=733</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #ff0000;">研究一个问题，应该先弄明白，为什么有它，然后是它是什么，最后才是怎么用它，也就是Why-What-How原则。</span>

先复习一个预备知识：

<strong>依赖</strong>：如果B类的改变将导致A类的代码改变，则A依赖于B【UML Distrilled 2ed】。也有说法是如果A调用了B，则A依赖于B。

本文中依赖注入以Guice工具为例，DI代表依赖注入（Dependency Injection），IoC代表控制反转（Inversion of Control）。
<h1>Why we need it?</h1>
下面介绍一个摘取自Google Guice Documentation的例子。

假设我们现在要写一个信用卡支付服务的程序，实现用信用卡支付披萨饼的账单。于是定义了以下的服务接口。
<pre class="lang:java decode:true">public interface BillingService {
  Receipt chargeOrder(PizzaOrder order, CreditCard creditCard);
}</pre>
好，第一版我们写出了下面的代码
<pre class="lang:java decode:true">public class RealBillingService implements BillingService {
  public Receipt chargeOrder(PizzaOrder order, CreditCard creditCard) {
    CreditCardProcessor processor = new PaypalCreditCardProcessor();
    TransactionLog transactionLog = new DatabaseTransactionLog();

    try {
      ChargeResult result = processor.charge(creditCard, order.getAmount());
      transactionLog.logChargeResult(result);

      return result.wasSuccessful()
          ? Receipt.forSuccessfulCharge(order.getAmount())
          : Receipt.forDeclinedCharge(result.getDeclineMessage());
     } catch (UnreachableException e) {
      transactionLog.logConnectException(e);
      return Receipt.forSystemFailure(e.getMessage());
    }
  }
}</pre>
注：CreditCardProcessor和TransactionLog都是接口。result保存支付结果，transactionLog做记录。

这段代码的问题在于，如果我们要测试chargeOrder这个函数是否能正常工作，由于使用了真实的CreditCardProcessor，因此需要使用一个真实的CreditCard对象。这样你的数据库中会平白无故出现一笔其实没有发生的交易，测试完后要再把这笔交易删掉。这样让我们非常难受。当测试量非常大的时候，后果很难设想。

更重要的是，RealBillingService此时不仅依赖于CreditCardProcessor和TransactionLog的接口，还依赖于它们的实现类。因为在代码中，RealBillingService写出了它们的具体实现类。

后来，考虑到可以使用工厂，我们修改了第一版的代码。
<pre class="lang:java mark:20,21, decode:true">public class CreditCardProcessorFactory {

  private static CreditCardProcessor instance;

  public static void setInstance(CreditCardProcessor creditCardProcessor) {
    instance = creditCardProcessor;
  }

  public static CreditCardProcessor getInstance() {
    if (instance == null) {
      return new SquareCreditCardProcessor();
    }

    return instance;
  }
}

public class RealBillingService implements BillingService {
  public Receipt chargeOrder(PizzaOrder order, CreditCard creditCard) {
    CreditCardProcessor processor = CreditCardProcessorFactory.getInstance();
    TransactionLog transactionLog = TransactionLogFactory.getInstance();

    try {
      ChargeResult result = processor.charge(creditCard, order.getAmount());
      transactionLog.logChargeResult(result);

      return result.wasSuccessful()
          ? Receipt.forSuccessfulCharge(order.getAmount())
          : Receipt.forDeclinedCharge(result.getDeclineMessage());
     } catch (UnreachableException e) {
      transactionLog.logConnectException(e);
      return Receipt.forSystemFailure(e.getMessage());
    }
  }
}</pre>
然后进行单元测试
<pre class="lang:java mark:21 decode:true">public class RealBillingServiceTest extends TestCase {

  private final PizzaOrder order = new PizzaOrder(100);
  private final CreditCard creditCard = new CreditCard("1234", 11, 2010);

  private final InMemoryTransactionLog transactionLog = new InMemoryTransactionLog();
  private final FakeCreditCardProcessor creditCardProcessor = new FakeCreditCardProcessor();

  @Override public void setUp() {
    TransactionLogFactory.setInstance(transactionLog);
    CreditCardProcessorFactory.setInstance(creditCardProcessor);
  }

  @Override public void tearDown() {
    TransactionLogFactory.setInstance(null);
    CreditCardProcessorFactory.setInstance(null);
  }

  public void testSuccessfulCharge() {
    RealBillingService billingService = new RealBillingService();
    Receipt receipt = billingService.chargeOrder(order, creditCard);

    assertTrue(receipt.hasSuccessfulCharge());
    assertEquals(100, receipt.getAmountOfCharge());
    assertEquals(creditCard, creditCardProcessor.getCardOfOnlyCharge());
    assertEquals(100, creditCardProcessor.getAmountOfOnlyCharge());
    assertTrue(transactionLog.wasSuccessLogged());
  }
}</pre>
第21行用于测试chargeOrder的功能。

在这个测试中，生成了一个假的信用卡处理器FakeCreditCardProcessor。之后，为了做这个测试，把全局的真正的CrediCardProcessor临时替换成假的。这个步骤在setUp()中。然后要记得在tearDown()中，清理掉这个FakeCreditCardProcessor，不然测试完成后，会使用这个假的processor来工作。另外，这种反复设置全局的Factory的方式，使得我们几乎不能并行的进行测试。

不过，工厂的方式使得RealBillingService不再需要CreditCardProcessor和TransactionLog的具体实现类，这是一个进步。但是，当项目变大的时候，工厂也多了起来，工厂里能生产的实例也多了起来。大项目很容易拥有100个工厂。当实例化需求需要改变时，修改代码仍然是很头疼的。

另外，从逻辑的角度讲，RealBillingService确实不应该负责构造CreditCardProcessor和TransactionLog。因此，这里的代码对于工厂类有依赖，耦合度还可以进一步提高。

到这一步，可以解释IoC的含义了。传统的程序中，被调用者的创建常常是调用者来控制的。就像此处CreditCardProcessor和TransactionLog是由调用者RealBillingService来构造的。控制反转的含义，就是要把这件事情给反过来，也就是说，调用者不再创建被调用者了，而是由IoC容器（或者叫IoC工具）来负责。
<h1>What is it?</h1>
接着上面的问题。此时我们希望使用一个比工厂的使用范围更加广的东西，也就是一个真正在项目全局内唯一的对象，来负责所有的对象实例化工作。这时，IoC容器就应运而生了。

DI的鼻祖Martin Fowler在和一群IoC容器爱好者讨论时，觉得IoC这个概念比较模糊，大家不大容易理解到底是什么控制被反转了，因此在2005年提出了Dependency Injection的概念。

DI的核心原则是<strong>将行为和依赖分离</strong>。请看下面的代码
<pre class="lang:c++ decode:true">public class RealBillingService implements BillingService {
  private final CreditCardProcessor processor;
  private final TransactionLog transactionLog;

  public RealBillingService(CreditCardProcessor processor, 
      TransactionLog transactionLog) {
    this.processor = processor;
    this.transactionLog = transactionLog;
  }

  public Receipt chargeOrder(PizzaOrder order, CreditCard creditCard) {
    try {
      ChargeResult result = processor.charge(creditCard, order.getAmount());
      transactionLog.logChargeResult(result);

      return result.wasSuccessful()
          ? Receipt.forSuccessfulCharge(order.getAmount())
          : Receipt.forDeclinedCharge(result.getDeclineMessage());
     } catch (UnreachableException e) {
      transactionLog.logConnectException(e);
      return Receipt.forSystemFailure(e.getMessage());
    }
  }
}</pre>
这段代码和没有使用DI的区别是，此时的 chargeOrder不再需要知道CreditCardProcessor和TransactionLog是怎么来的。它们是通过参数的形式传入了RealBillingService。对被调用者的控制被反转了。

此时，调用RealBillingService的程序，倒是需要考虑依赖的问题了。所以主函数可能会变成这样：
<pre class="lang:java decode:true">public static void main(String[] args) {
    CreditCardProcessor processor = new PaypalCreditCardProcessor();
    TransactionLog transactionLog = new DatabaseTransactionLog();
    BillingService billingService
        = new RealBillingService(creditCardProcessor, transactionLog);
    ...
  }</pre>
最终，我们达到了刚才粗体字要求的目的：将行为和依赖分离。
<h1>How to use it?</h1>
到目前为止，我们还没有真正使用这个全局的对象生成器。Guice是近年来兴起的一个轻量级IoC容器，可以帮助我们实现这个功能。由于本文的重点并不是Guice，所以对技术细节不做太多介绍，主要关注概念。

在上面的main函数中，processor和transactionLog仍然是用具体类实例化的。我们拿他们开刀吧。
<pre class="lang:java decode:true">public static void main(String[] args) {
    Injector injector = Guice.createInjector(new BillingModule());
    BillingService billingService = injector.getInstance(BillingService.class);
    ...
}</pre>
这里，第2行生成了这个全局的对象注入器，叫injector。第3行的BillingService，就是由injector负责生成的，而且生成的是RealBillingService的对象。但是，我们没有看到RealBillingService字样，也没有看到给RealBillingService的构造函数传入两个参数的过程。

原因在BillingModule。因为，injector是根据BillingModule生成的，而BillingModule中包含了如何生成各个对象的工作细节。如果使用过Spring，就会发现Guice的这种工作方式和Spring差不多，只不过一个是使用xml配置文件，一个是使用Module的java类。

现在稍微具体的解释一下BillingModule：
<pre class="lang:java mark:14 decode:true">public class BillingModule extends AbstractModule {
  @Override 
  protected void configure() {
    bind(TransactionLog.class).to(DatabaseTransactionLog.class);
    bind(CreditCardProcessor.class).to(PaypalCreditCardProcessor.class);
    bind(BillingService.class).to(RealBillingService.class);
  }
}

public class RealBillingService implements BillingService {
  private final CreditCardProcessor processor;
  private final TransactionLog transactionLog;

  @Inject
  public RealBillingService(CreditCardProcessor processor,
      TransactionLog transactionLog) {
    this.processor = processor;
    this.transactionLog = transactionLog;
  }

  public Receipt chargeOrder(PizzaOrder order, CreditCard creditCard) {
   ...
  }
}</pre>
在BillingModule中，bind(A,B)的意思是如果要构造一个接口A的对象，就用它的具体实现类B来构造。所以，B一定是实现了A接口的。当然bind()还有其他的形态，可以按照需求实现各种配置。而在RealBillingService中，@inject标记表示，用RealBillingService来构造实例时，使用这个构造函数。因为RealBillingService可以有多个公共构造函数。在前面injector构造RealBillingService时，又会递归的去生成CreditCard和TransactionLog的对象。这样最终构造出了所需的RealBillingService。

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[<span style="color: #ff0000;">研究一个问题，应该先弄明白，为什么有它，然后是它是什么，最后才是怎么用它，也就是Why-What-How原则。</span> 
 
先复习一个预备知识： 
 
<strong>依赖</strong>：如果B类的改变将导致A类的代码改变，则A依赖于B【UML Distrilled 2ed】。也有说法是如果A调用了B，则A依赖于B。 
 
本文中依赖注入以Guice工具为例，DI代表依赖注入（Dependency Injection），IoC代表控制反转（Inversion of Control）。 
]]></excerpt:encoded>
		<wp:post_id>733</wp:post_id>
		<wp:post_date>2012-09-04 12:15:43</wp:post_date>
		<wp:post_date_gmt>2012-09-04 12:15:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>yi-lai-zhu-ru-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="dependency-injection"><![CDATA[dependency injection]]></category>
		<category domain="category" nicename="software-design"><![CDATA[Design]]></category>
		<category domain="post_tag" nicename="di"><![CDATA[di]]></category>
		<category domain="post_tag" nicename="ioc"><![CDATA[ioc]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>wpsd_autopost</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[54]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[依赖注入]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[依赖注入（1） - Simple, Not Easy 简而无易]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[依赖注入, 架构]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1281825452]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>37</wp:comment_id>
			<wp:comment_author><![CDATA[Mark Fu]]></wp:comment_author>
			<wp:comment_author_email>fsw90628@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>203.118.14.112</wp:comment_author_IP>
			<wp:comment_date>2012-10-17 21:43:35</wp:comment_date>
			<wp:comment_date_gmt>2012-10-17 13:43:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[楼主写的很好，扫除了我的很多困惑，加油！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[893652294]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38</wp:comment_id>
			<wp:comment_author><![CDATA[allenlsy]]></wp:comment_author>
			<wp:comment_author_email>cafe@allenlsy.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.255.2.90</wp:comment_author_IP>
			<wp:comment_date>2012-10-17 23:29:05</wp:comment_date>
			<wp:comment_date_gmt>2012-10-17 15:29:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哪阵风把您吹来了？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>37</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[893652294]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[893727883]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>ADMEMS架构方法 （1） - 总述</title>
		<link>http://allenlsy.com/2012/09/admems-jia-gou-fang-fa-1-zong-shu/</link>
		<pubDate>Fri, 14 Sep 2012 05:50:06 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=762</guid>
		<description></description>
		<content:encoded><![CDATA[ADMEMS是Architectural Design Method has been extended to Method System的缩写，即“架构设计方法已经扩展到方法体系”。
<h2>架构师的6个经典困惑</h2>
<ol>
	<li>怎么划分系统模块？</li>
	<li>大系统架构如何起步？</li>
	<li>如何平衡需求与架构设计？</li>
	<li>如何使设计满足非功能需求(Non-Functional requirement)？</li>
	<li>对于架构新手，缺乏经验，架构设计不知所措。</li>
	<li>对于架构老手，缺乏总结，仍然惧怕下一个项目。</li>
</ol>
<h2>ADMEMS的4个核心主张</h2>
<h3>方法体系是大趋势</h3>
<div style="padding-left: 30px;">单一方法捉襟见肘。ADMEMS不是一个单一方法，而是多个各具特点的方法组成的方法体系。</div>
<h4>质疑驱动的架构设计</h4>
<p style="padding-left: 30px;">世界上没有一种可以把一桶需求倒进去就生成出来一个架构的机器。很多人说软件架构是需求驱动的，而不是模型驱动。这有一定道理。而更具体的说，除了需求，还需要进一步通过“质疑”引入更多“质量属性”，以及特殊功能场景来驱动后续架构设计工作的开展。</p>
<p style="padding-left: 30px;">质疑意识，是架构师最宝贵的意识之一。</p>
<p style="padding-left: 30px;">需求=功能+质量+约束</p>

<h4>多阶段方法</h4>
<p style="padding-left: 30px;">什么是阶段？</p>
<p style="padding-left: 30px;">先后顺序是阶段(stage)，齐头并进是视图(View)。</p>
<p style="padding-left: 30px;">在ADMEMS中，有3个阶段和1个贯穿环节。3个阶段指的是软件架构的3个阶段：预备架构(Pre-architecture) -&gt; 概念架构(Conceptual Architecture) -&gt; 细化架构(Refined Architecture)。1个贯穿环节指的是在3个阶段中都要考虑的环节，即非功能目标的考虑。</p>
<p style="text-align: center; padding-left: 30px;"><a href="http://allenlsy.com/wp-content/uploads/2012/09/Screen-Shot-2012-10-23-at-11.07.33-PM.png"><img class="aligncenter size-full wp-image-831" title="多阶段方法" src="http://allenlsy.com/wp-content/uploads/2012/09/Screen-Shot-2012-10-23-at-11.07.33-PM.png" alt="" width="478" height="196" /></a></p>
<p style="text-align: left; padding-left: 30px;"> 关于三个阶段和一个贯穿环节的细节，会在后面详细说明</p>

<h4>内置最佳实践</h4>
<p style="padding-left: 30px;">方法应该融入实践经验</p>

<address> </address><address>参考资料：<a href="http://www.csai.cn/admems/index.htm">http://www.csai.cn/admems/index.htm</a></address>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>762</wp:post_id>
		<wp:post_date>2012-09-14 13:50:06</wp:post_date>
		<wp:post_date_gmt>2012-09-14 05:50:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>admems-jia-gou-fang-fa-1-zong-shu</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="admems"><![CDATA[admems]]></category>
		<category domain="post_tag" nicename="architecture"><![CDATA[architecture]]></category>
		<category domain="category" nicename="software-design"><![CDATA[Design]]></category>
		<category domain="post_tag" nicename="design"><![CDATA[design]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>wpsd_autopost</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[ADMEMS-jia-gou-fang-fa-1-zong-shu]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1320466649]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title> ADMEMS架构方法 （2） - Pre-architecture</title>
		<link>http://allenlsy.com/2012/09/admems-jia-gou-fang-fa-2-pre-architecture/</link>
		<pubDate>Fri, 14 Sep 2012 07:28:02 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=775</guid>
		<description></description>
		<content:encoded><![CDATA[我们需要知道，哪些因素构成了架构设计的约束性需求？或者说，哪些因素约束着架构设计？

有人说：“错”的一半是“金”，“败”的一半是“贝”。如何在失败中求“贝”呢？
<h3>总论</h3>
功能需求、质量属性以及约束共同决定了架构。对这三类需求的把我是否到位、涉及决策是否对路，是架构设计成败的关键。

而业内的现状是：
<ul>
	<li>许多架构师不知道业务级需求、用户级需求、开发级需求</li>
	<li>也不知道要基于业务背景、系统规模、技术趋势、开发团队现状等现实情况，对需求进行例行的、有针对性的权衡</li>
</ul>
ADMEMS为Pre-architecture阶段指定了一个“四步法”
<ol>
	<li>需求结构化</li>
	<li>分析约束影响</li>
	<li>确定关键质量</li>
	<li>确定关键功能</li>
</ol>
需求应该被分为重大需求、特色需求、高风险需求

架构前要明确的问题：
<ul>
	<li><span style="line-height: 15px;">业务需求：投资、工期标准，系统目标</span></li>
	<li><span style="line-height: 15px;">用户需求：系统能帮助用户做什么，不能做什么。可以用Use case diagram来描述。</span></li>
	<li><span style="line-height: 15px;">行为需求：用例规约</span></li>
</ul>
<div><span style="line-height: 15px;">需求=功能+质量+约束</span></div>
<div>
<ul>
	<li>功能：发现职责，设计软件各部分的职责协作链，将职责分配到子系统，界定接口，确定<strong>交互机制</strong></li>
	<li>质量：质量要求，可对设计中间结果进行细化、调整</li>
	<li>约束
<ul>
	<li>直接约束（例如，系统运行在Unix上）</li>
	<li>功能需求的约束（例如“银行系统执行现行利率”引出“利率调整”功能）</li>
	<li>质量需求的约束（例如“柜员计算机平均水平不高”引出易用性需求）</li>
</ul>
</li>
</ul>
<div>ADMEMS倡导“二维需求观”</div>
<div><a href="http://allenlsy.com/wp-content/uploads/2012/09/Screen-Shot-2012-10-24-at-12.08.49-AM.png"><img class="aligncenter size-full wp-image-833" title="二维需求观" src="http://allenlsy.com/wp-content/uploads/2012/09/Screen-Shot-2012-10-24-at-12.08.49-AM.png" alt="" width="323" height="219" /></a></div>
<div>
<h3>需求结构化</h3>
<p style="padding-left: 30px;">根据二维需求观，将需求分为9类。</p>
<p style="padding-left: 30px;">二维需求观的工具又叫做“需求层次-需求方面矩阵”。</p>
<p style="padding-left: 30px;"><a href="http://allenlsy.com/wp-content/uploads/2012/09/Screen-Shot-2012-10-24-at-12.10.45-AM.png"><img class="aligncenter size-full wp-image-834" title="需求方面矩阵" src="http://allenlsy.com/wp-content/uploads/2012/09/Screen-Shot-2012-10-24-at-12.10.45-AM.png" alt="" width="676" height="423" /></a></p>

<h3>确定关键质量目标</h3>
<p style="padding-left: 30px;">人之所以痛苦，很多时候是因为追求着错误的东西。</p>
<p style="padding-left: 30px;">确定关键质量目标的5个原则：</p>

<ol style="padding-left: 30px;">
	<li style="padding-left: 30px;">分类合适+必要补充</li>
	<li style="padding-left: 30px;">考虑多方涉众</li>
	<li style="padding-left: 30px;">检查性思维</li>
	<li style="padding-left: 30px;">识别矛盾+划定优先级</li>
	<li style="padding-left: 30px;">严格程度符合领域与规模特点</li>
</ol>
<h3>确定关键功能</h3>
<p style="padding-left: 30px;">4个原则：</p>

<ol style="padding-left: 30px;">
	<li style="padding-left: 30px;">核心功能：能通过业务层的接口反应的功能</li>
	<li style="padding-left: 30px;">必做功能：根据客户方的背景而定</li>
	<li style="padding-left: 30px;">高风险功能：比如为网上书店系统提供全库搜索功能，可能需要提供一个只读式数据库来加快搜索速度</li>
	<li style="padding-left: 30px;">独特功能：以上3类功能没有涉及的职责的功能</li>
</ol>
</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>775</wp:post_id>
		<wp:post_date>2012-09-14 15:28:02</wp:post_date>
		<wp:post_date_gmt>2012-09-14 07:28:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>admems-jia-gou-fang-fa-2-pre-architecture</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="admems"><![CDATA[admems]]></category>
		<category domain="post_tag" nicename="architecture"><![CDATA[architecture]]></category>
		<category domain="category" nicename="software-design"><![CDATA[Design]]></category>
		<category domain="post_tag" nicename="design"><![CDATA[design]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>wpsd_autopost</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[ADMEMS-jia-gou-fang-fa-2-Pre-architecture]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[ADMEMS架构法在Pre-architecture阶段的流程]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1281825455]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>36</wp:comment_id>
			<wp:comment_author><![CDATA[列车时刻表查询]]></wp:comment_author>
			<wp:comment_author_email>gh4kqzrl@expressemail.org</wp:comment_author_email>
			<wp:comment_author_url>http://www.uzzf.com/soft/31364.html</wp:comment_author_url>
			<wp:comment_author_IP>112.252.219.108</wp:comment_author_IP>
			<wp:comment_date>2012-10-10 02:14:33</wp:comment_date>
			<wp:comment_date_gmt>2012-10-09 18:14:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[分析的很透彻，很欣赏你的看法，学习了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[893652297]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>关于2012年10月5日服务器宕机的说明</title>
		<link>http://allenlsy.com/2012/10/guan-yu-2012-nian-10-yue-5-ri-fu-wu-qi-dang-ji-de-shuo-ming/</link>
		<pubDate>Tue, 23 Oct 2012 16:34:15 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=837</guid>
		<description></description>
		<content:encoded><![CDATA[各位网友：

本网站的服务器在2012年10月5日出现一次严重宕机事件，导致所有服务器上的图片丢失。幸运的是，所有的文章都有备份。由于图片缺失问题给您带来的阅读不便在此深表歉意。今后本站会更加注重数据安全问题。谢谢支持。

To all my friends:

I have suffered from a serious server breakdown problem. All the images on the server were unrecoverable. Fortunately I have the backup of all the blog posts. I'm really sorry about the inconvenience brought to you during your reading. I will improve my data security policy in the future. Thanks for your supporting.

allenlsy.com]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>837</wp:post_id>
		<wp:post_date>2012-10-24 00:34:15</wp:post_date>
		<wp:post_date_gmt>2012-10-23 16:34:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>guan-yu-2012-nian-10-yue-5-ri-fu-wu-qi-dang-ji-de-shuo-ming</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="allenlsy-ri-ji-xin-de"><![CDATA[Daily Life]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1281825454]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>39</wp:comment_id>
			<wp:comment_author><![CDATA[mingmin]]></wp:comment_author>
			<wp:comment_author_email>zhangmingmin2008@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://jiezhanpao.com</wp:comment_author_url>
			<wp:comment_author_IP>220.255.2.106</wp:comment_author_IP>
			<wp:comment_date>2012-10-24 18:20:45</wp:comment_date>
			<wp:comment_date_gmt>2012-10-24 10:20:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[嗯，很悲剧，我珍贵的数据也没了……]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[893652295]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>ADMEMS架构方法 （3） – Conceptual Architecture</title>
		<link>http://allenlsy.com/2012/11/admems-jia-gou-fang-fa-3-conceptual-architecture/</link>
		<pubDate>Sun, 04 Nov 2012 02:12:41 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=844</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>序幕</h3>
架构新手通常认为“架构=模块+接口”，有经验的架构师不会一上来就定义接口，面对大项目，他们会在架构早期注重识别重大需求、特色需求、高风险需求。

概念架构时，一定要把产品的价值搞透彻，明确客户需求。
<blockquote>顶级设计者在设计中并不是按部就班地采用自顶向下或是自底向上的方法，而是着眼于权重更大的目标。这些目标通常是难点问题，设计者不能轻易地看出这些问题的解决方案。为了得到整个问题的设计方案，设计者必须先治理与难点的设计并消除其中的疑惑。
<p style="text-align: right;">—Robert Glass, 《软件工程的事实与谬误》</p>
</blockquote>
<h3 style="text-align: left;">什么是概念架构</h3>
<p style="text-align: left;">Dana Bredemeyer：</p>

<blockquote>
<p style="text-align: left;">概念性架构界定了系统的高层组件，以及他们之间的关系，对系统进行了适当的分解，而不陷入细节。</p>
<p style="text-align: left;">The Conceptual Architecture identifies the high-level components of the system, and the relationships among them. Its purpose is to direct attention at an appropriate decomposition of the system without delving into details.</p>
</blockquote>
<h3 style="text-align: left;">业界现状</h3>
<p style="text-align: left;"><strong>错误1</strong>：认为架构是功能需求驱动的。而架构应该是功能、质量和约束一同驱动的</p>
<p style="text-align: left;"><strong>错误2</strong>：认为架构是用例驱动的。这个说法有待商榷。业内有不少人认同这个说法。不过大多数时候，架构只被20%左右的用例驱动，根据这些用例来设计、实现、测试。还有不少时候，并不是用例在驱动架构设计。</p>
<p style="text-align: left;"><strong>错误3</strong>：“阶段”和“视图”分不清。阶段是先后关系，视图是并列关系。</p>
<p style="text-align: left;">记住：重大需求塑造概念架构</p>

<h3 style="text-align: left;">概念架构流程</h3>
<h4 style="text-align: left;">第一步：初步架构</h4>
<p style="text-align: left;">用Robustness Diagram画出每个用例需要哪些对象参与。例如：</p>
<a href="http://allenlsy.com/wp-content/uploads/2012/11/01.png"><img class="aligncenter size-full wp-image-845" title="01" src="http://allenlsy.com/wp-content/uploads/2012/11/01.png" alt="" width="330" height="244" /></a>

<strong>初步设计的经验</strong>
<ul>
	<li>实体对象≠持久化对象</li>
	<li>Controller不要太多</li>
	<li>不要过于关注细节和UI</li>
</ul>
<h4>第二步：高层分割</h4>
“架构=模块+接口”的不足可以概括为两点：
<ol>
	<li>忽视了多视图。软件系统中会涉及到开发视图、运行视图、物理视图、数据视图等。</li>
	<li>忽略了概念架构设计</li>
</ol>
<div>高层分割一般有两种思路</div>
<div>
<ul>
	<li>切系统为系统：大的系统可以进行两级高层切分</li>
	<li>切系统为子系统：非常经典的做法，最常见的方式就是分层。</li>
</ul>
<a href="http://allenlsy.com/wp-content/uploads/2012/11/02.png"><img class="aligncenter size-full wp-image-846" title="02" src="http://allenlsy.com/wp-content/uploads/2012/11/02.png" alt="" width="496" height="238" /></a>

切系统为系统的例子：

<a href="http://allenlsy.com/wp-content/uploads/2012/11/03.png"><img class="aligncenter size-full wp-image-847" title="03" src="http://allenlsy.com/wp-content/uploads/2012/11/03.png" alt="" width="485" height="323" /></a>

切系统为子系统的例子：

<a href="http://allenlsy.com/wp-content/uploads/2012/11/041.png"><img class="aligncenter size-full wp-image-849" title="04" src="http://allenlsy.com/wp-content/uploads/2012/11/041.png" alt="" width="455" height="301" /></a>
<h3>分层式架构实践</h3>
常见的分层方式
<ul>
	<li>Layer：逻辑分层</li>
	<li>Tier：物理分层，按分布在不同的物理机器上分层。</li>
	<li>通用性分层</li>
	<li>技术堆叠</li>
</ul>
关于Tier分层，架构是要看“能分布”的能力，不是看实际部署情况。
<blockquote>我们通常说的Java EE应该是N-layer的，因为 从逻辑上看，Java EE里面有表现层、业务逻辑层和数据层。从物理上而言，这3层可以在不同的tier，也可以在同一个tier。比如，如果服务器、数据库都在一台笔记本上，就是1 tier。</blockquote>
关于通用性，一般来说，通用性越大，层次越靠下。比如，Google有一个基础设施部门，专门负责做最底层的API。这些API的通用性就非常大。

技术堆叠不是独立的架构模式，而是基于分层架构提供的进一步说明。是根据不同的技术实现的分层。比如MVC，按照Controller, Model, View这些不同技术来分层的

注意考虑非功能需求

使用“目标-场景-决策”表是一个不错的技巧。

例如：

<a href="http://allenlsy.com/wp-content/uploads/2012/11/05.png"><img class="aligncenter size-full wp-image-850" title="05" src="http://allenlsy.com/wp-content/uploads/2012/11/05.png" alt="" width="575" height="213" /></a>

&nbsp;

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>844</wp:post_id>
		<wp:post_date>2012-11-04 10:12:41</wp:post_date>
		<wp:post_date_gmt>2012-11-04 02:12:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>admems-jia-gou-fang-fa-3-conceptual-architecture</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="admems"><![CDATA[admems]]></category>
		<category domain="post_tag" nicename="architecture"><![CDATA[architecture]]></category>
		<category domain="category" nicename="software-design"><![CDATA[Design]]></category>
		<category domain="post_tag" nicename="design"><![CDATA[design]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1340740216]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Frontend Engineer Skill Structure</title>
		<link>http://allenlsy.com/2012/11/frontend-engineer-skill-structure/</link>
		<pubDate>Mon, 05 Nov 2012 01:52:50 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=856</guid>
		<description></description>
		<content:encoded><![CDATA[<ul>
    <li>
<h3>Web Service</h3>
<ul>
    <li>YQL: Yahoo Query Langauge</li>
    <li>App Engine</li>
    <li>Google Open API / Github</li>
</ul>
</li>
    <li>
<h3>Communities / Conferences</h3>
<ul>
    <li>Yahoo! related: YDN / YUIConf / JSConf</li>
    <li>QCon / Velocity</li>
    <li>D2 / <a href="http://www.webrebuild.org/">WebRebuild</a></li>
    <li>NodeParty / HTML5</li>
</ul>
</li>
    <li>
<h3>Mobile Client</h3>
<ul>
    <li>JQueryMobile / HTML5 / CSS3</li>
    <li>iOS / Andriod</li>
    <li>responsive UI Design</li>
</ul>
</li>
    <li>
<h3>Security</h3>
<ul>
    <li>CSRF / XSS</li>
    <li>ADSafe / <a href="http://code.google.com/p/google-caja/">Caja</a> / <a href="http://developers.facebook.com/docs/fbjs/">FBJS</a> / Sandbox</li>
</ul>
</li>
    <li>
<h3>Deploy</h3>
<ul>
    <li><a href="http://www.jslint.com/">JSLint</a> / <a href="http://csslint.net/">CSSLint</a> / <a href="http://developer.yahoo.com/yui/compressor/">YUICompressor</a></li>
    <li>JSMin / TPacker-minifier</li>
    <li>Ant / Make</li>
    <li>LAMP</li>
</ul>
</li>
    <li>
<h3>Framework / Library</h3>
<ul>
    <li>jQuery / YUI</li>
    <li>Prototype / <a href="mootools.net">Mootools</a> / ExtJS</li>
    <li>Smarty / Django / Zend</li>
    <li>YUITest / QUnit / Jasmine</li>
</ul>
</li>
    <li>
<h3>Programming</h3>
<ul>
    <li>JavaScript</li>
    <li>PHP / Python / Perl / Ruby / BashShell</li>
    <li>NodeJS / FlashActionScript</li>
    <li>MVC</li>
    <li>OOP / AOP</li>
    <li>Functional Programming Language</li>
    <li>Design Pattern</li>
</ul>
</li>
    <li>
<h3>Debugging tool</h3>
<ul>
    <li>Firebug / Web Inspector</li>
    <li><a href="http://developer.yahoo.com/yslow/">YSlow</a> / <a href="http://www.smushit.com/ysmush.it/">Smushit</a></li>
    <li><a href="http://www.my-debugbar.com/wiki/IETester/HomePage">IETester</a> / IEDeveloperToolBar</li>
    <li>SuperPreview / <a href="http://jsbeautifier.org/">JsBeautifier</a></li>
    <li><a href="http://www.fiddler2.com/fiddler2/">Fiddler</a> / WireShark / <a href="http://www.tcpdump.org/">tcpdump</a></li>
</ul>
</li>
    <li>
<h3>Development tool</h3>
<ul>
    <li>Vim / Aptana / Notepad++ / Sublime / Emacs</li>
    <li>svn / git</li>
</ul>
</li>
    <li>
<h3>Computer basics</h3>
<ul>
    <li>Compiling</li>
    <li>Network</li>
    <li>Operating System</li>
    <li>Algorithm</li>
    <li>Software Engineering / Testing</li>
</ul>
</li>
    <li>
<h3>Standards</h3>
<ul>
    <li>w3c / DOM / BOM / XHTML / JSON / JSONP</li>
    <li>HTML5 / CSS3</li>
    <li>ECMAScript</li>
    <li><a href="http://www.commonjs.org/">CommonJS</a></li>
    <li>HTTP1.1</li>
</ul>
</li>
    <li>
<h3>Performance</h3>
<ul>
    <li><a href="http://www.webpagetest.org/">WebPageTest</a></li>
    <li><a href="http://www.showslow.com/">ShowSlow</a> / YSlow</li>
    <li><a href="https://developers.google.com/speed/pagespeed/">PageSpeed</a></li>
    <li>HttpWatch</li>
    <li>DynaTrace's Ajax</li>
</ul>
</li>
</ul>

<p>Update Nov 12, 2012:</p>

<p>There are something you can also refer to. Something Awesome.</p>

<p><a href="http://addyosmani.com/resources/toolschart/chart.pdf">http://addyosmani.com/resources/toolschart/chart.pdf</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>856</wp:post_id>
		<wp:post_date>2012-11-05 09:52:50</wp:post_date>
		<wp:post_date_gmt>2012-11-05 01:52:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>frontend-engineer-skill-structure</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="allenlsy-ri-ji-xin-de"><![CDATA[Daily Life]]></category>
		<category domain="category" nicename="web-development"><![CDATA[Web Development]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1285526286]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>42</wp:comment_id>
			<wp:comment_author><![CDATA[电视棒软件]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://u.xunzai.com/fileview_1424639.html</wp:comment_author_url>
			<wp:comment_author_IP>119.187.127.234</wp:comment_author_IP>
			<wp:comment_date>2013-04-01 17:50:43</wp:comment_date>
			<wp:comment_date_gmt>2013-04-01 09:50:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Null...</strong>

分析的很透彻，很欣赏你的看法，学习了。...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>63</wp:comment_id>
			<wp:comment_author><![CDATA[rimonabantexcellence site title]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.rimonabantexcellence.com/t.php?aHR0cDovL2FsbGVubHN5LmNvbS8yMDEyLzExL2Zyb250ZW5kLWVuZ2luZWVyLXNraWxsLXN0cnVjdHVyZS8=</wp:comment_author_url>
			<wp:comment_author_IP>94.23.238.222</wp:comment_author_IP>
			<wp:comment_date>2013-05-23 21:36:56</wp:comment_date>
			<wp:comment_date_gmt>2013-05-23 13:36:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Hello http://allenlsy.com/2012/11/frontend-engineer-skill-structure/ [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Hand of Sorrow - By Within Temptation</title>
		<link>http://allenlsy.com/2012/11/hand-of-sorrow-by-within-temptation/</link>
		<pubDate>Sun, 11 Nov 2012 05:39:42 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=864</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: center;"><iframe width="420" height="315" src="http://www.youtube.com/embed/7Vt3kxmuioM" frameborder="0" allowfullscreen=""></iframe></p>
<p style="text-align: center;"><a href="http://allenlsy.com/wp-content/uploads/2012/11/within-temptation-within-temptation-15412356-1280-800.jpg"><img class="aligncenter size-large wp-image-871" title="within-temptation" src="http://allenlsy.com/wp-content/uploads/2012/11/within-temptation-within-temptation-15412356-1280-800-1024x640.jpg" alt="" width="640" height="400" /></a></p>
<p style="text-align: center;"></p>
<p style="text-align: center;">The child without a name 无名小卒
grew up to be the hand 登万乘之尊
To watch you, to shield you, 为守你护你
or kill on demand 甚至毁灭在所不惜
The choice he made 所作所为
he could not comprehend 他仍未清醒意识到
He’s got a grim secret 绝无余地 冥冥注定
they had to command 王，便是他的宿命</p>
<p style="text-align: center;">He’s torn between his honor 他的一生在苍生膜拜的荣耀
and the true love of his life 在生世真爱之间反复挣扎冲突
He prayed for both but was denied 祈求两全但注定无望</p>
<p style="text-align: center;">So many dreams are broken 几多梦想支离破碎
and so much we sacrifice 几许牺牲无怨无悔
Was it worth the ones we loved 所热爱的一切，值得与否?
and had to leave behind 然总须弃诸身后
So many years have past 流年似水
toward a noble land of lies 谎言为基筑就荣耀之邦
Will all our sins be justified? 一切原罪，将成明证的真理？</p>
<p style="text-align: center;">The curse of his powers tormented his life 拥诅咒之力，致痛苦如附骨之蛆
Obeying the crown was a sinister crime 君临天下却是滔天罪恶
His soul was tortured by love and by pain 恩怨爱恨交织把灵魂扭曲
He surely would flee but the oath made him stay 拼命逃离然宿命的诅咒如影随形</p>
<p style="text-align: center;">Please forgive me for the sorrow 宽恕吧，纵是予你满腹哀伤
For leaving you in fear 弃你而去，遗你于满怀恐惧
For the dreams we had to silence 因这是为梦而必须学会的接受的隐忍
That’s all there’ll ever be 此即任何时候任何事实不变的样子
Still I’ll be the hand that saves you 我必仍是保全你救赎你的大能之手
Though you’ll not see that it is me 勿庸置疑 即使永无人提起</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>864</wp:post_id>
		<wp:post_date>2012-11-11 13:39:42</wp:post_date>
		<wp:post_date_gmt>2012-11-11 05:39:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hand-of-sorrow-by-within-temptation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="allenlsy-ri-ji-xin-de"><![CDATA[Daily Life]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1281825450]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>40</wp:comment_id>
			<wp:comment_author><![CDATA[zhangmingmin2008@gmail.com]]></wp:comment_author>
			<wp:comment_author_email>zhangmingmin2008@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>220.255.2.145</wp:comment_author_IP>
			<wp:comment_date>2013-01-09 16:34:42</wp:comment_date>
			<wp:comment_date_gmt>2013-01-09 08:34:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[here font too small
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[893652292]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>62</wp:comment_id>
			<wp:comment_author><![CDATA[rimonabantexcellence site title]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.rimonabantexcellence.com/t.php?aHR0cDovL2FsbGVubHN5LmNvbS8yMDEyLzExL2hhbmQtb2Ytc29ycm93LWJ5LXdpdGhpbi10ZW1wdGF0aW9uLw==</wp:comment_author_url>
			<wp:comment_author_IP>94.23.238.222</wp:comment_author_IP>
			<wp:comment_date>2013-05-23 21:36:56</wp:comment_date>
			<wp:comment_date_gmt>2013-05-23 13:36:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Hello http://allenlsy.com/2012/11/hand-of-sorrow-by-within-temptation/ [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>64</wp:comment_id>
			<wp:comment_author><![CDATA[rimonabantexcellence site title]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.rimonabantexcellence.com/t.php?aHR0cDovL2FsbGVubHN5LmNvbS8yMDEyLzExL2hhbmQtb2Ytc29ycm93LWJ5LXdpdGhpbi10ZW1wdGF0aW9uLz9yZXBseXRvY29tPTQw</wp:comment_author_url>
			<wp:comment_author_IP>94.23.238.222</wp:comment_author_IP>
			<wp:comment_date>2013-05-23 21:37:31</wp:comment_date>
			<wp:comment_date_gmt>2013-05-23 13:37:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Hello http://allenlsy.com/2012/11/hand-of-sorrow-by-within-temptation/?replytocom=40 [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67</wp:comment_id>
			<wp:comment_author><![CDATA[ralph lauren]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://polofemme2013.tumblr.com</wp:comment_author_url>
			<wp:comment_author_IP>202.105.89.51</wp:comment_author_IP>
			<wp:comment_date>2013-06-04 09:12:09</wp:comment_date>
			<wp:comment_date_gmt>2013-06-04 01:12:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>ralph lauren...</strong>

I am really appreciated for this site. Its an useful topic. It assist me very much to solve some issues. Its possibility are so great and working style so fast. I feel it might be assist all of you. Many thanks a great deal for experiencing this beauty...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>82</wp:comment_id>
			<wp:comment_author><![CDATA[is the jump manual worth it]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.youtube.com/watch?v=sES-Gk6tu7k</wp:comment_author_url>
			<wp:comment_author_IP>165.231.12.19</wp:comment_author_IP>
			<wp:comment_date>2013-10-21 00:30:58</wp:comment_date>
			<wp:comment_date_gmt>2013-10-20 16:30:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>is the jump manual worth it...</strong>

Take a look at our web site right this moment if you are looking for a system that will enable you to improve your vertical jump considerably....]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Testing strategies with JUnit</title>
		<link>http://allenlsy.com/2013/01/testing-strategies-with-junit/</link>
		<pubDate>Tue, 29 Jan 2013 02:05:32 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=881</guid>
		<description></description>
		<content:encoded><![CDATA[<ul>
<li><a href="#testable">How To Write Testable Code</a></li>
<li><a href="#tdd">Several Words About TDD</a></li>
<li><a href="#stubmock">Stubs and Mocks</a></li>
<li><a href="#ioc">Inverse of Control</a></li>
<li><a href="#ict">In-Container Testing</a></li>
</ul>

<hr />

<p>In order to do unit testing easier, one should keep a word in mind: <strong>Isolation</strong>. Try your best to isolate the irrelevant things from your class, and make them easy to config.</p>

<h2 id="testable">How To Write Testable Code</h2>

<p>There are some common rules to write testable code.</p>

<h4>* Never change the signature of a public method</h4>

<p>If you change the signature of a public method, then you need to change every call to site in the application and unit tests. In the open source world, and for any API made public by a commercial product, life can get even more complicated -- many people use your code, you should make it backward compatible.</p>

<h4>* Reduce Dependencies</h4>

<p>Unit tests verify your code in isolation. Your unit tests should instantiate the class you want to test, use it, and assert its correctness. Do not instantiate other classes.</p>

<h4>* Create Simple Constructors</h4>

<p>When testing, there are something we need to do:</p>

<ul>
<li>Instantiate the class to test</li>
<li>Set the calss into a particular state</li>
<li>Assert the final state of the class</li>
</ul>

<p>With complicated construcotr, we might mix the first and second points. This code is hard to maintain and test.</p>

<h4>* Law of Demeter</h4>

<p>Also known as the <strong>Least Knowledge principle</strong>: one class should know only as much as it needs to know.</p>

<p>Consider the following code:</p>

<pre lang="java">
class Car {
    private Driver driver;
    
    Car(Context context) {
        this.driver = context.getDriver();
    }
}
</pre>

<p><code>Car</code> should not know the <code>Context</code> object.</p>

<p>Here is a recommended solution</p>

<pre lang="java"><code>
Car(Driver driver) {
    this.driver = driver;
}
</code></pre>

<h4>* Avoid hidden dependendcis and global state</h4>

<p>Global state makes it possible for many clients to share the global object.</p>

<p>See the following code:</p>

<pre lang="java">
public void reserver() {
    DBManager manager = new DBManager();
    manager.initDatabase();
    Reservation r = new Reservation();
    r.reserve();
}
</pre>

<p>The <code>DBManager</code> implies a global state. And the <code>Reservation</code> class hides its dependency on the database manager from the programmer because the PAI doesn't give us a clue.</p>

<p>Here is a better implementation</p>

<pre lang="java">
public void reserver() {
    DBManager manager = new DBManager();
    manager.initDatabase();
    Reservation r = new Reservation(manager);
    r.reserve();
}
</pre>

<p>Here, the <code>Reservation</code> object should be able to function only if it has been configured with a database manager.</p>

<h4>* Favor Generic Methods</h4>

<p>In order to achive isolation in testing, you need some articulation points in your code, where you can easily substitute your code with the test code. With polymorphism, the moethod you're calling can be determined at runtime. Static method does not have polymorphism, sometimes makes testing difficult.</p>

<h4>* Faver composition over inheritance</h4>

<h4>* Faver polymorphism over conditionals</h4>

<hr />

<h2 id="tdd">Several Words about TDD</h2>

<p>TDD, Test-Driven-Development, let the tests to drive you do programming. Someone says that there are two phases in TDD, someone says three. It doesn't matter much.</p>

<p>I mainly agree with the three-phases opinion. They are:</p>

<ul>
<li>Fail the test</li>
<li>Implement and Pass the test</li>
<li>Refactor</li>
</ul>

<p>Refactor is optional sometimes.</p>

<hr />

<h2 id="stubmock">Stubs and Mocks</h2>

<p><strong>Stub</strong>: Suppose you are development a complicated system. When the class or module is not fully implemented but you still want to test it, you can extends the existing class, and make the un-finished part working by just put in simple logic. For instance, if a method should query data from the database but it is not implemented, then you can stub it, make it return some values. Stubs does not change the existing code, but instead adapt to provide seamless integration. Stub is always used for coarse-grained software test, like integration test.</p>

<p><strong>Mock</strong>: fully fake class or module. It never has real business logic, just return values. It is very similar to stub. But only stubs is a extending the existing code, may contain real business logic, but mock does not have any real business logic. It is a brand new fake module.</p>

<p><strong>Talking about flexibility</strong>: someone may feel troublesome to write tests. Well, if your code is too inflexible for some tests to use, then your code is really inflexible, and you should redesign it.</p>

<p>In mocking techniques, sometimes we want to verify that a method has been called exactly some times. This is called <strong>expectation</strong>. Many mocking frameworks, like easymock, do provide the expectation functionality.</p>

<p><strong>Comparison</strong></p>

<p>Stub often requires less code than mock. But mocks are always running faster, especially if the function need to connect to database or depends on network connection.</p>

<hr />

<h2 id="ioc">Inversion of Control</h2>

<p>Talking again about IoC, that is what I mentioned at the beginning of this article. Traditionally In a class, say A, if we want to create an object B, which is an instance of another class, we just create it in A. But from the testing point of view, if we are writing unit test for A, then the correctness of test depends on the correctness of B, since the creation of B is inside A. To remove this dependency, that's why we need to inverse the creation(control) of B to outside of A. We may pass the created object B to class A or whatever. There are many good IoC containers in the market. Most famous is Spring. Guice is very popular these days.</p>

<hr />

<h2 id="ict">In-Container Testing</h2>

<p>Stubs and Mocks are both Out-Container Testing techniques. In-Container testing means that the object being tested must live in a environment, we call it container. For example, to test <code>SampleServlet</code>, it should be run with <code>HttpServletRequest</code> and <code>HttpSession</code>. Maybe it need live data. So it is the testing inside the container, like Tomcat.</p>

<p>This will be discussed in more details in the future.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>881</wp:post_id>
		<wp:post_date>2013-01-29 10:05:32</wp:post_date>
		<wp:post_date_gmt>2013-01-29 02:05:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>testing-strategies-with-junit</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="software-design"><![CDATA[Design]]></category>
		<category domain="post_tag" nicename="tesing"><![CDATA[tesing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1291694506]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>56</wp:comment_id>
			<wp:comment_author><![CDATA[rimonabantexcellence site title]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.rimonabantexcellence.com/t.php?aHR0cDovL2FsbGVubHN5LmNvbS8yMDEzLzAxL3Rlc3Rpbmctc3RyYXRlZ2llcy13aXRoLWp1bml0Lw==</wp:comment_author_url>
			<wp:comment_author_IP>94.23.238.222</wp:comment_author_IP>
			<wp:comment_date>2013-05-21 23:27:57</wp:comment_date>
			<wp:comment_date_gmt>2013-05-21 15:27:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Hello http://allenlsy.com/2013/01/testing-strategies-with-junit/ [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>60</wp:comment_id>
			<wp:comment_author><![CDATA[propecia]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.treintadetreinta.org/propecia.html</wp:comment_author_url>
			<wp:comment_author_IP>94.23.238.222</wp:comment_author_IP>
			<wp:comment_date>2013-05-23 03:01:15</wp:comment_date>
			<wp:comment_date_gmt>2013-05-22 19:01:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] propecia propecia [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>71</wp:comment_id>
			<wp:comment_author><![CDATA[evening dresses uk]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.dressurl.com</wp:comment_author_url>
			<wp:comment_author_IP>180.106.198.95</wp:comment_author_IP>
			<wp:comment_date>2013-06-19 20:13:53</wp:comment_date>
			<wp:comment_date_gmt>2013-06-19 12:13:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>evening dresses uk...</strong>

Truly when a person doesn??° know after that its approximately other users which they will assist, so here it takes place....]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>72</wp:comment_id>
			<wp:comment_author><![CDATA[osBFfSYV]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.u4xus3OT9gqhwS6K9m5399.com/</wp:comment_author_url>
			<wp:comment_author_IP>221.193.200.5</wp:comment_author_IP>
			<wp:comment_date>2013-06-19 21:26:21</wp:comment_date>
			<wp:comment_date_gmt>2013-06-19 13:26:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>osBFfSYV...</strong>

--...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>73</wp:comment_id>
			<wp:comment_author><![CDATA[free 5.0 nike]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://free50nike.devhub.com</wp:comment_author_url>
			<wp:comment_author_IP>27.41.54.139</wp:comment_author_IP>
			<wp:comment_date>2013-06-19 21:57:25</wp:comment_date>
			<wp:comment_date_gmt>2013-06-19 13:57:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>free 5.0 nike...</strong>

--...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>74</wp:comment_id>
			<wp:comment_author><![CDATA[Wholesale iphone 5]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.applest0re.com/</wp:comment_author_url>
			<wp:comment_author_IP>182.72.153.70</wp:comment_author_IP>
			<wp:comment_date>2013-06-19 21:57:25</wp:comment_date>
			<wp:comment_date_gmt>2013-06-19 13:57:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Wholesale iphone 5...</strong>

--...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>75</wp:comment_id>
			<wp:comment_author><![CDATA[england jersey]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://englandjersey.webstarts.com</wp:comment_author_url>
			<wp:comment_author_IP>183.62.141.10</wp:comment_author_IP>
			<wp:comment_date>2013-06-19 21:57:41</wp:comment_date>
			<wp:comment_date_gmt>2013-06-19 13:57:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>england jersey...</strong>

--...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>76</wp:comment_id>
			<wp:comment_author><![CDATA[POLAND JERSEY]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://polandjersey.jimdo.com</wp:comment_author_url>
			<wp:comment_author_IP>94.75.155.228</wp:comment_author_IP>
			<wp:comment_date>2013-06-19 21:57:56</wp:comment_date>
			<wp:comment_date_gmt>2013-06-19 13:57:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>POLAND JERSEY...</strong>

--...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>77</wp:comment_id>
			<wp:comment_author><![CDATA[tottenham hotspur jersey]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://tottenhamhotspurjersey.webstarts.com</wp:comment_author_url>
			<wp:comment_author_IP>119.162.147.63</wp:comment_author_IP>
			<wp:comment_date>2013-06-19 21:57:56</wp:comment_date>
			<wp:comment_date_gmt>2013-06-19 13:57:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>tottenham hotspur jersey...</strong>

--...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>78</wp:comment_id>
			<wp:comment_author><![CDATA[brazil jersey 2013]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.clubjerseys.us/football-Jerseys/Brazil-Jerseys/</wp:comment_author_url>
			<wp:comment_author_IP>114.40.189.27</wp:comment_author_IP>
			<wp:comment_date>2013-06-19 21:58:11</wp:comment_date>
			<wp:comment_date_gmt>2013-06-19 13:58:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>brazil jersey 2013...</strong>

--...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79</wp:comment_id>
			<wp:comment_author><![CDATA[herve leger gown]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://hervelegergown.xp3.biz</wp:comment_author_url>
			<wp:comment_author_IP>1.22.98.153</wp:comment_author_IP>
			<wp:comment_date>2013-06-19 21:58:11</wp:comment_date>
			<wp:comment_date_gmt>2013-06-19 13:58:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>herve leger gown...</strong>

--...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>CSS trick: float, overflow, clear</title>
		<link>http://allenlsy.com/2013/01/css-trick-float-overflow-clear/</link>
		<pubDate>Tue, 29 Jan 2013 06:05:28 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=913</guid>
		<description></description>
		<content:encoded><![CDATA[<p>The float and clear problem confuses many web developers.</p>

<p>Suppose we have a layout like this:</p>

<pre lang="html">
<style>
body{
    width:700px;
}

.left {
    width:300px;
    height: 200px;
    float: left;
    background-color: red;
}
.right {
    width:300px;
    height: 200px;
    float: right;
    background-color: yellow;
}
.wrapper {
    background-color: blue;
}
</style>
<body>
<div class="wrapper">
    <div class="left"></div>
    <div class="right"></div>
</div>
</body>
</pre>

<p>What will happen it that the wrapper will not contain the two <code>div</code>s. Check out yourself by set the background color of wrapper.</p>

<p>There are several ways to fix this.</p>

<h2>First way: clear: both</h2>

<p>Add this code to the css:</p>

<pre lang="css">
.clear {
    clear: both;
} 
</pre>

<p>And add this below the <code>.right div</code>:</p>

<pre lang="html">
<div class="clear"></div>
</pre>

<p>The reason is that, if at the bottom, there are many divs floated inside a wrapper <code>div</code>, then these floated <code>div</code>s will not extend the height(size) of the wrapper <code>div</code>. Adding a clear <code>div</code> at the bottom, with <code>clear: both</code>, which means nothing allows to be floated on neither sides of it, solves the problem.</p>

<h2>Second way: overflow</h2>

<p>Back to original layout. We can add another style to the wrapper <code>div</code>:</p>

<pre lang="css">
overflow: auto;
</pre>

<p>This means, if anything <code>div</code>s inside exceed the width or height, there will be a scroll bar.</p>

<p>If overflow is set to <code>hidden</code>, it will not display the exceeding part. But <code>hidden</code> also works for this problem.</p>

<h2>Third way: clearfix</h2>

<p>In the first way, adding a meaningless <code>div</code> at the end of wrapper is a bad programming habit. To avoid this, here comes <strong>clearfix</strong> trick.</p>

<p>Add this to the style:</p>

<pre lang="css">
.clear::after { // :psuedo-class ::psuedo-element
    // after means the at end of a element, not really after the element

    content: ":)"; // anything is ok
    clear: both;
    display:block;
    visibility: hidden;
    height:0px;
}
</pre>

<p>Apply <code>clear</code> to wrapper <code>div</code></p>

<pre lang="html">
<div class="wrapper clear">
    <div class="left"></div>
    <div class="right"></div>
</div>
</pre>

<p>This code means, with a clear class, an element will have a block at the end of the element. If you apply <code>clear</code> to a <code>div</code>, then it will have a block at the end of the <code>div</code>. This <code>div</code> has content, clear both left and right, like in the first way. It will display as a block, which by default is <code>auto</code>. The block will not be visible, but it exists. The <code>height</code> is 0px, so it will not take up space. We don't need to put a clear div using HTML at the end of the element. Code is clean. Yeah.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>913</wp:post_id>
		<wp:post_date>2013-01-29 14:05:28</wp:post_date>
		<wp:post_date_gmt>2013-01-29 06:05:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>css-trick-float-overflow-clear</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="css"><![CDATA[css]]></category>
		<category domain="category" nicename="web-development"><![CDATA[Web Development]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1302743462]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TDD in Rails development with RSpec</title>
		<link>http://allenlsy.com/2013/05/tdd-in-rails-development-with-rspec/</link>
		<pubDate>Thu, 02 May 2013 17:28:40 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=958</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
  <p>This article requires basic experience of TDD using UnitTest in Rails.</p>
</blockquote>

<p>I found many developers being confused by all the levels of testing in Rails, and some concepts in software testing. Rails community has a very very strong awareness of TDD, and even BDD. Apps are designd using an Outside-in approach, which makes me feel really comfortable and also effective.</p>

<p>Test suite is built while developing, not after developing. Although a test suite is not a silver bullet to 100% ensure the quality of your app, it does increase your confidence.</p>

<p><em>There is a voice saying writing test suite sometimes makes development less effective. In practical yes, I have the same feeling sometimes. But it is not the test suite to be blamed, but the way to write it. Don't write the test cases for something you are already very confident with. More test cases you write will not prove you are a good TDD practitioner.</em></p>

<p>I meanly use RSpec + FactoryGirl. There are bunchs of good testing frameworks out there, such as Cucumber, for Acceptance test. I only develop small or medium sized app, and I feel Cucumber will make my development less effective. Even if I want to write Acceptance test cases, RSpec + Capybara will do.</p>

<p><strong>I will illustrate how to do testing in Rails using RSpec in this article, with some of my experience of developing.</strong> Let's start.</p>

<h2>1. Get to know some basic concepts in testing using RSpec</h2>

<h3>1.1 Why use FactoryGirl?</h3>

<p>Fixture inside the Rails framework has some cons. Mainly they are:</p>

<ul>
<li>Only one set of fixtures in a default Rails application.</li>
<li>Each model has its own fixture file, and not easy to do data association.</li>
<li>Not flexible. Static data</li>
</ul>

<p>So we should use factories to replace fixtures. <strong>FactoryGirl</strong> is the gem we are looking for. And it is from thoughtbot.</p>

<p>I will not talk about how to use FactoryGirl here. You just need to know that it can create object, with association. For example, if you are developing a blo  g system, a <em>User</em> object has many <em>Blogs</em>, if you are still using fixture, then <code>user.blogs</code> may return nothing.</p>

<h3>1.2 What is mock and stub?</h3>

<p><strong>Stub</strong> is a fake object that returns a predetermined value for a method call without calling the actual object. To define a stub, the code may look like this:</p>

<pre lang="ruby">
thing.stubs(:name).returns("Fred")
</pre>

<p><strong>Mock</strong> is similar to a stub, but in addition to returning the fake value, a mock object also sets a testable expectation that the method being replaced will actually be called in the test. If the method is not called, the mock obkect triggers a test failure. The code may look like this:</p>

<pre lang="ruby">
thing.expects(:name).returns("Fred")
</pre>

<p>Difference here is that in mock, the <code>:name</code> must be called to pass the test.</p>

<h4>Mock and Stub in RSpec</h4>

<p>Mock and stub have some different meaning in RSpec. Let's see the official definition</p>

<blockquote>
  <p>The <code>mock_model</code> method generates a test double that acts like an instance of <code>ActiveModel</code>. The <code>stub_model</code>  generates an instance of a real object of <code>ActiveModel</code>. The benefit of <code>mock_model</code> is that it can mock some object that may not exist<code>. If you're working on a controller spec and you need a model that doesn't exist, you can pass</code>mock_model` a string and the generated obkect will act as though its an instance of the class named by that string.</p>
  
  <p>-- RSpec doc</p>
</blockquote>

<p>To illustrate <code>mock_model</code>, there is a piece of sample code</p>

<pre lang="ruby">
it "returns the correct name" do
    car = mock_model "Car"
    expect (car.class.name).to eq "Car"
</pre>

<p>Various of specs will be discussed from highest level to the lower.</p>

<h2>2. Feature Test</h2>

<h4><em>What does it test?</em></h4>

<blockquote>
  <p>Feature specs are high-level tests meant to <strong>exercise slices of functionality
  through an application.</strong> They should drive the application only via its
  <strong>external interface</strong>, usually web pages.</p>
  
  <p>--- RSpec doc</p>
</blockquote>

<p>From RSpec 2.0, capybara can only be used inside feature test. DSL <code>feature</code> and <code>scenario</code> will be used here. So at the time of writing, feature test is the only place you can simulate user interactions with the browser.</p>

<h4>Sample</h4>

<pre lang="ruby">
feature "logged in user" do
    background do
        @user = FactoryGirl.create(:user)
        
        visit login_page_path
        
        fill_in "user_email", with: @user.email
        fill_in "user_password", with: @user.password
        click_button "Log in"
    end
    
    scenario "change password" do
        visit "/password"
        
        fill_in "password, with: "N3w_pass,d"
        fill_in "password_confirmation", with: "N3w_pass,d"
        click_button "Update"
        
        page.should have_content "success"
    end 
end
</pre>

<p>The logic here is simple. You can start to feel the style RSpec doing test, and ignore the syntax details for now.</p>

<p><code>background</code> is equavalent to the setup in other testing frameworks. Here I used FactoryGirl to create a sample user object. <code>fill_in</code>, <code>visit</code>, <code>click_button</code> are all from capybara DSL. Since the scenarios we will test below are all require user to log in, we do the login process inside the background code block.</p>

<p>The scenario here is for a logged in user to change password. It visit the change password url, and fill in the form, then click "Update" button. The website will redirect user to another page. But this page should display something like "success", such as "You have successfully changed your password".</p>

<h2>3. Request Test</h2>

<h4><em>What does it test?</em></h4>

<p>To be simple, if you want to test a function(I mean the function of your product, not function in programming) that needs the collaboration of multiple controllers, or in another word, sends multiple request, you should use request test.</p>

<p>Unlike feature test, you cannot check whether the webpage contains certain piece of string. But you should check whether the action redirects to certain path, or renders certain template.</p>

<h2>4. Controller Test</h2>

<h4><em>What does it test?</em></h4>

<p>Controller test allows only one request to the controller. So in most situation, it refers to call only one action in the controller.  And like request test, you can test the rendering, redirecting, variable values when being rendered, and http response code.</p>

<h4>Sample</h4>

<p>Let's test visiting a blog page. This page will show the content of the blog.</p>

<pre lang="ruby">
describe BlogsController do
    let(:mock_blog) { FactoryGirl.create(:blog) }
    
    before { Blog.stub(:find).and_return( mock_blog ) }
    
    describe "GET show" do
        it "should display the post" do
            get :show
            assigns(:blog).should == mock_blog
        end
    end
end
</pre>

<p>I first defines the <code>mock_blog</code> object using FactoryGirl. Then in the <code>before</code> block, I state no matter what parameter is, the <code>Blog.find()</code> will always return <code>mock_blog</code> during the testing. See how stub works? Then comes the real testing. The test sends a get request to the show page of <code>BlogsController</code>. <code>assigns(:blog)</code> will get the <code>@blog</code> in the template being rendered. I assert that this <code>@blog</code> should be <code>mock_blog</code>, because <code>Blog.find</code> will return <code>mock_blog</code>.</p>

<h2>5. Model Test</h2>

<h4><em>What does it test?</em></h4>

<p>Model test is what we called "Unit test". It is the simplest type of testing. In Rails, it will test the ActiveModel classes.</p>

<h4>Sample</h4>

<p>Check out the example from RSpec official:</p>

<pre lang="ruby">
require "spec_helper"

describe Post do
  context "with 2 or more comments" do
    it "orders them in reverse chronologically" do
      post = Post.create!
      comment1 = post.comments.create!(:body => "first comment")
      comment2 = post.comments.create!(:body => "second comment")
      expect(post.reload.comments).to eq([comment2, comment1])
    end
  end
end
</pre>

<p>Make sense?</p>

<h2>6. Other tests</h2>

<p>Other tests are almost the same as Model test, and easy to understand, so I won't talk about it here. They are:</p>

<ul>
<li>View test: test content of rendered template when given the model</li>
<li>Helper test: test helpers methods. Very much like Model test</li>
<li>Mailer test: test the mail sent</li>
<li>Routing test: test whether a route is reachable</li>
</ul>

<p>There is one more test exists but has nothing to do with RSpec. It is the performance test.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>958</wp:post_id>
		<wp:post_date>2013-05-03 01:28:40</wp:post_date>
		<wp:post_date_gmt>2013-05-02 17:28:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tdd-in-rails-development-with-rspec</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<category domain="category" nicename="software-development-ruan-jian-kai-fa"><![CDATA[Software Development]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[tdd]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[testing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1289863502]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>NOTES of Effective Java (1) - Creating and destroying object</title>
		<link>http://allenlsy.com/2013/05/notes-of-effective-java-1-creating-and-destroying-object-2/</link>
		<pubDate>Wed, 08 May 2013 03:00:59 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=976</guid>
		<description></description>
		<content:encoded><![CDATA[<p><img src="http://www.crazysmoove.com/memjug/javabooks-slides/images/Effective_Java.jpg" alt="enter image description here" />
<br /></p>

<ul>
<li><a href="#i1">1. Use static factory method instead of constructor</a></li>
<li><a href="#i2">2. Consider a builder when faced with many constructor parameters</a></li>
<li><a href="#i3">3. Enforce the singleton property with a private constructor or an enum type</a></li>
<li><a href="#i4">4. Enforce noninstantiability with a private constructor</a></li>
<li><a href="#i5">5. Avoid creating unnecessary objects</a></li>
<li><a href="#i6">6. Eliminate obsolete object references</a></li>
<li><a href="#i7">7. Avoid using Finalizers</a></li>
</ul>

<hr />

<h2 id="i1">1. Use static factory method instead of constructor</h2>

<p>Class should provide a public <strong>static factory method</strong>. It is a static method returing an instance.</p>

<h4>Example</h4>

<pre lang="java">
public static Boolean valueOf(boolean b) {
    return b ? Boolean.TRUE : Boolean.False;
}

</pre>

<h4>Pros: compare to constructor</h4>

<ol>
<li>Easy to customize name, like <code>BigInteger.probablePrime</code> to return prime numbers</li>
<li>No need to create new object when called.</li>
<li>Able to return subclass instance</li>
</ol>

<h4>Cons</h4>

<ol>
<li>Classes without public or protected constructors cannot be subclassed.</li>
<li>They are not readily distinguishable from other static methods.</li>
</ol>

<p><code>java.util.Collections</code> have 32 static factory methods</p>

<h4>More</h4>

<p>The class of the object returned by a static factory method need not even exist at the time the class containing the method is written. Such flexible static factory methods form the basis of <em>service provider frameworks</em>. It is such kind of a system: multiple service provider implement one service, the system provide multiple implementation for client, and decouple them from implementations. A <em>service provider frameworks</em> have three important components:</p>

<ul>
<li><strong>Service Interface</strong>: implement the functionality</li>
<li><strong>Provider Registration API</strong>: client register the service</li>
<li><strong>Service Access API</strong>: client get service instance</li>
</ul>

<p>and one optional component:</p>

<ul>
<li><strong>Service Provider Interface</strong>: for provider to create the implementation of service.</li>
</ul>

<p>Take <strong>JDBC</strong> as an example, <code>Connection</code> is the service interface, <code>DriverManager.registerDriver</code> is the provider registration API, <code>DriverManager.getConnection</code> is the service access API, and <code>Driver</code> is the service provider interface.</p>

<h2 id="i2">2. Consider a builder when faced with many constructor parameters</h2>

<blockquote>
  <p>Don't write telescoping constructor pattern, because it is hard to write client code when there are many parameters, and harder still to read it</p>
</blockquote>

<h3>JavaBeans Pattern</h3>

<p>One parameterless constructor to create the object, and the call setter methods to set each required parameter and each optional parameter of interest.</p>

<h4>Cons</h4>

<ol>
<li>If construction process is split across multiple calls, a JavaBean may be in an inconsistent state partway through its construction.</li>
<li>JavaBeans pattern precludes the possibility of making a class immutable, because of setters.</li>
</ol>

<h3>Builder Pattern</h3>

<p>Client use required parameters to call the constructor(or static factory method) to get a builder object. Then client config the builder, and call the <code>build</code> method to create the immutable instance.</p>

<h4>Example</h4>

<pre lang="java">
public class NutritionFacts {
    private final int servingSize;
    private final int servings;
    private final int calories;
    private final int fat;
    private final int sodium;
    private final int carbohydrate;

    public static class Builder {
        // required parameters
        private final int servingSize;
        private final int servings;

        // optional parameters - ini with default values
        private int calories = 0;
        private int fat = 0;
        private int carbohydrate = 0;
        private int sodium = 0;

        public Builder(int servingSize, int servings) {
            this.servingSize = servingSize;
            this.servings = servings;
        }

        public Builder calories(int val)
        { calories = val; return this; }
        public Builder fat(int val)
        { fat = val; return this; }
        public Builder carbohydrate(int val)
        { carbohydrate = val; return this; }
        public Builder sodium(int val)
        { sodium = val; return this; }

        public NutritionFacts build()
        { return new NutritionFacts(this); }

    }
    private NutritionFacts(Builder builder)
    {
        servingSize = builder.servingSize;
        servings = builder.servings;
        calories = builder.calories;
        fat = builder.fat;
        sodium = builder.sodium;
        carbohydrate = builder.carbohydrate;
    }
}
</pre>

<p>For creating a NutritionFacts object</p>

<pre lang="java">
NutritionFacts cocaCola = new NutritionFacts.Builder(240, 8).calories(100).sodium(35).carbohydrate(27).build();
</pre>

<p>A builder whose parameters have been set makes a fine <em>Abstract Factory</em>. Client can pass such a builder to a method to enable the method to create one or more objects for the client.</p>

<p>For example, we need to create a tree.</p>

<pre lang="java">
public interface Builder< T > {
    public T build();
}

Tree buildTree(Builder< ? extends Node > nodeBuilder) { 
    // .. 
}
</pre>

<h2 id="i3">3. Enforce the singleton property with a private constructor or an enum type</h2>

<p>To make a singleton class that is implemented using either of the previous approaches serializable, it is not sufficient merely to add <code>implements Serializable</code> to its declaration. To maintain the singleton guarantee, you have to declare all instance fields <code>transient</code> and provide a <code>readResolve</code> method. Otherwise, each time a serialized instance is deserialized, a new instance will be created, leading to spurious <code>Elvis</code> sightings. To prevent this, add this <code>readResolve</code> method to the <code>Elvis</code> class:</p>

<pre lang="java">
private Object readResolve() {
    // Return the one true Elvis and let the garbage collector
    // take care of the Elvis impersonator.
    return INSTACE;
}
</pre>

<p>As on release of Java 1.5, there is a approach to implementing singletons</p>

<pre lang="java">
// Enum singleton = the preferred approach
public enum Elvis {
    INSTACE;

    public void leaveTheBuilding() { .. }
}
</pre>

<p>It provides the serialization machinery for free, and provides an ironclad guarantee against multiple instantiation, even in the face of sophisticated serialization or reflection attacks. Now it is the best way to implement a singleton.</p>

<h2 id="i4">4. Enforce noninstantiability with a private constructor</h2>

<h2 id="i5">5. Avoid creating unnecessary objects</h2>

<p>Try to use static factory method on immutable class, or mutable variables that known will not be changed.</p>

<h4>Example</h4>

<p>A method to check whether a person is born during baby boom. It will actually check whether the person was born between 1946 to 1964.</p>

<pre lang="java">
public class Person {
    private final Date birthDate;

    // Other fields 

    // DON'T DO THIS
    public boolean isBabyBoomer()
    {
        Calendar gmtCal = Calendar.getInstance(TimeZone.getTimeZone("GMT"));
        gmtCal.set(1946, Calendar.JANUMARY, 1, 0, 0, 0);
        Date boomStart = gmt.getTime();
        gmtCal.set(1965, Calendar.JANUMARY, 1, 0, 0, 0);
        Date boomEnd = gmt.getTime();
        return birthDate.compareTo(boomStart) >= 0 &&
            birthDate.compareTo(boomEnd) < 0;
        
    }
}
</pre>

<p>Instead, we can do:</p>

<pre lang="java">
public class Person {
    private final Date birthDate;

    // Other fields 

    private static final Date BOOM_START;
    private static final Date BOOM_END;

    static {
        Calendar gmtCal = Calendar.getInstance(TimeZone.getTimeZone("GMT"));
        gmtCal.set(1946, Calendar.JANUMARY, 1, 0, 0, 0);
        BOOM_START = gmt.getTime();
        gmtCal.set(1965, Calendar.JANUMARY, 1, 0, 0, 0);
        BOOM_END = gmt.getTime();
    }

    // DON'T DO THIS
    public boolean isBabyBoomer()
    {
        return birthDate.compareTo(BOOM_START) >= 0 &&
            birthDate.compareTo(BOOM_END) < 0;
        
    }
}
</pre>

<h4>Example</h4>

<pre lang="java">
public static void main(String[] args) {
    Long sum = 0L;
    for (long i=0; i < Integer.MAX_VALUE; i++)
        sum += i;
    System.out.println(sum);
}
</pre>

<p>This is program is slow. We should change <code>Long</code> to <code>long</code>.</p>

<h4>Principle</h4>

<p>The princeple is to reuse those objects that cost a lot to create as many times as possible.</p>

<h2 id="i6">6. Eliminate obsolete object references</h2>

<p>If a stack grows and then shrinks, the objects that were popped off the stack will not be garbage collected, even if the program using the stack has no more references to them. This is because the stack maintains <em>obsolete references</em> to these objects. An obsolete reference is simply a reference that will never be dereferenced again. If an object references is unintentionally retained, not only is that object excluded from garbage collection, but so too are any objects referenced by that object, and so on.</p>

<p>One way to resolve this is: null out references once they become obsolete.</p>

<h4>Example</h4>

<pre lang="java">
public Object pop() {
    if (size == 0)
        throw new EmptyStackException();
    Object result = elements[--size];
    elements[size] = null;
    return result;
}
</pre>

<h4>When to null out the reference?</h4>

<p>Whenever a class manages its own memory. the programmer should be alert for memory leaks. Whenever an element is freed, any object references contained in the element should be nulled out.</p>

<p>Storage Pool contains elements array. Array space is <em>allocated</em>, but elements inside is unknow to the garbage collector.</p>

<p><strong>Another source of memory leak is listeners and callbacks.</strong> Listeners need to be deregistered when not used any more.. The best way to ensure that callbacks are garbage collected promptly is to store only <em>weak references</em> to them, for example, by storing them only as keys in a <code>WeakHashMap</code>.</p>

<h2 id="i7">7. Avoid using Finalizers</h2>

<p>Using finalizer will lead to unstatble, low performance, and portability problems.</p>

<p>The problem of finalizer is that the time to run it is unpredictable. It is not even guarantee that the finalizer will be run.</p>

<p>One more problem is: it is about 430 times slower to create and destroy objects with finalizer.</p>

<p><strong>Provide an explicit termination method</strong>, and require clients of the class to invoke this method on each instance when it is no longer needed. <strong>Use try..catch..finally</strong>.</p>

<pre lang="java">
Foo foo = new Foo();
try {
    // Do what must be done with foo
} finally {
    foo.terminate(); // explicit termination method
}
</pre>

<h4>Act as a "safety net" in case the owner of an object forgets to call its explicit termination method</h4>

<p>The finalizer should log a warning if it finds that the resource has not been terminated</p>

<p>The four classes cited as examples of the explicit termination method pattern (<strong>FileInputStream, FileOutputStream, Timer and Connection</strong>) have finalizers that serve as swafy nets in case their termination methods aren't called.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>976</wp:post_id>
		<wp:post_date>2013-05-08 11:00:59</wp:post_date>
		<wp:post_date_gmt>2013-05-08 03:00:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>notes-of-effective-java-1-creating-and-destroying-object-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="category" nicename="programming-language-bian-cheng-yu-yan"><![CDATA[Programming Languages]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1291464920]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>NOTES of Effective Java (2) - Methods Common to All Objects</title>
		<link>http://allenlsy.com/2013/05/notes-of-effective-java-2-methods-common-to-all-objects/</link>
		<pubDate>Fri, 10 May 2013 07:13:35 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=986</guid>
		<description></description>
		<content:encoded><![CDATA[<p><img src="http://www.crazysmoove.com/memjug/javabooks-slides/images/Effective_Java.jpg" alt="enter image description here" />
<br /></p>

<ul>
<li><a href="#i8">8. Obey the general contract when overriding <code>equals()</code></a></li>
<li><a href="#i9">9. Always override <code>hashCode</code> when you override <code>equals</code></a></li>
<li><a href="#i10">10. Always Override <code>toString()</code></a></li>
<li><a href="#i11">11. Override <code>clone</code> judiciously</a></li>
<li><a href="#i12">12. Comparable interface</a></li>
</ul>

<hr />

<h2 id="i8">8. Obey the general contract when overriding <code>equals()</code></h2>

<p><code>equals()</code> should implement <strong>equivalence relation</strong>:</p>

<ul>
<li><strong>Reflexive</strong>: for any <code>x</code> not null, <code>x.equals(x)</code> should return <code>true</code></li>
<li><strong>Symmetric</strong>: for any <code>x, y</code> not null, if <code>y.equals(x)</code> returns <code>true</code>, then <code>x.equals(y)</code> returns <code>true</code></li>
<li><strong>Transitive</strong>: for any <code>x, y, z</code> not null, if <code>x.equals(y)</code> returns <code>true</code>, and <code>y.equals(z)</code> returns <code>true</code>, then <code>x.equals(z)</code> should return <code>true</code>  </li>
<li><strong>Consistent</strong>: for any <code>x</code> not null, multiple invocations of <code>x.equals(y)</code> consistently return <code>true</code> or consistently return <code>false</code>, provided no information used in <code>equals</code> comparisons on th objects is modified</li>
<li>for any <code>x</code> not null, <code>x.equals(null)</code> must return false</li>
</ul>

<p>There is a fundamental problem of equivalence relations in OOP: <strong>there is no way to extend an instantiable class and add a value component while preserving the <code>equals</code> contract</strong></p>

<h4>To ensure Reflexivity</h4>

<p>Difficult to violate this rule.</p>

<h4>To ensure Symmetry</h4>

<p>When implementing <code>equals()</code>, check type first, then do logic comparison.</p>

<h4>To ensure Transitivity</h4>

<p>Suppose class <code>ColorPoint</code> is a subclass of <code>Point</code>, we must override the <code>equals()</code> inherited from <code>Point</code>. The <code>equals()</code> of <code>ColorPoint</code> may be:</p>

<pre lang="java">
@Override
public boolean equals(Object o) {
    if (!(o instanceof ColorPoint))
        return false;
    return super.equals(o) && ((ColorPoint) o).color == color;
}
</pre>

<p>This code violates symmetry, since a <code>Point p</code> with attributes as <code>ColorPoint cp</code>, <code>p.equals(cp)</code> will return <code>true</code>.</p>

<p>There is no perfect way to solve the problem. <strong>Composition is better than inheritance</strong>. A good way is:</p>

<pre lang="java">
public class ColorPoint {
    private final Point point;
    private final Color color;

    public ColorPoint(int x, int y, Color color) {
        if (color == null)
            throw new NullPointerException();
        point = new Point(x, y);
        this.color = color;
    }

    public Point asPoint() {
        return point;
    }

    @Override public boolean equals(Object o) {
        if (!(o instanceof ColorPoint))
            return false;
        ColorPoint cp = ((ColorPoint) o);
        return cp.point.equals(point) && cp.color.equals(color);
    }
}
</pre>

<h2 id="i9">9. Always override <code>hashCode</code> when you override <code>equals</code></h2>

<p>Two distinct instances may be logically equal according to a class's <code>equals</code> method, but to Object's <code>hashCode</code> method, they're just two objects with nothing much in common. Therefore Object's <code>hashCode</code> method returns two seemingly random numbers instead of two equals numbers as required by the contract.</p>

<p>An example here:</p>

<pre lang="java">

import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.net.URLDecoder;
import java.util.HashMap;
import java.util.Map;

import org.apache.commons.io.IOUtils;
import main.shared.Util;

final class PhoneNumber 
{
    private final short areaCode;
    private final short prefix;
    private final short lineNumber;
    
    public PhoneNumber(int areaCode, int prefix,
                       int lineNumber)
    {
        rangeCheck(areaCode, 999, "area code");
        rangeCheck(prefix, 999, "prefix");
        rangeCheck(lineNumber, 9999, "line number");
        this.areaCode = (short) areaCode;
        this.prefix = (short) prefix;
        this.lineNumber = (short)lineNumber;
        
    }
    
    private static void rangeCheck(int arg, int max, String name) {
        if (arg < 0 || arg > max)
            throw new IllegalArgumentException(name + ": " +arg);
    }
    
    @Override
    public boolean equals(Object o) {
        if (o == this)
            return true;
        if (!(o instanceof PhoneNumber))
            return false;
        PhoneNumber pn = (PhoneNumber)o;
        return pn.lineNumber == lineNumber 
                && pn.prefix == prefix
                && pn.areaCode == areaCode;
    }
    
    // No hashCode
}

public class Main
{
    
    public static void main(String args[])
    {
        Map<PhoneNumber, String> m = new HashMap<PhoneNumber, String>();
        m.put(new PhoneNumber(707, 876, 5309), "Jenny");
        
        System.out.println(m.get(new PhoneNumber(707, 876, 5309)));
    }
}
</pre>

<p>We try to get the the same phone number from the map, but the output is <code>null</code>.</p>

<p>Here we have two objects. One is inserted into the Map. Since we haven't override the <code>hashCode()</code> method, these two objects has different hash code, thus <code>put</code> method put the first object into a <strong>hash bucket</strong>, but <code>get</code> method is looking for the object in the other hash bucket.</p>

<blockquote>
  <p>If you are not familiar with <strong>hash bucket</strong>, here is my explanation. In hashing algorithms, hash table can be thought of a list of list, <code>List&lt;List&gt; lst</code>. Each element in <code>lst</code> has a unique hash code in <code>lst</code>, representing a list(this is the <strong>hash bucket</strong> we were talking about).</p>
</blockquote>

<p>You can have a <code>hashCode()</code> method, returns a good hash value, NOT something like <code>return 42;</code>.</p>

<p>A good hash function tends to produce unequal hash codes for unequal objects. This is exactly what is meant by the third provision of the <code>hashCode</code> contract. Ideally, a hash function should distribute any reasonable collection of unequal instances uniformly across all possible hash values.</p>

<p><strong>A sample <code>hashCode()</code> method, with lazy instantiation</strong></p>

<pre lang="java">
private volatile int hashCode; 

@Override
public int hashCode() {
    int result = hashCode;
    if (result == 0) {
        int A = 17, B = 31;
        result = B * result + areaCode;
        result = B * result + prefix;
        result = B * result + lineNumber;

        hashCode = result;
        return result; 
    }   
    return result;
}
</pre>

<p>Don't be tempted to exclude significant parts of an object from the hash code computation to improve performance.</p>

<h2 id="i10">10. Always Override <code>toString()</code></h2>

<h2 id="i11">11. Override <code>clone</code> judiciously</h2>

<p>The <code>Cloneable</code> interface was intended as a <code>mixin interface</code> for objects to advertise that they permit cloning.</p>

<p>The <code>clone</code> method of <code>Object</code> is protected. You cannot, without reflection, invoke the <code>clone</code> method on an object merely because it implements <code>Cloneable</code>. Even a reflective invocation may fail, as there is no guarantee that the object has an accessible <code>clone</code> method.</p>

<p>The <code>Cloneable</code> interface has no methods, but determines the behavior of Object's protected clone implementation: if a class implements <code>Cloneable</code>, Object's <code>clone</code> method returns a field-by-field copy of the object; otherwise it throws <code>CloneNotSupportedException</code>.</p>

<p>A copy of an object means:</p>

<ul>
<li>x.clone() != x</li>
<li>x.clone().getClass() == x.getClass()</li>
<li>x.clone().equals(x)</li>
</ul>

<p><code>clone</code> method functions as another constructor. You must ensure that it does no harm to the original object and that it properly establishes invariants on the clone.</p>

<p>For something like a stack, where there are already many elements, a <code>clone</code> method should like this:</p>

<pre lang="java">
@Override
public Stack clone() {
    try {
        Stack result = (Stack) super.clone();
        result.elements = elements.clone();
        return result;
    } catch (CloneNotSupportedException e){
        throw new AssertionError();
    }
} 
</pre>

<p>NOTE: if <code>elements</code> field is <code>final</code>, this may not work.</p>

<h4>Example of <code>clone()</code> method of a HashTable class</h4>

<pre lang="java">
@Override
public class HashTable implements Cloneable {
    private Entry[] buckets = ...;
    private static class Entry {
        final Object key;
        Object value;
        Entry next;

        Entry(Object key, Object value, Entry next) {
            this.key = key;
            this.value = value;
            this.next = next;
        }
    }   
    
    private static class Entry {
        final Object key;
        Object value;
        Entry next;

        Entry(Object key, Object value, Entry next) {
            this.key = key;
            this.value = value;
            this.next = next;
        }

        Entry deepCopy() {
            return new Entry(key, value, next == null ? null : next.deepCopy() );
        }
    }

    public HashTable clone()
    {
        try {
            HashTable result = (HashTable) super.clone();
            result.buckets = new Entry[buckets.length];
            for (int i = 0; i < buckets.length; i++)
                if (buckets[i] != null)
                    result.buckets[i] = buckets[i].deepCopy();
            return result;
        } catch (CloneNotSupportedException e) {
            throw new AssertionError();
        }
    }

    // other stuff
}

</pre>

<p>For long linked list, stack is easy to overflow. In <code>deepCopy()</code>, we can replace recursion with iteration.</p>

<pre lang="java">
Entry deepCopy()
{
    Entry result = new Entry(key, value, next);

    for (Entry p = result; p.next != null; p = p.next)
        p.next = new Entry(p.next.key, p.next.value, p.next.next);
    return result;
}
</pre>

<h4>Copy Constructor</h4>

<p>To sum up, better not extends <code>Cloneable</code>. Copy Constructor is more appropriate and flexible.</p>

<h2 id="i12">12. Comparable interface</h2>

<p>Like <code>equals()</code>, there are some rules that <code>compareTo()</code> must follow. In the following description, the notation <code>sgn(expression)</code> designates the sign function in math.</p>

<ul>
<li>The implementor must ensure <code>sgn(x.compareTo(y)) == -sgn(y.compareTo(x))</code> for all <code>x</code> and <code>y</code>.</li>
<li>The implementor must ensure that the relation is transitive: <code>x.compareTo(y) &gt; 0 &amp;&amp; y.compareTo(z) &gt; 0</code> implies <code>x.compareTo(z) &gt; 0</code></li>
<li>The implementor must ensure that x.compareTo(y) == 0 implies that <code>sgn(x.compareTo(z)) == sgn(y.compareTo(z))</code>, for all z</li>
<li>Optional requirement: <code>(x.compareTo(y) == 0 ) == (x.equals(y))</code></li>
</ul>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>986</wp:post_id>
		<wp:post_date>2013-05-10 15:13:35</wp:post_date>
		<wp:post_date_gmt>2013-05-10 07:13:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>notes-of-effective-java-2-methods-common-to-all-objects</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="category" nicename="programming-language-bian-cheng-yu-yan"><![CDATA[Programming Languages]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1285521329]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>NOTES of Effective Java (5) - Enum and Annotation</title>
		<link>http://allenlsy.com/2013/05/notes-of-effective-java-5-interface-and-annotation/</link>
		<pubDate>Tue, 14 May 2013 07:02:38 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=1006</guid>
		<description></description>
		<content:encoded><![CDATA[<p><img src="http://www.crazysmoove.com/memjug/javabooks-slides/images/Effective_Java.jpg" alt="enter image description here" />
<br /></p>

<ul>
<li><a href="#i30">30. Use enums instead of <code>int</code> constants</a></li>
<li><a href="#i31">31. Use instance fields instead of ordinals</a></li>
<li><a href="#i32">32. Use <code>EnumSet</code> instead of bit fields</a></li>
<li><a href="#i33">33. Use <code>EnumMap</code> instead of ordinal indexing</a></li>
<li><a href="#i34">34. Emulate extensible enums with interfaces</a></li>
<li><a href="#i35">35. Prefer annotation to naming patterns(naming convention)</a></li>
<li><a href="#i36">36. Consistenly use the <code>Override</code> annotation</a></li>
<li><a href="#i37">37. Use marker interfaces to define types</a></li>
</ul>

<hr />

<h2 id="i30">30. Use enums instead of <code>int</code> constants</h2>

<pre lang="java">
public enum Apple { FUJI, PIPPIN, GRANNY_SMITH };
</pre>

<h4>Adding methods to enum</h4>

<pre lang="java">
public enum Sample {
    Obj1 (1.0, 2.0),
    Obj2 (3.0, 4.0),
    Obj3 (5.0, 6.0);

    private final double a;
    private final double b;
    private final double c = 2.3;
    private final double d;


    // constructor
    Sample(double a, double b) {
        this.a = a;
        this.b = b;
        this.d = a*c-b;
    }

    public double a() { return a; }
    public double b() { return b; }
    public double d() { return d; }


}
</pre>

<p><strong>Pay attention</strong> to the sign after <code>Obj1</code> and <code>Obj3</code>. One is <code>,</code>, the other is <code>;</code>.</p>

<pre lang="java">
public enum Operation {
    PLUS, MINUS, TIMES, DIVIDE;

    double apply(double x, double y) {
        switch(this) {
            case PLUS: return x + y;
            case MINUS: return x - y;
            case TIMES: return x * y;
            case DIVIDE: return x / y;
            default: throw new AssertionError("Unknown op: " + this);
        }
    }
}

</pre>

<p><code>this</code> here refers to the enum value.</p>

<p>This piece of code, if we add a new operation, we need to modify <code>apply()</code>. It's not flexible.</p>

<pre lang="java">
public enum Operation {
    PLUS("+") { double apply(double x, double y) { return x + y ; } },
    MINUS("-") { double apply(double x, double y) { return x - y ; } },
    TIMES("*") { double apply(double x, double y) { return x * y ; } },
    DIVIDE("/") { double apply(double x, double y) { return x / y ; } };

    private final String symbol;

    Operation(String symbol) { this.symbol = symbol; }

    @Override
    public String toString() { return symbol; }

    abstract double apply(double x, double y);
}
</pre>

<p>The <code>abstract</code> method in enum must be implemented by enum value.</p>

<p>Another good trick is, since we have a <code>toString()</code> method here, we can have a reverse operation for it called <code>fromString()</code>. <code>PLUS.toString()</code> returns <code>+</code>, so <code>Operation.fromString("+")</code> should return <code>PLUS</code>.</p>

<pre lang="java">

private static final Map<String, Operation> stringToEnum = new HashMap<String, Operation>();

static {
    for (Operation op : values() )
        stringToEnum.put(op.toString(), op);
}

public static Operation fromString(String symbol) {
    return stringToEnum.get(symbol);
}

</pre>

<p><strong>Pay attention</strong>, THE ORDER of <code>static</code> block and the method MATTERS here.</p>

<h4>Strategy Design Pattern using enum</h4>

<p>Here is a program counting the payroll. The payroll is different for weekdays and weekends.</p>

<p>The policy is:</p>

<ul>
<li>If work on weekday and worked less than 8 hours, then will be paid <code>hours*payRate</code>.</li>
<li>If work on weekday and more than 8 hours, then wiil be paid <code>8*payRate + (hours - 8)*payRate / 2</code></li>
<li>If work on weekend, then will be paid <code>hours*payRate/2</code></li>
</ul>

<pre lang="java">
enum PayrollDay {
    MONDAY(PayType.WEEKDAY),
    TUESDAY(PayType.WEEKDAY),
    WEDNESDAY(PayType.WEEKDAY),
    THURSDAY(PayType.WEEKDAY),
    FRIDAY(PayType.WEEKDAY),
    SATURDAY(PayType.WEEKEND),
    SUNDAY(PayType.WEEKEND);

    private final PayType;
    PayrollDay(PayType payType) { this.payType = payType; }

    double pay(double hoursWorked, double payRate) {
        return payType.pay(hoursWorked, payRate);
    }
    
    private enum PayType {
        WEEKDAY {
            double overtimePay(double hours, double payRate) {
                return hours <= HOURS_PER_SHIFT ? 0 : (hours - HOURS_PER_SHIFT) * payRate / 2;
            }
        },
        WEEKEND {
            double overtimePay(double hours, double payRate) {
                return hours * payRate / 2;
            }
        };

        private static final int HOURS_PER_SHIFT = 8;

        abstract double overtimePay(double hours, double payRate);

        double pay(double hoursWorked, double payRate) {
            double basePay = hoursWorked * payRate;
            return basePay + overtimePay(hoursWorked, payRate);
        }
    }
}

</pre>

<p><code>PayrollDay</code> has certain <code>PayType</code>, <code>PayType</code> has a method <code>pay()</code>, each <code>PayType</code> has its own <code>overtimePay()</code>.</p>

<h2 id="i31">31. Use instance fields instead of ordinals</h2>

<p>Never derive a value associated with an enum from its ordinal; store it in an instance field instead.</p>

<pre lang="java">
public enum Ensemble {
    SOLO(1), DUET(2), TRIO(3), QUARTET(4);

    private final int numberOfMusicians;
    Ensemble(int size) { this,numberOfMusicians = size; }
    public int numberOfMusicians() { return numberOfMusicians; }
}
</pre>

<h2 id="i32">32. Use <code>EnumSet</code> instead of bit fields</h2>

<p>When using bit fields:</p>

<pre lang="java">
public class Text {
    public static final int STYLE_BOLD = 1 << 0;
    public static final int STYLE_BOLD = 1 << 1;
    public static final int STYLE_BOLD = 1 << 2;
    public static final int STYLE_BOLD = 1 << 3;

    public void applyStyles() { ... }

}

text.applyStyles(STYLE_BOLD | STYLE_ITALIC);
</pre>

<p>Try to use <code>EnumSet</code></p>

<pre lang="java">
public class Text {
    public enum Style { BOLD, ITALIC, UNDERLINE, STRIKETHROUGH }

    public void applyStyles(Set< Style > styles) { .. }
}

text.applyStyles(EnumSet.of(Style.BOLD, Style.ITALIC) );
</pre>

<h2 id="i33">33. Use <code>EnumMap</code> instead of ordinal indexing</h2>

<p>DON'T USE <code>ordinal()</code> in enum.</p>

<pre lang="java">
public class Herb {
    public enum Type { A, B, C }

    private final String name;
    private final Type type;

    Berb(String name, Type type ) {
        this.name = name;
        this.type = type;
    }

    @Override
    public String toString() {
        return name;
    }
}

// Then we have some herbs

Herb[] garden = ...;

Set< Herb >[] herbsByType = (Set< Herb >[]) new Set[Herb.Type.values().length];
for (int i = 0; i < herbsByType.length; i++)
    herbsByType[i] = new HashSet< Herb >();

for (Herb h : garden)
    herbsByType[ h.type.ordinal() ].add(h); // DON'T USE ordinal()
</pre>

<p>Using array with generic is unsafe. Better way to do this is is to use <code>EnumMap</code>:</p>

<pre lang="java">
Map< Herb.Type, Set< Herb > > herbsByType = new EnumMap< Herb.Type, Set< Herb > >(Herb.Type.class);

for (Herb.Type t : Herb.Type.values() )
    herbsByType.put(t, new HashSet< Herb >() );
for (Herb h : garden)
    herbsByType.get(h.type).add(h);

</pre>

<h2 id="i34">34. Emulate extensible enums with interfaces</h2>

<p>Sometimes we want to make enum like class, have inheritance. Take the <code>Operation</code> enum in <a href="#i30">#30</a> as an example.</p>

<pre lang="java">
public interface Operation { 
    double apply(double x, double y);
}

public enum BasicOperation implements Operation {
    PLUS("+") { public double apply(double x, double y) { return x + y; } },
    MINUS("-") { public double apply(double x, double y) { return x - y; } },
    TIMES("*") { public double apply(double x, double y) { return x * y; } },
    DIVIDE("/") { public double apply(double x, double y) { return x / y; } };
    
    private final String symbol;

    BasicOperation(String symbol) { this.symbol = symbol; }

    @Override
    public String toString() {
        return symbol;
    }

}

// Extend from BasicOperation

public enum ExtendedOperation implements Operation {
    EXP("^") { public double apply(double x, double y) { return Math.pow(x, y); } },
    REMAINDER("%") { public double apply(double x, double y) { return x % y; } };

    private final String symbol;

    ExtendedOperation(String symbol) { this.symbol = symbol; }

    @Override
    public String toString() {
        return symbol;
    }
}

public static void main(String[] args )
{
    double x = 1.1;
    double y = 2.2;

    test(ExtendedOperation.class, x, y);
}

private static <T extends Enum< T > & Operation > void test( Class< T > opSet, double x, double y) {
    for (Operation op : opSet.getEnumConstants())
        System.out.printf("%f %s %f = %f\n", x, op, y, op.apply(x, y) );
}

</pre>

<p>This will output <code>^</code> and <code>%</code> operation result.</p>

<p>We use interface and implement the interface with enum to extends enum.</p>

<h2 id="i35">35. Prefer annotation to naming patterns(naming convention)</h2>

<p>Naming convention in Java has several disadvantages:</p>

<ol>
<li>Typo leads to error</li>
<li>There is no way to ensure that they are used only on appropriate program elements.</li>
<li>They provide no good way to associate parameter values with progarm elements.</li>
</ol>

<h4>Example: marker annotation</h4>

<pre lang="java">
@Retention(RetentionPolicy.RUNTIME) // Test annotations should be retained at runtime
@Target(ElementType.METHOD) // Test annotation is legal only on method declarations
public @interface Test {    
}

public class Sample {
    @Test 
    public static void m1() {} // test should pass

    public static void m2() {}

    @Test
    public static void m3() {
        thorw new RuntimeException("Boom"); // test should fail
    }
}
</pre>

<p><code>Test</code> annotation only provides information for use by interested programs. For testing frameworks, they may use the annotations:</p>

<pre lang="java">
public class RunTests {
    public static void main(String args[]) throw Exception {
        int tests = 0;
        int passed = 0;

        Class testClass = Class.forName(args[0]);
        for (Method m : testClass.getDeclaredMethods() ) {
            if (m.isAnnotationPresent(Test.class)) {
                tests++;
                try {
                    m.invoke(null);
                    passed++;
                }
                catch (InvocationTargetException wrappedExc) {
                    Throwable exc = wrappedExc.getCause();
                    System.out.println(m + " failed: " + exc);
                }
                catch (Exception exc) {
                    System.out.println("INVALID @Test: " + m);
                }           
            }
        }
        System.out.printf("Passed: %d, Failed: %d%n", passed, tests - passed); 
    }
}
</pre>

<p>This program checked <code>isAnnotationPresent(Test.class)</code>, to perform certain job.</p>

<h2 id="i36">36. Consistenly use the <code>Override</code> annotation</h2>

<p>Avoid making mistakes.</p>

<h2 id="i37">37. Use marker interfaces to define types</h2>

<p><strong>Marker interface</strong> is the interface like <code>Serializable</code>.</p>

<p>Marker interfaces has some advantages over annotation:</p>

<h4>1. marker interfaces define a type that is implemented by instances of the marked class, while marker annotations do not.</h4>

<p>This allows you to get some programming error in compilation time.</p>

<p>A bad thing in Java API is, the creator of <code>ObjectOutputStream</code> didn't use <code>Serializable</code> in <code>writeObject(Object obj)</code> method. The parameter should be <code>Serializable</code>.</p>

<h4>2. marker interfaces can be targeted more precisely.</h4>

<p>Annoation may be applied to any type, wilhe interface may have some restriction.</p>

<p><code>Set</code> interface can be applied to only subclass of <code>Collection</code></p>

<h4>3. It is possible to add more information to an annotation type after it is already in use, by adding one or more annotation type elements with defaults.</h4>

<h4>4. They are part of the larger annotation facility.</h4>

<h3>When to use annotation or marker interface?</h3>

<p>If marking an element inside the class, then we can only use annotation. I marking a class, one interface can implement the functionality of many annotations.</p>

<p>If you want to define a type here, use interface.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1006</wp:post_id>
		<wp:post_date>2013-05-14 15:02:38</wp:post_date>
		<wp:post_date_gmt>2013-05-14 07:02:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>notes-of-effective-java-5-interface-and-annotation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="category" nicename="programming-language-bian-cheng-yu-yan"><![CDATA[Programming Languages]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1287000513]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>55</wp:comment_id>
			<wp:comment_author><![CDATA[电视棒软件]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.07cn.com/downinfo/16871.html</wp:comment_author_url>
			<wp:comment_author_IP>122.7.238.17</wp:comment_author_IP>
			<wp:comment_date>2013-05-16 22:58:32</wp:comment_date>
			<wp:comment_date_gmt>2013-05-16 14:58:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Null...</strong>

分析的很透彻，很欣赏你的看法，学习了。...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80</wp:comment_id>
			<wp:comment_author><![CDATA[nouveau maillot de foot pas cher]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://1to1elite.com/1to1elite-maillotdefootpascher.html</wp:comment_author_url>
			<wp:comment_author_IP>113.119.55.249</wp:comment_author_IP>
			<wp:comment_date>2013-07-15 19:40:56</wp:comment_date>
			<wp:comment_date_gmt>2013-07-15 11:40:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>nouveau maillot de foot pas cher...</strong>

This is a fantastic inspiring write-up.I am pretty a lot pleased with your great work.You put genuinely very useful helpful data. Hold it up. Keep blogging. Seeking to reading through your up coming publish....]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>NOTES of Effective Java (6) - Methods</title>
		<link>http://allenlsy.com/2013/05/notes-of-effective-java-6-methods/</link>
		<pubDate>Thu, 16 May 2013 06:15:10 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=1010</guid>
		<description></description>
		<content:encoded><![CDATA[<p><img src="http://www.crazysmoove.com/memjug/javabooks-slides/images/Effective_Java.jpg" alt="enter image description here" />
<br /></p>

<ul>
<li><a href="#i38">38. Parameter validation</a></li>
<li><a href="#i39">39. Make defensive copies when needed</a></li>
<li><a href="#i40">40. Design method signatures carefully</a></li>
<li><a href="#i41">41. Use overloading judiciously</a></li>
<li><a href="#i42">42. Use varargs judiciously</a></li>
<li><a href="#i43">43. Return empty arrays or collections, not nulls</a></li>
<li><a href="#i44">44. Write doc comments for all exposed API elements</a></li>
</ul>

<hr />

<h2 id="i38">38. Parameter validation</h2>

<p>If parameter is not valid, a method should throw exceptions, other than continuing the method and return wrong result. Common exceptions are <code>IllegalArgumentException</code>, <code>IndexOutOfBoundsException</code>， <code>NullPointerException</code>.</p>

<p>For unexported method(such as private method), usually we use assertion to check their parameters</p>

<pre lang="java">
private static void sort(long a[], int offset, int length) {
    assert a != null;
    assert offset >= 0 && offset <= a.length;
    assert length >= 0 && length <= a.length - offset;
    // ...

}
</pre>

<p>If assertion failed, then program will throw <code>AssertionError</code>.</p>

<p>If the validation is costly, then validation can be performed implicitly in the process of doing the computation.</p>

<p>If there is exception during computation and the program throws another type of exception due to invalid parameter, we should use <strong>exception translation</strong>.</p>

<h2 id="i39">39. Make defensive copies when needed</h2>

<p>You must program defensively, with the assumption that clients of your class will do their best to destroy its invariants.</p>

<p>More likely, your class will have to cope with unexpected behavior resulting from honest mistakes on the part of programmers using your API.</p>

<h4>Example</h4>

<pre lang="java">
public Period(Date start, Date end) {
    if（start.compareTo(end) > 0)
        throw new IllegalArgumentException( start + " after " + end);
    this.start = start;
    this.end = end;

    public Date start() {
        return start;

    }

    public Date end() {
        return end;
    }

    // ...
}

Date start = new Date();
Date end = new Date();
Period p = new Period(start, end);
end.setYear(78); // modifies internals of p
</pre>

<p>To protect the <code>Period</code> instance internals, we need to make <strong>defensive copy</strong> for every variant parameter.</p>

<pre lang="java">
public Period(Date start, Date end)
{
    this.start = new Date(start.getTime());
    this.end = new Date(end.getTime());

    if (this.start.compareTo(this.end) > 0)
        throw new IllegalArgumentException( start + " after " + end);

}
</pre>

<p><strong>The defensive copy is before the parameter validation, and the validation is for the defensive copy, not the original parameters.</strong></p>

<p>Don't use the <code>clone</code> method to make a defensive copy of a parameter whose type is subclassable by untrusted parties.</p>

<p>Another way to attack is:</p>

<pre lang="java">
Period p = new Period(start, end);
p.end().setYear(78);
</pre>

<p>To defend, return a copy of internal object:</p>

<pre lang="java">
public Date start() {
    return new Date(start.getTime());
}

public Date end() {
    return new Date(end.getTime());
}
</pre>

<p>Use immutable objects as components of your objects,</p>

<p>If the class trust the caller of the class will not modify the internals, then no defensive copy is allowed. But it must be documented that the caller cannot modify the return value or parameter.</p>

<h2 id="i40">40. Design method signatures carefully</h2>

<ul>
<li>Choose method names carefully</li>
<li>Don't go overboard in providing convenience methods. Too many methods makes a class complex.</li>
<li>Avoid long parameter list</li>
<li>Prefer two-element enum types to <code>boolean</code> parameters</li>
</ul>

<h2 id="i41">41. Use overloading judiciously</h2>

<h4>Example: check the type of <code>Collection</code>:</h4>

<pre lang="java">
public class CollectionClassifier {
    public static String classify(Set< ? > s){
        return "Set";
    }

    public static String classify(List< ? > s){
        return "List"
    }

    public static String classify(Collection< ? > s){
        return "Unknown Collection";
    }

    public static void main(String[] args) {
        Collection< ? >[] collections = {
            new HashSet< String >(),
            new ArrayList< BigInteger >(),
            new HashMap< String, String>().values()
        };

        for (Collection< ? > c : collections) 
            System.out.println(classify(c));
    }
}
</pre>

<p>The output will be three <code>Unknown Collection</code>. Because in the for-loop, all the elements are compiled to be <code>Collection&lt;?&gt;</code>. Overloading will not dynamicly choose the right method like overriding does.</p>

<p>The correct way is:</p>

<pre lang="java">
public static String classify(Collection< ? > c) {
    return c instanceof Set ? "Set" : c instanceof List ? "List" : "Unknown Collection";
}
</pre>

<p>Better strategy to use overloading is never to export two overloadings with the same number of parameters. If a method uses varargs, not to overload it at all.</p>

<p>For example, int <code>ObjectOutputStream</code> class, the <code>write</code> method has many different expressions, such as <code>writeBoolean</code> and <code>writeInt</code>.</p>

<h4>Example</h4>

<pre lang="java">
public static Test {
    public static void main(String[] args) {
        List< Integer > list = new ArrayList< Integer >();

        for (int i = -3; i < 3; i++) 
            list.add(i);
        
        for (int i = 0; i < 3; i++)
            list.remove(i);

        System.out.println(list);
    }
}
</pre>

<p>The output is <code>[-2, 0, 2]</code>. <code>remove(int)</code> in <code>List</code> will remove the element at given position. To remove first appearing element, use <code>remove(E)</code>, which should be <code>remove((Integer) i)</code> here.</p>

<h2 id="i42">42. Use varargs judiciously</h2>

<p>For a method <code>void func(int... args)</code>, if user has no input, it will fail at runtime but not compile time. One way to solve the problem is to change it to <code>void func(int firstArg, int... remainingArgs)</code>.</p>

<h4>Example: right way to print an array</h4>

<pre lang="java">
System.out.println(Arrays.toString(ary));
// System.out.println(Arrays.asList(ary)); WILL NOT HAVE EXPECT OUTPUT
</pre>

<h2 id="i43">43. Return empty arrays or collections, not nulls</h2>

<h2 id="i44">44. Write doc comments for all exposed API elements</h2>

<p>Java doc uses specially formated documentation comment to generate API doc.</p>

<p>Doc comments should state all the <em>preconditions</em> and <em>postconditions</em>, and also <strong>side effect</strong>. Side effect is the observable change after running this. For example, if a method starts a backend thread, then the doc should state it.</p>

<p>Some common elements in doc: <code>@param</code>, <code>@return</code>, <code>@throws</code>, html element, <code>{@code}</code> piece, <code>{@literal}</code> to avoid escaping of <code>.</code> or other characters</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1010</wp:post_id>
		<wp:post_date>2013-05-16 14:15:10</wp:post_date>
		<wp:post_date_gmt>2013-05-16 06:15:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>notes-of-effective-java-6-methods</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="category" nicename="programming-language-bian-cheng-yu-yan"><![CDATA[Programming Languages]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[1011]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1291665646]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>52</wp:comment_id>
			<wp:comment_author><![CDATA[Mingmin Zhang]]></wp:comment_author>
			<wp:comment_author_email>zhangmingmin2008@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>115.42.250.214</wp:comment_author_IP>
			<wp:comment_date>2013-05-16 14:56:00</wp:comment_date>
			<wp:comment_date_gmt>2013-05-16 06:56:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[第一句有错别字]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[898901703]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>53</wp:comment_id>
			<wp:comment_author><![CDATA[allenlsy]]></wp:comment_author>
			<wp:comment_author_email>cafe@allenlsy.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>182.55.248.164</wp:comment_author_IP>
			<wp:comment_date>2013-05-16 15:02:00</wp:comment_date>
			<wp:comment_date_gmt>2013-05-16 07:02:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[谢了。您是订阅了还是怎么？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>52</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[898901703]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[898904282]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>66</wp:comment_id>
			<wp:comment_author><![CDATA[zh0014in]]></wp:comment_author>
			<wp:comment_author_email>zhangmingmin2008@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>115.42.250.214</wp:comment_author_IP>
			<wp:comment_date>2013-05-31 12:35:00</wp:comment_date>
			<wp:comment_date_gmt>2013-05-31 04:35:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@allenlsy:disqus 
能不能显示到秒，系统时间慢了20分钟==|||]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>53</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[898904282]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[914576337]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>NOTES of Effective Java (7) - General Programming</title>
		<link>http://allenlsy.com/2013/05/notes-of-effective-java-7-general-programming/</link>
		<pubDate>Thu, 16 May 2013 08:28:19 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=1016</guid>
		<description></description>
		<content:encoded><![CDATA[<p><img src="http://www.crazysmoove.com/memjug/javabooks-slides/images/Effective_Java.jpg" alt="enter image description here" />
<br /></p>

<ul>
<li><a href="#i45">45. Minimize the scope of local variables</a></li>
<li><a href="#i46">46. Prefer for-each loops to traditional <code>for</code> loops</a></li>
<li><a href="#i47">47. Know and use the libraries </a></li>
<li><a href="#i48">48. Avoid <code>float</code> and <code>double</code> of exact answers are required</a></li>
<li><a href="#i49">49. Prefer primitive types to boxed primitives</a></li>
<li><a href="#i50">50. Avoid strings where other types are more appropriate</a></li>
<li><a href="#i51">51. Beware the performance of string concatenation</a></li>
<li><a href="#i52">52. Refer to objects by their interfaces</a></li>
<li><a href="#i53">53. Prefer interfaces to reflection</a></li>
<li><a href="#i54">54. Use native methods judiciously</a></li>
<li><a href="#i55">55. Optimize judiciously</a></li>
<li><a href="#i56">56. Adhere to generally accepted naming conventins</a></li>
</ul>

<hr />

<h2 id="i45">45. Minimize the scope of local variables</h2>

<ul>
<li>Declare a variable when first using it.</li>
<li>Declare a local variable with a initial expression</li>
<li>Prefer for loop to while loop, since while loop may need a extra looping variable</li>
</ul>

<h2 id="i46">46. Prefer for-each loops to traditional <code>for</code> loops</h2>

<h2 id="i47">47. Know and use the libraries</h2>

<h4>Example: random number generator</h4>

<pre lang="java">
private static final Random rnd = new Random();

static int random(int n) {
    return Math.abs(rnd.nextInt()) % n;
}
</pre>

<p>There are three flaws.</p>

<ol>
<li>If <code>n</code> is a small power of 2, the sequence of random numbers it generates will repeat itself after a fairly short period.</li>
<li>If <code>n</code> is not a power of 2, some numbers will be returned more frequently than others. If <code>n</code> is large, this effect can be quite pronouned.</li>
<li>It can fail catastrophically, returning a number outside the specified range.</li>
</ol>

<p>The easiest way to solve the problem is to use <code>Random.nextInt(int)</code>.</p>

<p><strong>Use libraries, take advantage of other ones' research, focus on your logic implementation, improve the readability of your code</strong></p>

<p>Read <em>java5-feat</em>, <em>java6-feat</em> page on official website.</p>

<h2 id="i48">48. Avoid <code>float</code> and <code>double</code> of exact answers are required</h2>

<p><code>float</code> and <code>double</code> are not suitable for currency computation.</p>

<p>Use <code>BigDecimal</code>, <code>int</code> or <code>long</code> instead. But <code>BigDecimal</code> is slow and not convenient. <code>int</code> and <code>long</code> is preferred.</p>

<h2 id="i49">49. Prefer primitive types to boxed primitives</h2>

<p>Java 1.5 added new feature of <strong>autoboxing</strong> and <strong>auto-unboxing</strong>.</p>

<p><strong>Pay attention</strong>, use <code>==</code> on boxed primitive type always make wrong result.</p>

<p>In some circumstances, you have to use boxed primitives:</p>

<ol>
<li>Put element into <code>Collection</code>, since <code>Collection</code> only accept boxed primitives</li>
<li>Generic type doesn't allow primitives either.</li>
</ol>

<h2 id="i50">50. Avoid strings where other types are more appropriate</h2>

<ul>
<li>Strings are poor substitues for other value types</li>
<li>Strings are poor substitutes for enum types</li>
<li>Strings are poor substitues for aggregate types. eg. <code>String compoundKey = className + "#" + i.next();</code></li>
<li>Strings are poor substitues for <em>capabilities</em></li>
</ul>

<h2 id="i51">51. Beware the performance of string concatenation</h2>

<p>String concatenation is not suitable for concatenate a lot of Strings.</p>

<p><strong>Using the string concatenation operator repeatedly to concatenate</strong> <em>n</em> <strong>strings requires time quadratic in</strong> <em>n</em>.</p>

<p>Use <code>StringBuilder</code>.</p>

<h2 id="i52">52. Refer to objects by their interfaces</h2>

<h2 id="i53">53. Prefer interfaces to reflection</h2>

<p>The trade-off of reflection:</p>

<ul>
<li>Losing all the benefits of compile-time type checking</li>
<li>The code required to perform reflective access is clumsy and verbose.</li>
<li>Performance loss</li>
</ul>

<p>The core reflection facility was originally designed for component-based application builder tools. It is a design time technique.</p>

<h4>Example: a program that can be transformed into a type checking program</h4>

<pre lang="java">
public static void main(String args[])
{
    Class< ? > cl = null;
    try {
        cl = Class.forName(args[0]);
    } catch (ClassNotFoundException e) {
        System.err.println("Class not found.");
        System.exit(1);
    }

    Set< String > s = null;
    try {
        s = (Set< String >) cl.newInstance();
    } catch (IllegalAccessException e) {
        System.err.println("Class not accessible.");
        System.exit(1);
    } catch (InstantiationException e) {
        System.err.println("Class not instantiable.");
        System.exit(1);
    }

    s.addAll(Arrays.asList(args).subList(1, args.length));
    System.out.println(s);
}
</pre>

<h2 id="i54">54. Use native methods judiciously</h2>

<p><strong>JNI</strong> is used to call native method, such as C/C++ programs. It is mainly used to accessible platform specific stuff, such as registry and file lock.</p>

<p>It is rarely advisable to use native methods for improved performance.</p>

<h2 id="i55">55. Optimize judiciously</h2>

<blockquote>
  <p>We should forget about small efficiencies, say about 97% of the timeL premature optimization is the root of all evil.
  -- Donald Knuth</p>
  
  <p>Do not optimize until you have a perfectly clear and unoptimized solution.
  -- M.A.Jackson</p>
</blockquote>

<h2 id="i56">56. Adhere to generally accepted naming conventins</h2>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1016</wp:post_id>
		<wp:post_date>2013-05-16 16:28:19</wp:post_date>
		<wp:post_date_gmt>2013-05-16 08:28:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>notes-of-effective-java-7-general-programming</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="category" nicename="programming-language-bian-cheng-yu-yan"><![CDATA[Programming Languages]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1291846844]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>NOTES of Effective Java (3) - Classes and Interfaces</title>
		<link>http://allenlsy.com/2013/05/notes-of-effective-java-3-classes-and-interfaces/</link>
		<pubDate>Fri, 17 May 2013 04:28:54 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=1020</guid>
		<description></description>
		<content:encoded><![CDATA[<p><img src="http://www.crazysmoove.com/memjug/javabooks-slides/images/Effective_Java.jpg" alt="enter image description here" />
<br /></p>

<ul>
<li><a href="#i13">13. Minimize the accessibility of classes and members</a></li>
<li><a href="#i14">14. In public classes, use accessor methods, not public fields</a></li>
<li><a href="#i15">15. Minimize mutability</a></li>
<li><a href="#i16">16. Favor composition over inheritance</a></li>
<li><a href="#i17">17. Design and document for inheritance or else prohibit it</a></li>
<li><a href="#i18">18. Interface is better than Abstract class</a></li>
<li><a href="#i19">19. Interface for defining type only</a></li>
<li><a href="#i20">20. Prefer class hierarchies to tagged classes</a></li>
<li><a href="#i21">21. Function object as strategies</a></li>
<li><a href="#i22">22. Favor static member classes over nonstatic</a></li>
</ul>

<hr />

<h2 id="i13">13. Minimize the accessibility of classes and members</h2>

<p>Four accessibilities in Java:</p>

<ul>
<li><strong>private</strong>: only accessible inside the class itself</li>
<li><strong>package-private(default)</strong>: accessible inside the package</li>
<li><strong>protected</strong>: accessible from subclasses of the class where it is declared, and from any class inside the package</li>
<li><strong>public</strong>: accessible from anywhere</li>
</ul>

<p>It is not acceptable to make a class, interface or member a part of a package's exported API to facilitate testing.</p>

<p><strong>Instance fields should never be public.</strong> if the field is not <code>final</code>, and it is public, that means you give up the control to limit the ability to store in this field. Also, <strong>classes with public mutable fields are not thread-safe</strong>.</p>

<p>For static field, it is ok if it declares to be <code>final</code>. The naming convention for these field is upper case.</p>

<p>A nonzero-length array is always mutable, so <strong>it is wrong for a class to have a public static final array field, or an accessor that returns such a field.</strong> The elements inside the array can be modified. You can make a the public array private and add a public immutable list. Or return a clone of that private array</p>

<pre lang="java">
private static final Thing[] PRIVATE_VALUES = { .. };
public static final List< Thing > VALUES = Collections.unmodifiableList(Arrays.asList(PRIVATE_VALUES));
</pre>

<h2 id="i14">14. In public classes, use accessor methods, not public fields</h2>

<p>The reason to do it is <strong>flexibility</strong>: easy to change to way to get and set the value, without affecting other parts of the code</p>

<p>However, if a class is package-private or is a private nested class, there is nothing inherently wrong with exposing its data fields.</p>

<h2 id="i15">15. Minimize mutability</h2>

<p>Some advices to make things immutable:</p>

<ol>
<li>Don't provide any methods that modify the object's state(aka. <em>mutators</em>)</li>
<li>Ensure that the class can't be extended</li>
<li>Make all fields final</li>
<li>Make all fields private</li>
<li>Ensure exclusive access to any mutable components. If your class has any fields that refer to mutable objects, ensure that clients of the class cannot obtain references to these objects.</li>
</ol>

<p>Immutable objects can be shared freely, they require no synchronization.</p>

<p>The only disadvantage of immutable classes is that they require a seperate object for each distinct value. Use lazy initialization.</p>

<p>To ensure the immutability, a class must not permit itself to be suclassed. <strong>Static factory</strong> is a good way to implement it instead of constructor.</p>

<p>No methods may produce an externally visible change in the object's state.</p>

<h4>Example: Complex number</h4>

<pre lang="java">
public class Complex {
    private final double re;
    private final double im;

    private Complex(double re, double im) {
        this.re = re;
        this.im = im;
    }

    public static Complex valueOf(double re, double im) {
        return new Complex(re, im);
    }

    public static Complex valueOfPolar(double rm, double theta) {
        return new Complex(r * Math.cos(theta), r * Math.sin(theta) );
    }
}
</pre>

<h2 id="i16">16. Favor composition over inheritance</h2>

<p><strong>Unlike method invocation, inheritance violates encapsulation.</strong> If superclass changes implementation, subclass will be affected.</p>

<p>If every A object has a B object inside, the class A is called <strong>wrapper class</strong>. This is the <strong>Decorator design pattern</strong>. This is not <strong>delegation</strong>, unless wrapper passes itself to the wrapped object.</p>

<h2 id="i17">17. Design and document for inheritance or else prohibit it</h2>

<p>If design for inheritance, the class must document its <em>self-use</em> of overridable methods. For every public or protected methods, the documentation must indicate which overridable methods the method or constructor invokes</p>

<h2 id="i18">18. Interface is better than Abstract class</h2>

<p>Abstract class limits a class more than interface.</p>

<p>Interface is an ideal option for mixin definition of class.</p>

<p><strong>Skeleton Implementation(Abstract interface)</strong>, makes it easy to provide implementation for interface. It combines the advantage of both interface and abstract class.</p>

<p><strong>Simulated Multiple Inheritance</strong>: makes a private internal class implements an interface, so that the public class can implements multiple abstract class if needed.</p>

<h4>Example: Skeleton Implementation</h4>

<pre lang="java">
public abstract class AbstractMapEntry<K,V> implements Map.Entry<K, V>
{
    public abstract K getKey();
    public abstract V getValue();

    // Simple Implementation
    public V setValue(V value) {
        throw new UnsupportedOperationException();
    }

    @Override 
    public boolean equals(Object o) {
        if (o == this)
            returh true;
        if ( ! (o instanceof Map.Entry))
            returh false;
        Map.Entry<?,?> arg = (Map.Entry) o;
        return  equals(getKey(), arg.getKey()) &&
                equals(getValue(), arg.getValue());
    }
    
    private static boolean equals(Object o1, Object o2) {
        return o1 == null ? o2 == null : o1.equals(o2);
    }

    // Implements the general contract of Map.Entry.hashCode
    @Override
    public int hashCode(){
        return hashCode(getKey()) ^ hashCode(getValue());

    }

    private static int hashCode(Object obj) {
        return obj == null ? 0 : obj.hashCode();
    }
}

</pre>

<p>Skeleton implementation is designed for inheritance. The methods that don't have a concrete implementation can have a simple implementation, like <code>setValue()</code> in the example.</p>

<p>Once a interface is published and widely adopted, it is almost impossible to change it.</p>

<h2 id="i19">19. Interface for defining type only</h2>

<p><strong>Constant interface</strong>: contains no methods, only static final fields. It is for defining constants. IT IS NOT A GOOD WAY TO USE INTERFACE. An example is <code>java.io.ObjectStreamConstants</code>. It is a bad example from Java API.</p>

<p>Better implementation is <strong>Utility class</strong>.</p>

<pre lang="java">
public class PhysicalConstants {
    private PhysicalConstants() {} //Prevents instantiation

    public static final double AVOGADROS_NUMBER = 6.02214199e23;
    public static final double BOLTZMANN_CONSTANT = 1.3806503e-23;

}
</pre>

<h2 id="i20">20. Prefer class hierarchies to tagged classes</h2>

<p><strong>Tagged class</strong>: many seperated implementation dumped into one class. Tagged class is always too long, low performance.</p>

<p>Subclass is better than tagged class. Tagged class is a simulation of class hierarchies.</p>

<h2 id="i21">21. Function object as strategies</h2>

<p>This is <strong>Strategy design pattern</strong>.</p>

<h4>Example: comparator</h4>

<pre lang="java">
class StringLengthComparator {
    private StringLengthComparator() {}
    public static final StringLengthComparator INSTANCE = new StringLengthComparator();
    public int compare(String s1, String s2) {
        return s1.length() - s2.length();
    }
}
</pre>

<p>Since <code>StringLengthComparator</code> is stateless, no fields, therefore it is better to be implemented as a singleton.</p>

<p>If we have many comparators, we'd better define a comparator interface. (Actually it is inside <code>java.util</code>)</p>

<pre lang="java">
public interface Comparator<T> {
    public int compare(T t1, T t2);
}

</pre>

<p>It is also recommended to have a static strategy factory class, the concrete strategy implementation classes are inside the factory class, and they all implement the strategy interface.</p>

<h2 id="i22">22. Favor static member classes over nonstatic</h2>

<p><strong>Nested class</strong> is internal class, for serving the enclosing class. There are four types of nested class: <strong>static member class</strong>, <strong>nonstatic member class</strong>, <strong>anonymouse class</strong> and <strong>local class</strong>.</p>

<p><strong>Static member class</strong> is just normal class that defined inside a class, no special purpose. It is an accesory of enclosing class.</p>

<p><strong>Nonstatic member class</strong> is much different than static member class. The instance of nonstatic member class may related to an enclosing instance. They may call the method of enclosing class.</p>

<h4>Example: nonstatic member class</h4>

<pre lang="java">
public class MySet<E> extends AbstractSet<E> {
    //...

    public Iterator<E> iterator() {
        return new MyIterator();
    }

    private class MyIterator implements Iterator<E> {
        // ...
    }
}
</pre>

<p>For this <code>MyIterator</code> class, if it is not required to visit enclosing class, then it may be declared as <code>static</code>.</p>

<p><strong>Anonymous class</strong> has no class name, cannot execute <code>instanceof</code> test. It is suitable for dynamicly create <strong>function object</strong>. or create <strong>process object</strong> like <code>Runnable</code>, <code>Thread</code>。</p>

<p><strong>Local class</strong> is just other local class.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1020</wp:post_id>
		<wp:post_date>2013-05-17 12:28:54</wp:post_date>
		<wp:post_date_gmt>2013-05-17 04:28:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>notes-of-effective-java-3-classes-and-interfaces</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="category" nicename="programming-language-bian-cheng-yu-yan"><![CDATA[Programming Languages]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1293665766]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>C Essence (1) - x86 Assembly Programming Basic</title>
		<link>http://allenlsy.com/2013/05/c-essence-1-x86-assembly-programming-basic/</link>
		<pubDate>Sat, 18 May 2013 03:29:19 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=1023</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
  <p>The source code was tested and passed in <a href="http://developer.nrel.gov/downloads/vagrant-boxes/CentOS-6.4-x86_64-v20130309.box">CentOS 6.4 vagrant box</a></p>
  
  <p>Github repository: <a href="http://github.com/allenlsy/c_essence">http://github.com/allenlsy/c_essence</a></p>
  
  <p>Reference:</p>
</blockquote>

<ul>
<li><a href="#i1">1. Simple assembly program</a></li>
<li><a href="#i2">2. Second assembly program</a></li>
<li><a href="#i3">3. ELF file</a>

<ul>
<li><a href="#i3-1">3.1 Target file</a></li>
<li><a href="#i3-2">3.2. Executable file</a></li>
</ul></li>
</ul>

<hr />

<h2 id="i1">1. Simple assembly program</h2>

<p>Suppose we have an assembly program <code>hello.s</code>, and we need to compile and link it.</p>

<pre lang="asm" title="hello.s">
# hello.s
 .section .data
 .section .text
 .globl _start
_start:
movl $1, %eax
movl $4, %ebx
int $0x80
</pre>

<p>In this program:</p>

<p><code>.section</code> make thie code into several sections. When the program being load, each section will 
be loaded to different address, with different I/O right.</p>

<p><code>.data</code> section saves the data, it has r/w right.</p>

<p><code>.text</code> section saves the code. It has r/x right.</p>

<p><code>.globl</code> declares a variable to be marked as <code>GLOBAL</code>.</p>

<p><code>_start</code> is a symbol that will be used by the linker. It is a special symbol indicates the start of the program, like <code>main()</code> in C program. If there is no <code>_start</code> symbol, then the program cannot be run directly.</p>

<p>Variables start with <code>%</code> means registers in the CPU.</p>

<p><code>movl</code> means move a long variable. <code>$1</code> is a number 1, be moved into <code>%eax</code>.</p>

<p><code>int $0x80</code> is special. <code>int</code> command is a soft interruption command, generates an exception for the system, makes the CPU switch from user mode to privilige mode and then jump into kernel code. <code>$0x80</code> is a parameter. <code>int $0x80</code> raises a system call exception.</p>

<p>When there is a system call exception, the system reads the system call code from <code>%eax</code> and  the parameter for this call from <code>%exb</code>. <code>1</code> in system call means <code>_exit</code> call, <code>%ebx</code> is the actually the exit state <code>4</code>.</p>

<h4>Compile, link, run</h4>

<pre>
as hello.s -o hello.o
ld hello.o -o hello
./hello
echo $?
</pre>

<p><code>as</code> will compile hello.s to machine language, and <code>ld</code> will link <strong>target file</strong> <code>hello.o</code> to an <strong>executable file</strong> <code>hello</code>.</p>

<p><strong>Linking</strong> is a process to combine multiple target file into an executable file. During the process, it also modifies some information of the target file.</p>

<p>In shell, <code>$?</code> command is used to get the return value of last command. Let's run <code>hello</code>. Then we see the exit code <code>4</code>.</p>

<h2 id="i2">2. Second assembly program</h2>

<pre lang="asm" title="max.s">
.section .data
data_items:
    .long 3, 67, 34, 22, 45, 75, 54, 34, 44, 33, 22, 11, 66, 0

.section .text
.globl _start
_start:
    # move 0 into the index register
    movl $0, %edi

    # load the first byte of data into %eax
    mov data_items(,%edi,4), %eax

    # %eax is the biggest now, %ebx is used to store the biggest
    mov %eax, %ebx

start_loop:
    # check to see if we've hit the end. Last item is 0
    cmpl $0, %eax

    # jump to loop_exit if comparison result is equal
    je loop_exit
    
    # increase the value of %edi
    incl %edi

    # load next data_item into %eax
    movl data_items(,%edi,4), %eax

    # compare value
    cmpl %ebx, %eax

    # jumo to start_loop if comparison result is less than (<)
    jle start_loop

    # then means %eax is larger than %ebx, which is the current biggest.
    movl %eax, %ebx

    jmp start_loop

loop_exit:
    # %ebx is the status code for _exit system call and
    # it already has the maximum number
    movl $1, %eax
    int $0x80

</pre>

<p>Compile and run</p>

<pre lang="sh">
as max.s -o max.o
ld max.o -o max
./max
echo $?
</pre>

<p>Analyse the program yourself.</p>

<h2 id="i3">3. ELF file</h2>

<p><strong>ELF</strong> is an open standard for all the executable file in UNIX. It has three types:</p>

<ul>
<li>Relocatable</li>
<li>Executable</li>
<li>Shared Object</li>
</ul>

<h3 id="i3-1">3.1 Target file</h3>

<p><a href="http://allenlsy.com/wp-content/uploads/2013/05/pic1.png"><img src="http://allenlsy.com/wp-content/uploads/2013/05/pic1.png" alt="pic1" width="571" height="463" class="aligncenter size-full wp-image-1026" /></a></p>

<p>ELF file has two perspective to view it. From <strong>compiler and linker's perspective</strong>, ELF uses <strong>Section Header Table</strong> to describe a set of sections. From <strong>Loader's perspective</strong>, ELF uses <strong>Program Header Table</strong> to describe a set of segments.</p>

<p><strong>ELF Header</strong> describes the system architecture and other system information, and points to Section Header Table and Program Header Table.</p>

<p><strong>Section Header Table</strong> stores the section description.</p>

<p>Compiler and linker do not need Program Header Table, so it is optional to them.</p>

<p><strong>Program Header Table</strong> stores the segments description.</p>

<p>Loader does not need section information, so Section Header table is optional to loader.</p>

<p>Let's see the elf file structure, use <code>readelf -a max.o</code> command to see it. <code>-a</code> means all.</p>

<pre highlight="false">
ELF Header:
  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF64
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              REL (Relocatable file)
  Machine:                           Advanced Micro Devices X86-64
  Version:                           0x1
  Entry point address:               0x0
  Start of program headers:          0 (bytes into file)
  Start of section headers:          224 (bytes into file)
  Flags:                             0x0
  Size of this header:               64 (bytes)
  Size of program headers:           0 (bytes)
  Number of program headers:         0
  Size of section headers:           64 (bytes)
  Number of section headers:         8
  Section header string table index: 5

Section Headers:
  [Nr] Name              Type             Address           Offset
       Size              EntSize          Flags  Link  Info  Align
  [ 0]                   NULL             0000000000000000  00000000
       0000000000000000  0000000000000000           0     0     0
  [ 1] .text             PROGBITS         0000000000000000  00000040
       000000000000002d  0000000000000000  AX       0     0     4
  [ 2] .rela.text        RELA             0000000000000000  000003c8
       0000000000000030  0000000000000018           6     1     8
  [ 3] .data             PROGBITS         0000000000000000  00000070
       0000000000000038  0000000000000000  WA       0     0     4
  [ 4] .bss              NOBITS           0000000000000000  000000a8
       0000000000000000  0000000000000000  WA       0     0     4
  [ 5] .shstrtab         STRTAB           0000000000000000  000000a8
       0000000000000031  0000000000000000           0     0     1
  [ 6] .symtab           SYMTAB           0000000000000000  000002e0
       00000000000000c0  0000000000000018           7     7     8
  [ 7] .strtab           STRTAB           0000000000000000  000003a0
       0000000000000028  0000000000000000           0     0     1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings)
  I (info), L (link order), G (group), x (unknown)
  O (extra OS processing required) o (OS specific), p (processor specific)

There are no section groups in this file.

There are no program headers in this file.

Relocation section '.rela.text' at offset 0x3c8 contains 2 entries:
  Offset          Info           Type           Sym. Value    Sym. Name + Addend
000000000009  00020000000b R_X86_64_32S      0000000000000000 .data + 0
00000000001a  00020000000b R_X86_64_32S      0000000000000000 .data + 0

There are no unwind sections in this file.

Symbol table '.symtab' contains 8 entries:
   Num:    Value          Size Type    Bind   Vis      Ndx Name
     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND 
     1: 0000000000000000     0 SECTION LOCAL  DEFAULT    1 
     2: 0000000000000000     0 SECTION LOCAL  DEFAULT    3 
     3: 0000000000000000     0 SECTION LOCAL  DEFAULT    4 
     4: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT    3 data_items
     5: 000000000000000f     0 NOTYPE  LOCAL  DEFAULT    1 start_loop
     6: 0000000000000026     0 NOTYPE  LOCAL  DEFAULT    1 loop_exit
     7: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT    1 _start

No version information found in this file.

</pre>

<p>From here we can see the ELF Header, the Section Header, and there are not section groups and program headers.</p>

<p>In <code>Section headers</code>, we have <code>.text</code> and <code>.data</code> section.</p>

<p>Based on the output, we can depict the layout of this target file.</p>

<table>
<thead>
<tr>
  <th>Starting address</th>
  <th>Section or Header</th>
</tr>
</thead>
<tbody>
<tr>
  <td>0</td>
  <td>Start of ELF Header</td>
</tr>
<tr>
  <td>0x40</td>
  <td>.text</td>
</tr>
<tr>
  <td>0x70</td>
  <td>.data</td>
</tr>
<tr>
  <td>0xa8</td>
  <td>.bss(empty)</td>
</tr>
<tr>
  <td>0xa8</td>
  <td>.shstrtab</td>
</tr>
<tr>
  <td>0xe4</td>
  <td>Start of Section Header Table</td>
</tr>
<tr>
  <td>0x2e0</td>
  <td>.symtab</td>
</tr>
<tr>
  <td>0x3a0</td>
  <td>.strtab</td>
</tr>
<tr>
  <td>0x3c8</td>
  <td>.rela.text</td>
</tr>
</tbody>
</table>

<p>We can also see the whole file by using <code>hexdump -C max.o</code>. <code>-C</code> means Canonical hex+ASCII display.</p>

<pre highlight="false">
00000000  7f 45 4c 46 02 01 01 00  00 00 00 00 00 00 00 00  |.ELF............|
00000010  01 00 3e 00 01 00 00 00  00 00 00 00 00 00 00 00  |..>.............|
00000020  00 00 00 00 00 00 00 00  e0 00 00 00 00 00 00 00  |................|
00000030  00 00 00 00 40 00 00 00  00 00 40 00 08 00 05 00  |....@.....@.....|
00000040  bf 00 00 00 00 67 8b 04  bd 00 00 00 00 89 c3 83  |.....g..........|
00000050  f8 00 74 12 ff c7 67 8b  04 bd 00 00 00 00 39 d8  |..t...g.......9.|
00000060  7e ed 89 c3 eb e9 b8 01  00 00 00 cd 80 00 00 00  |~...............|
00000070  03 00 00 00 43 00 00 00  22 00 00 00 16 00 00 00  |....C...".......|
00000080  2d 00 00 00 4b 00 00 00  36 00 00 00 22 00 00 00  |-...K...6..."...|
00000090  2c 00 00 00 21 00 00 00  16 00 00 00 0b 00 00 00  |,...!...........|
000000a0  42 00 00 00 00 00 00 00  00 2e 73 79 6d 74 61 62  |B.........symtab|
000000b0  00 2e 73 74 72 74 61 62  00 2e 73 68 73 74 72 74  |..strtab..shstrt|
000000c0  61 62 00 2e 72 65 6c 61  2e 74 65 78 74 00 2e 64  |ab..rela.text..d|
000000d0  61 74 61 00 2e 62 73 73  00 00 00 00 00 00 00 00  |ata..bss........|
000000e0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
*
00000120  20 00 00 00 01 00 00 00  06 00 00 00 00 00 00 00  | ...............|
00000130  00 00 00 00 00 00 00 00  40 00 00 00 00 00 00 00  |........@.......|
00000140  2d 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |-...............|
00000150  04 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
00000160  1b 00 00 00 04 00 00 00  00 00 00 00 00 00 00 00  |................|
00000170  00 00 00 00 00 00 00 00  c8 03 00 00 00 00 00 00  |................|
00000180  30 00 00 00 00 00 00 00  06 00 00 00 01 00 00 00  |0...............|
00000190  08 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00  |................|
000001a0  26 00 00 00 01 00 00 00  03 00 00 00 00 00 00 00  |&...............|
000001b0  00 00 00 00 00 00 00 00  70 00 00 00 00 00 00 00  |........p.......|
000001c0  38 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |8...............|
000001d0  04 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
000001e0  2c 00 00 00 08 00 00 00  03 00 00 00 00 00 00 00  |,...............|
000001f0  00 00 00 00 00 00 00 00  a8 00 00 00 00 00 00 00  |................|
00000200  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
00000210  04 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
00000220  11 00 00 00 03 00 00 00  00 00 00 00 00 00 00 00  |................|
00000230  00 00 00 00 00 00 00 00  a8 00 00 00 00 00 00 00  |................|
00000240  31 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |1...............|
00000250  01 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
00000260  01 00 00 00 02 00 00 00  00 00 00 00 00 00 00 00  |................|
00000270  00 00 00 00 00 00 00 00  e0 02 00 00 00 00 00 00  |................|
00000280  c0 00 00 00 00 00 00 00  07 00 00 00 07 00 00 00  |................|
00000290  08 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00  |................|
000002a0  09 00 00 00 03 00 00 00  00 00 00 00 00 00 00 00  |................|
000002b0  00 00 00 00 00 00 00 00  a0 03 00 00 00 00 00 00  |................|
000002c0  28 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |(...............|
000002d0  01 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
000002e0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
000002f0  00 00 00 00 00 00 00 00  00 00 00 00 03 00 01 00  |................|
00000300  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
00000310  00 00 00 00 03 00 03 00  00 00 00 00 00 00 00 00  |................|
00000320  00 00 00 00 00 00 00 00  00 00 00 00 03 00 04 00  |................|
00000330  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
00000340  01 00 00 00 00 00 03 00  00 00 00 00 00 00 00 00  |................|
00000350  00 00 00 00 00 00 00 00  0c 00 00 00 00 00 01 00  |................|
00000360  0f 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
00000370  17 00 00 00 00 00 01 00  26 00 00 00 00 00 00 00  |........&.......|
00000380  00 00 00 00 00 00 00 00  21 00 00 00 10 00 01 00  |........!.......|
00000390  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
000003a0  00 64 61 74 61 5f 69 74  65 6d 73 00 73 74 61 72  |.data_items.star|
000003b0  74 5f 6c 6f 6f 70 00 6c  6f 6f 70 5f 65 78 69 74  |t_loop.loop_exit|
000003c0  00 5f 73 74 61 72 74 00  09 00 00 00 00 00 00 00  |._start.........|
000003d0  0b 00 00 00 02 00 00 00  00 00 00 00 00 00 00 00  |................|
000003e0  1a 00 00 00 00 00 00 00  0b 00 00 00 02 00 00 00  |................|
000003f0  00 00 00 00 00 00 00 00                           |........|
000003f8
</pre>

<h4>One by one analysis of sections</h4>

<ol>
<li><code>.shstrtab</code> stores the name of each section.</li>
<li><code>.strtab</code> section stores the name of symbols in the program.</li>
<li><code>.data</code> section will be loaded to the memory.</li>
<li><code>.bss</code> section(Block Started by Symbol) stores uninitialised global variable and static variables. It will be automatically initialised to 0.</li>
<li><code>.rel.text</code> tells the linker the relocation information.</li>
<li><code>.symtab</code> is symbol table. We can see it in <code>readelf</code> output. <code>Value</code> is the address of the symbol, not real value. <code>GLOBAL</code>, <code>LOCAL</code> is the binding.</li>
<li><code>.text</code> need to use <code>objdump -d max.o</code> to disassemble the program. <code>-d</code> means disassemble. It shows the program after replacing the symbol with the real address.</li>
</ol>

<pre lang="x86">
max.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <_start>:
   0:   bf 00 00 00 00          mov    $0x0,%edi
   5:   67 8b 04 bd 00 00 00    mov    0x0(,%edi,4),%eax
   c:   00 
   d:   89 c3                   mov    %eax,%ebx

000000000000000f <start_loop>:
   f:   83 f8 00                cmp    $0x0,%eax
  12:   74 12                   je     26 <loop_exit>
  14:   ff c7                   inc    %edi
  16:   67 8b 04 bd 00 00 00    mov    0x0(,%edi,4),%eax
  1d:   00 
  1e:   39 d8                   cmp    %ebx,%eax
  20:   7e ed                   jle    f <start_loop>
  22:   89 c3                   mov    %eax,%ebx
  24:   eb e9                   jmp    f <start_loop>

0000000000000026 <loop_exit>:
  26:   b8 01 00 00 00          mov    $0x1,%eax
  2b:   cd 80                   int    $0x80
</pre>

<h3 id="i3-2">3.2 Executable file</h3>

<p>Previously <code>max.o</code> is the target file. <code>max</code> is the executable file.</p>

<pre highlight="false">
$ readelf -a max

ELF Header:
  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF64
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           Advanced Micro Devices X86-64
  Version:                           0x1
  Entry point address:               0x4000b0
  Start of program headers:          64 (bytes into file)
  Start of section headers:          320 (bytes into file)
  Flags:                             0x0
  Size of this header:               64 (bytes)
  Size of program headers:           56 (bytes)
  Number of program headers:         2
  Size of section headers:           64 (bytes)
  Number of section headers:         6
  Section header string table index: 3

Section Headers:
  [Nr] Name              Type             Address           Offset
       Size              EntSize          Flags  Link  Info  Align
  [ 0]                   NULL             0000000000000000  00000000
       0000000000000000  0000000000000000           0     0     0
  [ 1] .text             PROGBITS         00000000004000b0  000000b0
       000000000000002d  0000000000000000  AX       0     0     4
  [ 2] .data             PROGBITS         00000000006000e0  000000e0
       0000000000000038  0000000000000000  WA       0     0     4
  [ 3] .shstrtab         STRTAB           0000000000000000  00000118
       0000000000000027  0000000000000000           0     0     1
  [ 4] .symtab           SYMTAB           0000000000000000  000002c0
       00000000000000f0  0000000000000018           5     6     8
  [ 5] .strtab           STRTAB           0000000000000000  000003b0
       0000000000000040  0000000000000000           0     0     1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings)
  I (info), L (link order), G (group), x (unknown)
  O (extra OS processing required) o (OS specific), p (processor specific)

There are no section groups in this file.

Program Headers:
  Type           Offset             VirtAddr           PhysAddr
                 FileSiz            MemSiz              Flags  Align
  LOAD           0x0000000000000000 0x0000000000400000 0x0000000000400000
                 0x00000000000000dd 0x00000000000000dd  R E    200000
  LOAD           0x00000000000000e0 0x00000000006000e0 0x00000000006000e0
                 0x0000000000000038 0x0000000000000038  RW     200000

 Section to Segment mapping:
  Segment Sections...
   00     .text 
   01     .data 

There is no dynamic section in this file.

There are no relocations in this file.

There are no unwind sections in this file.

Symbol table '.symtab' contains 10 entries:
   Num:    Value          Size Type    Bind   Vis      Ndx Name
     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND 
     1: 00000000004000b0     0 SECTION LOCAL  DEFAULT    1 
     2: 00000000006000e0     0 SECTION LOCAL  DEFAULT    2 
     3: 00000000006000e0     0 NOTYPE  LOCAL  DEFAULT    2 data_items
     4: 00000000004000bf     0 NOTYPE  LOCAL  DEFAULT    1 start_loop
     5: 00000000004000d6     0 NOTYPE  LOCAL  DEFAULT    1 loop_exit
     6: 00000000004000b0     0 NOTYPE  GLOBAL DEFAULT    1 _start
     7: 0000000000600118     0 NOTYPE  GLOBAL DEFAULT  ABS __bss_start
     8: 0000000000600118     0 NOTYPE  GLOBAL DEFAULT  ABS _edata
     9: 0000000000600118     0 NOTYPE  GLOBAL DEFAULT  ABS _end

No version information found in this file.
</pre>

<p>In ELF Header, <code>Type</code> is <code>EXEC</code>, <code>entry point address</code> is changed( it is the <code>_start</code> address).</p>

<p>Let's see the disassembled code.</p>

<pre lang="x86">
$ objdump -d max

max:     file format elf64-x86-64


Disassembly of section .text:

00000000004000b0 <_start>:
  4000b0:   bf 00 00 00 00          mov    $0x0,%edi
  4000b5:   67 8b 04 bd e0 00 60    mov    0x6000e0(,%edi,4),%eax
  4000bc:   00 
  4000bd:   89 c3                   mov    %eax,%ebx

00000000004000bf <start_loop>:
  4000bf:   83 f8 00                cmp    $0x0,%eax
  4000c2:   74 12                   je     4000d6 <loop_exit>
  4000c4:   ff c7                   inc    %edi
  4000c6:   67 8b 04 bd e0 00 60    mov    0x6000e0(,%edi,4),%eax
  4000cd:   00 
  4000ce:   39 d8                   cmp    %ebx,%eax
  4000d0:   7e ed                   jle    4000bf <start_loop>
  4000d2:   89 c3                   mov    %eax,%ebx
  4000d4:   eb e9                   jmp    4000bf <start_loop>

00000000004000d6 <loop_exit>:
  4000d6:   b8 01 00 00 00          mov    $0x1,%eax
  4000db:   cd 80                   int    $0x80

</pre>

<p>The relative addresses in target file have been replaced with absolute address.</p>

<p>In target file, it has:</p>

<pre highlight="false">
   5:   67 8b 04 bd 00 00 00    mov    0x0(,%edi,4),%eax
</pre>

<p>Now become:</p>

<pre highlight="false">
  4000b5:   67 8b 04 bd e0 00 60    mov    0x6000e0(,%edi,4),%eax
</pre>

<p>How does the linker know to change <code>0x0</code> to <code>0x6000e0</code>? It is based on the <code>.rela.text</code> section.</p>

<pre highlight="false">
Relocation section '.rela.text' at offset 0x3c8 contains 2 entries:
  Offset          Info           Type           Sym. Value    Sym. Name + Addend
000000000009  00020000000b R_X86_64_32S      0000000000000000 .data + 0
00000000001a  00020000000b R_X86_64_32S      0000000000000000 .data + 0
</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1023</wp:post_id>
		<wp:post_date>2013-05-18 11:29:19</wp:post_date>
		<wp:post_date_gmt>2013-05-18 03:29:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>c-essence-1-x86-assembly-programming-basic</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="c"><![CDATA[c]]></category>
		<category domain="category" nicename="programming-language-bian-cheng-yu-yan"><![CDATA[Programming Languages]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1296000559]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>C Essence (2) - C and Assembly</title>
		<link>http://allenlsy.com/2013/05/c-essence-2-c-and-assembly/</link>
		<pubDate>Sat, 18 May 2013 13:33:39 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=1031</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
  <p>The source code was tested and passed in <a href="http://developer.nrel.gov/downloads/vagrant-boxes/CentOS-6.4-x86_64-v20130309.box">CentOS 6.4 vagrant box</a></p>
  
  <p>Github repository: <a href="http://github.com/allenlsy/c_essence">http://github.com/allenlsy/c_essence</a></p>
</blockquote>

<ul>
<li><a href="#i1">1. <code>main()</code> and startup routine</a></li>
<li><a href="#i2">2. Storage layout of variables</a>a</li>
<li><a href="#i3">3. C inlines assembly</a></li>
</ul>

<hr />

<h2 id="i1">1. <code>main()</code> and startup routine</h2>

<p>The command <code>gcc main.c -o main</code>, it actually can be done in three separate steps:</p>

<ol>
<li><code>gcc -S main.c</code>: compile <code>main.c</code> to assembly code <code>main.s</code></li>
<li><code>gcc -c main.s</code>: compile <code>main.s</code> to target file <code>main.o</code></li>
<li><code>gcc main.o</code>: compile <code>main.o</code> to executable file <code>a.out</code></li>
</ol>

<p><a href="http://allenlsy.com/wp-content/uploads/2013/05/pic11.png"><img src="http://allenlsy.com/wp-content/uploads/2013/05/pic11.png" alt="pic1" width="553" height="314" class="aligncenter size-full wp-image-1032" /></a></p>

<p>In <em>C Essence (1)</em>, the first assembly program, we compile and link the program by:</p>

<p>&lt;</p>

<p>pre lang="sh">
as hello.s -o hello.o
ld hello.o -o hello</p>

<p>&lt;</p>

<p>pre></p>

<p>If we link <code>hello.o</code> using <code>gcc</code>:</p>

<pre highlight="false">
$ gcc hello.o -o hello

hello.o: In function `_start':
(.text+0x0): multiple definition of `_start'
/usr/lib/gcc/x86_64-redhat-linux/4.4.7/../../../../lib64/crt1.o:(.text+0x0): first defined here
/usr/lib/gcc/x86_64-redhat-linux/4.4.7/../../../../lib64/crt1.o: In function `_start':
(.text+0x20): undefined reference to `main'
collect2: ld returned 1 exit status

</pre>

<p>There are two errors:</p>

<ol>
<li>multiple definitions of <code>_start</code>: one is from the assembly code, the other is from <code>/sr/lib/crt1.o</code>.</li>
<li><code>_start</code> in <code>crt1.o</code> need <code>main()</code>, and we don't have <code>main()</code> in the assembly code</li>
</ol>

<p>From here we can see, <code>gcc</code> actually call <code>ld</code> to link <code>crt1.o</code> and <code>hello.o</code>. <code>crt1.o</code> has a <code>_start</code> entry point, we should not implement it ourselves if we want to use <code>gcc</code> to link. And <code>_start</code> need <code>main()</code>.</p>

<p><code>_start</code> will do some startup routine, and then call <code>main()</code> to do the real job. <strong>Therefore, the real entry point of a C program is <code>_start</code> rather than <code>main()</code></strong></p>

<h4>Another example</h4>

<pre lang="c" title="function_call.c">
#include <stdio.h>

int bar(int c, int d)
{
  int e = c + d;
  return e;
}

int foo(int a, int b)
{
  return bar(a, b);
}

int main(void)
{
  foo(2, 3);
  return 0;
}
</pre>

<p>Compile it.</p>

<pre lang="sh">
gcc -c function_call.c
gcc function_call.o -o function_call
</pre>

<p>The last step is actually:</p>

<pre lang="sh">
ld /usr/lib64/crt1.o /usr/lib64/crti.o function_call.o -o function_call -lc -dynamic-linker /lib/ld-linux.so.2
</pre>

<p><code>-lc</code> means link to <code>libc</code> library. It is default option of <code>gcc</code>, but not of <code>ld</code>.</p>

<p><code>-dynamic-linker</code> is to assign dynamic linked library.</p>

<p>What is inside <code>crt1.o</code> and <code>crti.o</code>?</p>

<pre highlight="false">
$ whatis nm
nm                   (1)  - list symbols from object files

$ nm /usr/lib64/crt1.o
0000000000000000 R _IO_stdin_used
0000000000000000 D __data_start
                 U __libc_csu_fini
                 U __libc_csu_init
                 U __libc_start_main
0000000000000000 T _start
0000000000000000 W data_start
                 U main

</pre>

<p><code>U main</code> means <code>main</code> is used in <code>crt1.o</code>, but not defined(<code>U</code> stands for undefined), therefore other target file need to provide the <code>main</code> for <code>crt1.o</code>.</p>

<h4>Symbol Resolution</h4>

<p>If there is an instruction <code>push $main's_address</code>, since linker doesn't know the address, <code>crt1.o</code> will replace it with <code>push $0x0</code>. When linking with <code>main.o</code>, the address will be replaced with the correct one.</p>

<p>Linker is an editor, like vi and emacs. Linker edit target file.</p>

<p><code>T _start</code> means <code>_start</code> is of type text, since <code>_start</code> is a piece of source code.</p>

<p>The <code>ld</code> command above is a simple version. Use <code>gcc -v</code> to see the details. <code>gcc -v function_call.c function_call</code></p>

<p><code>libc</code> is not linked into executable file. It is dynamiclly linked at runtime. <strong>Dynamic linking</strong> requires shared library, assigned with <code>-l</code> option. After dynamic linking, the whole linking process is finished.</p>

<p>Startup routine calls <code>main()</code>(actually should be <code>int main(int argc, char *argv[])</code>) by a equivalent C code of <code>exit(main(argc, argv))</code>.</p>

<p><code>exit()</code> is also defined in <code>libc</code>. <code>exit()</code> will do some cleanup routine before exit the program.</p>

<p><code>exit()</code> is defined in <code>stdlib.h</code> header file.</p>

<h2 id="i2">2. Storage layout of variables</h2>

<pre lang="c" title="variable.c">
#include <stdio.h>

const int A = 10;
int a = 20;
static int b = 30;
int c;

int main(void)
{
    static int a = 40;
    char b[] = "Hello world";
    register int c = 50;
    
    printf("Hello world %d\n", c);
    
    return 0;
}
</pre>

<p>Compile it using debug mode. <code>gcc variable.c -g</code>. Then use <code>readelf</code> to see the section information.</p>

<pre highlight="false">
$ readelf -a a.out

Section Headers:
  [Nr] Name              Type             Address           Offset
       Size              EntSize          Flags  Link  Info  Align
...
  [15] .rodata           PROGBITS         00000000004005f8  000005f8
       0000000000000024  0000000000000000   A       0     0     8
…
  [24] .data             PROGBITS         00000000006008a8  000008a8
       0000000000000010  0000000000000000  WA       0     0     4


...
    49: 00000000006008b0     4 OBJECT  LOCAL  DEFAULT   24 b
    50: 00000000006008b4     4 OBJECT  LOCAL  DEFAULT   24 a.2055
    65: 0000000000400608     4 OBJECT  GLOBAL DEFAULT   15 A
    66: 00000000006008ac     4 OBJECT  GLOBAL DEFAULT   24 a
    75: 00000000006008c8     4 OBJECT  GLOBAL DEFAULT   25 c    
</pre>

<p>Let's see the variables in hex format of <code>a.out</code>.</p>

<pre highlight="false">
…

00000600  00 00 00 00 00 00 00 00  0a 00 00 00 48 65 6c 6c  |............Hell|
00000610  6f 20 77 6f 72 6c 64 20  25 64 0a 00 01 1b 03 3b  |o world %d.....;|
00000620  20 00 00 00 03 00 00 00  a8 fe ff ff 3c 00 00 00  | ...........<...|
…
000008a0  ce 03 40 00 00 00 00 00  00 00 00 00 14 00 00 00  |..@.............|
000008b0  1e 00 00 00 28 00 00 00  47 43 43 3a 20 28 47 4e  |....(...GCC: (GN|

...
</pre>

<p>Starting from 0x60c, it is the string value "Hello world", at the end of <code>.rodata</code> section. <code>char []</code> is literal string, is read-only, equivalent to a global const array.</p>

<p>And also, 0x608, we find <code>0a</code>, which is <code>A = 10</code>.</p>

<p><code>.data</code> starts from 0x6008a8, length 0x10, which means 0x6008a8~0x6008b8. So <code>a</code>, <code>b</code>, <code>a.2055</code> are inside this part. <code>a</code> is <code>GLOBAL</code>, <code>b</code> is made <code>LOCAL</code> by the modifier <code>static</code>, so <code>b</code> will not be processed by the linker. <code>a.1589</code> is the local variable defined in <code>main()</code>. It is staticlly allocated, not allocated when being called and being release when function returns.</p>

<p><code>c</code> is within <code>.bss</code>. <strong>The difference between <code>.bss</code> and <code>.data</code> is</strong>, <code>.bss</code> does not take space in the file, filled with 0 when loading.</p>

<p>We don't see the allocation of two local variables in <code>main()</code>. Local variable and parameter of a function is allocated on the stack. We use <code>objdump</code> to see them.</p>

<pre highlight="false">
$ objdump -dS a.out

…
int main(void)
{
  4004c4:   55                      push   %rbp
  4004c5:   48 89 e5                mov    %rsp,%rbp
  4004c8:   53                      push   %rbx
  4004c9:   48 83 ec 18             sub    $0x18,%rsp
  static int a = 40;
  char b[] = "Hello world";
  4004cd:   c7 45 e0 48 65 6c 6c    movl   $0x6c6c6548,-0x20(%rbp)
  4004d4:   c7 45 e4 6f 20 77 6f    movl   $0x6f77206f,-0x1c(%rbp)
  4004db:   c7 45 e8 72 6c 64 00    movl   $0x646c72,-0x18(%rbp)
  register int c = 50;
  4004e2:   bb 32 00 00 00          mov    $0x32,%ebx
  
  printf("Hello world %d\n", c);
  4004e7:   b8 0c 06 40 00          mov    $0x40060c,%eax
  4004ec:   89 de                   mov    %ebx,%esi
  4004ee:   48 89 c7                mov    %rax,%rdi
  4004f1:   b8 00 00 00 00          mov    $0x0,%eax
  4004f6:   e8 bd fe ff ff          callq  4003b8 <printf@plt>
  
  return 0;
  4004fb:   b8 00 00 00 00          mov    $0x0,%eax
}

…
</pre>

<p>See, for <code>b[]</code>, it moves the 12 bytes data from <code>.rodata</code> to the stack directly. The address of <code>b[]</code> is from <code>%rbp-0x20</code> to <code>%rbp-0x18</code>.</p>

<p><code>c</code> is not on the stack. It is inside the register <code>%ebx</code>. That is how keyword <code>register</code> takes effect.</p>

<h3>Scope</h3>

<p>Use only <strong>local</strong> and <strong>global</strong> to classify variable according to scope <strong>IS NOT APPROPRIATE</strong>. Scope can be applied to any label. There are 4 scopes in C language:</p>

<ul>
<li><strong>Function Scope</strong>: label lives in the function</li>
<li><strong>File Scope</strong>: label lives from declaration to the end of the file. </li>
<li><strong>Block Scope</strong>: label lives in brackets {}</li>
<li><strong>Function Prototype Scope</strong>: label lives in the prototype(signature) of a function. eg. <code>int foo(int a, int b);</code></li>
</ul>

<p>Label has 3 <strong>Linkage</strong>:</p>

<ul>
<li><strong>External linkage</strong>: If the final executable file is linked by multiple files, the label refers to the same thing no matter how many times it is declared. They are <code>GLOBAL</code> label.</li>
<li><strong>Internal linkage</strong>: the label refers to the same thing no matter how many times it is declared within the same file.</li>
<li><strong>No linkage</strong>: Other than external linkage and internal linkage.</li>
</ul>

<p>There are several difference <strong>Storage Class Specifier</strong>:</p>

<ul>
<li><strong>static</strong>: staticlly allocated. Internal Linkage</li>
<li><strong>auto</strong>: automatically allocated on the stack, released when function returns.</li>
<li><strong>register</strong>: allocated on a register. If there is no register available, then it is regarded as <code>auto</code></li>
<li><strong>extern</strong>: discuss in detail later</li>
<li><strong>typedef</strong>: define a type name</li>
</ul>

<p>Notice that <code>const</code> is not storage class specifier. It is <strong>Type qualifier</strong>.</p>

<p>There are several kinds of variables's <strong>Storage Duration(lifetime)</strong>:</p>

<table>
<thead>
<tr>
  <th></th>
  <th>Allocated</th>
  <th>Released</th>
</tr>
</thead>
<tbody>
<tr>
  <td><strong>Static Storage Duration</strong></td>
  <td>when program starts</td>
  <td>when program ends</td>
</tr>
<tr>
  <td><strong>Automatic Storage Duration</strong></td>
  <td>when enter a block, allocated on stack</td>
  <td>when exit the block</td>
</tr>
<tr>
  <td><strong>Allocated Storage Duration</strong></td>
  <td>using <code>malloc</code></td>
  <td>using <code>free</code></td>
</tr>
</tbody>
</table>

<h2 id="i3">3. C inlines assembly</h2>

<p>To inline assembly, use <code>__asm__("assembly code")</code></p>

<pre lang="c">
#include <stdio.h>

int main() 
{
    int a = 10, b;
    __asm__(    "movl %1, %%eax\n\t"
                "movl %%eax, %0\n\t"
                :"=r"(b)
                :"r"(a)
                :"%eax"
                );
    printf("Result: %d, %d\n", a, b);
    return 0;
}
</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1031</wp:post_id>
		<wp:post_date>2013-05-18 21:33:39</wp:post_date>
		<wp:post_date_gmt>2013-05-18 13:33:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>c-essence-2-c-and-assembly</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="c"><![CDATA[c]]></category>
		<category domain="category" nicename="programming-language-bian-cheng-yu-yan"><![CDATA[Programming Languages]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1297008429]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>C Essence (3) - Linkage</title>
		<link>http://allenlsy.com/2013/05/c-essence-3-linkage/</link>
		<pubDate>Sun, 19 May 2013 07:27:03 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=1037</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
  <p>The source code was tested and passed in <a href="http://developer.nrel.gov/downloads/vagrant-boxes/CentOS-6.4-x86_64-v20130309.box">CentOS 6.4 vagrant box</a></p>
  
  <p>Github repository: <a href="http://github.com/allenlsy/c_essence">http://github.com/allenlsy/c_essence</a></p>
</blockquote>

<ul>
<li><a href="#i1">1. Link multiple target file</a></li>
<li><a href="#i2">2. Definition and Declaration</a>

<ul>
<li><a href="#i2_1">2.1 <code>extern</code> and <code>static</code> keyword</a></li>
<li><a href="#i2_2">2.2 Header file</a></li>
</ul></li>
<li><a href="#i3">3. Static library</a></li>
<li><a href="#i4">4. Shared library</a>

<ul>
<li><a href="#i4_1">4.1 Without <code>-fPIC</code> option</a></li>
<li><a href="#i4_2">4.2 With <code>-fPIC</code> option</a></li>
<li><a href="#i4_3">4.3 Dynamic linking</a></li>
<li><a href="#i4_4">4.4 Shared library naming convention</a></li>
</ul></li>
</ul>

<hr />

<h2 id="i1">1. Link multiple target file</h2>

<p>We use a stack program as an example.</p>

<pre lang="c" title="stack.c">
char stack[512];
int top = -1;

void push(char c)
{
    stack[++top] = c;
}

char pop(void) 
{
    return stack[--top];
}

int is_empty(void)
{
    return top == -1;
}
</pre>

<pre lang="c" title="main.c">
#include <stdio.h>

int a, b = 1;

int main(void)
{
    push('a');
    push('b');
    push('c');
    
    while(!is_empty())
        putchar(pop());
    putchar('\n');
    
    return 0;
}
</pre>

<p>Compile them together. <code>gcc main.c stack.c -o main</code></p>

<p>Use <code>nm</code> to check the label table.</p>

<h2 id="i2">2. Definition and Declaration</h2>

<h3 id="i2_1">2.1 <code>extern</code> and <code>static</code> keyword</h3>

<p>During the compilation, the order of <code>main.c</code> and <code>stack.c</code> matters.</p>

<p>If we compile <code>main.c</code> separately, with <code>-Wall</code> option, <code>gcc -c main.c -Wall</code>, we find a warning.</p>

<pre highlight="false">
$ gcc -c main.c -Wall

main.c: In function ‘main’:
main.c:7: warning: implicit declaration of function ‘push’
main.c:11: warning: implicit declaration of function ‘is_empty’
main.c:12: warning: implicit declaration of function ‘pop’
</pre>

<p>Compiler cannot find the function prototype, therefore it create implicit declaration.</p>

<pre lang="c">
int push(char);
int pop(void);
int is_empty(void);
</pre>

<p>But we should not depend on implicit declaration, because it may make mistake.</p>

<p>To eliminate the warning:</p>

<pre lang="c" title="main.c">
#include <stdio.h>

extern void posh(char);
extern char pop(void);
extern int is_empty(void);

int main(void)
{
    push('a');
    push('b');
    push('c');
    
    while(!is_empty())
        putchar(pop());
    putchar('\n');
    
    return 0;
}
</pre>

<p><code>extern</code> keyword of <code>push</code> means, <code>push</code> will be defined with external linkage. And if we don't write <code>extern</code>, it still have external linkage.</p>

<p>If a function is <code>static</code>, then it has static linkage. It will only be recognised within the file.</p>

<p>Now, if from <code>main.c</code>, I want to access <code>top</code> in <code>stack.c</code>, just add a line <code>extern int top;</code>. Since <code>top</code> already has the external linkage, it will be linked correctly.</p>

<pre lang="c" title="main.c">
#include <stdio.h>

extern void posh(char);
extern char pop(void);
extern int is_empty(void);

int main(void)
{
    push('a');
    push('b');
    push('c');
    
    extern int top;
    printf("%d\n", top);
    
    while(!is_empty())
        putchar(pop());
    putchar('\n');
    
    return 0;
}
</pre>

<p>But for a stack, it should hide <code>top</code> variable.</p>

<pre lang="c" title="stack.c">
static char stack[512];
static int top = -1;

void push(char c)
{
    stack[++top] = c;
}

char pop(void) 
{
    return stack[--top];
}

int is_empty(void)
{
    return top == -1;
}
</pre>

<h3 id="i2_2">2.2 Header file</h3>

<p>Header file is used for recursively including module. Let's make a header file for stack.</p>

<pre lang="c" title="stack.h">
#ifndef STACK_H
#define STACK_H
extern void push(char);
extern char pop(void);
extern int is_empty(void);
#endif
</pre>

<p>Then in <code>main.c</code>, we only need to include <code>stack.h</code>, without declare three extern method prototypes.</p>

<pre lang="c" title="main.c">
#include <stdio.h>
#include "stack.h"
int main(void)
{
    push('a');
    push('b');
    push('c');
    
    while(!is_empty())
        putchar(pop());
    putchar('\n');
    
    return 0;
}
</pre>

<p>Headers included using <code>&lt;&gt;</code>, gcc will look for them in the order of:</p>

<ul>
<li>folders that <code>-I</code> option assigns</li>
<li>system header files, usually in <code>/usr/include</code></li>
</ul>

<p>Headers included using <code>""</code>, gcc will look for them in the order of:</p>

<ul>
<li>current folder</li>
<li>folders that <code>-I</code> option assigns</li>
<li>system header files</li>
</ul>

<h4>Example 1</h4>

<p>Suppose we have a folder structure like this:</p>

<pre highlight="false">
$ tree

.
├── main.c
└── stack
    ├── stack.c
    └── stack.h

1 directory, 3 files
</pre>

<p>Use <code>gcc -c main.c -Istack</code> to compile. <code>-I</code> tells gcc to look for headers in <em>stack</em> folder.</p>

<p><strong>Header guard</strong> protects including headers repeatedly. The main reason is that some kinds of code, like <code>typedef</code>, should not be defined multiple times.</p>

<blockquote>
  <p>An important concept <strong>Previous linkage</strong> of a label: the same type of linkage as last time.</p>
</blockquote>

<h2 id="i3">3. Static library</h2>

<p><code>libc</code> is a static library.</p>

<p>To illustrate how to create a static library file, we separate <code>stack.c</code> into four files.</p>

<pre lang="c">
/* stack.c */
char stack[512];
int top = -1;

/* push.c */
extern char stack[512];
extern int top;

void push(char c) 
{
    stack[++top] = c;
}

/* pop.c */
extern char stack[512];
extern int top;

char pop(voi)
{
    return stack[top--];
}

/* is_empty.c */
extern int top;

int is_empty(void)
{
    return top == -1;
}

/* stack.h */
#ifndef STACK_H
#define STACK_H
extern void push(char);
extern char pop(void);
extern int is_empty(void);
#endif

/* main.c */
#include <stdio.h>
#include "stack.h"

int main(void)
{
    push('a');
    return 0;
}
</pre>

<p>The folder structure should be:</p>

<pre highlight="false">
.
├── main.c
└── stack
    ├── is_empty.c
    ├── pop.c
    ├── push.c
    ├── stack.c
    └── stack.h

1 directory, 6 files

</pre>

<p>Compile the whole project using <code>gcc -c stack/stack.c stack/push.c stack/pop.c stack/is_empty.c</code>.</p>

<p>Then create the static library file <code>libstack.a</code>:</p>

<pre lang="sh">
$ ar rs libstack.a stack.o push.o pop.o is_empty.o

ar: creating libstack.a
</pre>

<p><code>ar</code> means archive, similar to <code>tar</code> command. Option <code>r</code> means replace existing file into archive. Option <code>s</code> means create static library, with static index. <code>ranlib</code> is another command for creating static index.</p>

<p>Now we can compile <code>main.c</code> with <code>libstack.a</code>, <code>gcc main.c -L. -lstack -Istack -o main</code></p>

<p><code>-L</code> option assigns the path of library files. <code>.</code> means current folder. This option is not optional.</p>

<p><code>-l</code> option tells the compiler to link <code>libstack</code></p>

<p><code>-I</code> option tells the compiler the path of header files</p>

<p>The default searching path for compile: <code>gcc -print-search-dirs</code></p>

<p>Compiler looks for library in the order of shared library and static library.</p>

<p><strong>Shared library</strong> will not be linked by linker. Linker just assign the dynamic linker for it and tells the require shared library file name. Static library will be compile and linked into the executable.</p>

<h2 id="i4">4. Shared library</h2>

<p>The files to composite a shared library are different than normal target files. It must use option <code>-fPIC</code> to compile them.</p>

<h3 id="i4_1">4.1 Without <code>-fPIC</code> option</h3>

<p>We can check the difference in the compiled <code>push.o</code> file.</p>

<pre highlight="false">
$ gcc -c -g stack/stack.c stack/push.c stack/pop.c stack/is_empty.c
$ objdump -dS push.o

push.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <push>:
   0:   55                      push   %rbp
   1:   48 89 e5                mov    %rsp,%rbp
   4:   89 f8                   mov    %edi,%eax
   6:   88 45 fc                mov    %al,-0x4(%rbp)
   9:   48 8b 05 00 00 00 00    mov    0x0(%rip),%rax        # 10 <push+0x10>
  10:   8b 00                   mov    (%rax),%eax
  12:   8d 50 01                lea    0x1(%rax),%edx
  15:   48 8b 05 00 00 00 00    mov    0x0(%rip),%rax        # 1c <push+0x1c>
  1c:   89 10                   mov    %edx,(%rax)
  1e:   48 8b 05 00 00 00 00    mov    0x0(%rip),%rax        # 25 <push+0x25>
  25:   8b 00                   mov    (%rax),%eax
  27:   48 8b 15 00 00 00 00    mov    0x0(%rip),%rdx        # 2e <push+0x2e>
  2e:   48 98                   cltq   
  30:   0f b6 4d fc             movzbl -0x4(%rbp),%ecx
  34:   88 0c 02                mov    %cl,(%rdx,%rax,1)
  37:   c9                      leaveq 
  38:   c3                      retq   

</pre>

<p>The address of <code>stack</code> and <code>top</code> are 0x0. They will be modified during relocation.</p>

<pre highlight="false">
$ readelf -a push.o

…
Relocation section '.rela.text' at offset 0x598 contains 4 entries:
  Offset          Info           Type           Sym. Value    Sym. Name + Addend
00000000000c  000a00000009 R_X86_64_GOTPCREL 0000000000000000 top - 4
000000000018  000a00000009 R_X86_64_GOTPCREL 0000000000000000 top - 4
000000000021  000a00000009 R_X86_64_GOTPCREL 0000000000000000 top - 4
00000000002a  000b00000009 R_X86_64_GOTPCREL 0000000000000000 stack - 4

Relocation section '.rela.eh_frame' at offset 0x5f8 contains 1 entries:
  Offset          Info           Type           Sym. Value    Sym. Name + Addend
000000000020  000200000002 R_X86_64_PC32     0000000000000000 .text + 0
...

</pre>

<p>It says there are 4 things need to be modified during relocation.</p>

<p>Let's link them to a executable file and then disassemble it.</p>

<pre highlight="false">
$ gcc -g main.c stack.o push.o pop.o is_empty.o -Istack -o main
$ objdump -dS main

…

000000000040050c <push>:
  40050c:       55                      push   %rbp
  40050d:       48 89 e5                mov    %rsp,%rbp
  400510:       89 f8                   mov    %edi,%eax
  400512:       88 45 fc                mov    %al,-0x4(%rbp)
  400515:       48 8b 05 4c 04 20 00    mov    0x20044c(%rip),%rax        # 600968 <_DYNAMIC+0x198>
  40051c:       8b 00                   mov    (%rax),%eax
  40051e:       8d 50 01                lea    0x1(%rax),%edx
  400521:       48 8b 05 40 04 20 00    mov    0x200440(%rip),%rax        # 600968 <_DYNAMIC+0x198>
  400528:       89 10                   mov    %edx,(%rax)
  40052a:       48 8b 05 37 04 20 00    mov    0x200437(%rip),%rax        # 600968 <_DYNAMIC+0x198>
  400531:       8b 00                   mov    (%rax),%eax
  400533:       48 8b 15 36 04 20 00    mov    0x200436(%rip),%rdx        # 600970 <_DYNAMIC+0x1a0>
  40053a:       48 98                   cltq   
  40053c:       0f b6 4d fc             movzbl -0x4(%rbp),%ecx
  400540:       88 0c 02                mov    %cl,(%rdx,%rax,1)
  400543:       c9                      leaveq 
  400544:       c3                      retq   
  400545:       90                      nop
  400546:       90                      nop
  400547:       90                      nop

…

</pre>

<p>All the 0x0 address are replaced with absolute addresses. This is <strong>Relocation</strong>.</p>

<h3 id="i4_2">4.2 With <code>-fPIC</code> option</h3>

<pre highlight="false">
$ gcc -c -g -fPIC stack/stack.c stack/push.c stack/pop.c stack/is_empty.c
$ objdump -dS push.o

push.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <push>:
extern char stack[512];
extern int top;

void push(char c) 
{
   0:   55                      push   %rbp
   1:   48 89 e5                mov    %rsp,%rbp
   4:   89 f8                   mov    %edi,%eax
   6:   88 45 fc                mov    %al,-0x4(%rbp)
    stack[++top] = c;
   9:   48 8b 05 00 00 00 00    mov    0x0(%rip),%rax        # 10 <push+0x10>
  10:   8b 00                   mov    (%rax),%eax
  12:   8d 50 01                lea    0x1(%rax),%edx
  15:   48 8b 05 00 00 00 00    mov    0x0(%rip),%rax        # 1c <push+0x1c>
  1c:   89 10                   mov    %edx,(%rax)
  1e:   48 8b 05 00 00 00 00    mov    0x0(%rip),%rax        # 25 <push+0x25>
  25:   8b 00                   mov    (%rax),%eax
  27:   48 8b 15 00 00 00 00    mov    0x0(%rip),%rdx        # 2e <push+0x2e>
  2e:   48 98                   cltq   
  30:   0f b6 4d fc             movzbl -0x4(%rbp),%ecx
  34:   88 0c 02                mov    %cl,(%rdx,%rax,1)
}
  37:   c9                      leaveq 
  38:   c3                      retq   

</pre>

<p><code>stack</code> and <code>top</code> are no longer 0x0. They are <code>0x0(%rip)</code>.</p>

<pre highlight="false">
$ readelf -a push.o

…
Relocation section '.rela.text' at offset 0xb50 contains 4 entries:
  Offset          Info           Type           Sym. Value    Sym. Name + Addend
00000000000c  001000000009 R_X86_64_GOTPCREL 0000000000000000 top - 4
000000000018  001000000009 R_X86_64_GOTPCREL 0000000000000000 top - 4
000000000021  001000000009 R_X86_64_GOTPCREL 0000000000000000 top - 4
00000000002a  001100000009 R_X86_64_GOTPCREL 0000000000000000 stack - 4
...

</pre>

<p>Create shared library.</p>

<pre highlight="false">
$ gcc -shared -o libstack.so stack.o push.o pop.o is_empty.o
$ objdump -dS libstack.so

…
00000000000005ec <push>:
extern char stack[512];
extern int top;

void push(char c) 
{
 5ec:   55                      push   %rbp
 5ed:   48 89 e5                mov    %rsp,%rbp
 5f0:   89 f8                   mov    %edi,%eax
 5f2:   88 45 fc                mov    %al,-0x4(%rbp)
    stack[++top] = c;
 5f5:   48 8b 05 24 03 20 00    mov    0x200324(%rip),%rax        # 200920 <_DYNAMIC+0x190>
 5fc:   8b 00                   mov    (%rax),%eax
 5fe:   8d 50 01                lea    0x1(%rax),%edx
 601:   48 8b 05 18 03 20 00    mov    0x200318(%rip),%rax        # 200920 <_DYNAMIC+0x190>
 608:   89 10                   mov    %edx,(%rax)
 60a:   48 8b 05 0f 03 20 00    mov    0x20030f(%rip),%rax        # 200920 <_DYNAMIC+0x190>
 611:   8b 00                   mov    (%rax),%eax
 613:   48 8b 15 16 03 20 00    mov    0x200316(%rip),%rdx        # 200930 <_DYNAMIC+0x1a0>
 61a:   48 98                   cltq   
 61c:   0f b6 4d fc             movzbl -0x4(%rbp),%ecx
 620:   88 0c 02                mov    %cl,(%rdx,%rax,1)
}
 623:   c9                      leaveq 
 624:   c3                      retq   
 625:   90                      nop
 626:   90                      nop
 627:   90                      nop

…
</pre>

<p>At 5f5, 0x200324 stores another address. That address is the address of <code>top</code>. This is called <strong>Indirect addressing</strong>.</p>

<p>Now compile and link <code>main.c</code> with <code>libstack.so</code>.</p>

<pre highlight="false">
$ gcc main.c -g -L. -lstack -Istack -o main
$ ./main

./main: error while loading shared libraries: libstack.so: cannot open shared object file: No such file or directory
</pre>

<p>Why can't gcc find <code>libstack.so</code>? We can use <code>ldd</code> command to check which libraries the executable file depends on.</p>

<pre highlight="false">
$ ldd main

        linux-vdso.so.1 =>  (0x00007fffe17f1000)
        libstack.so => not found
        libc.so.6 => /lib64/libc.so.6 (0x00007fc962e17000)
        /lib64/ld-linux-x86-64.so.2 (0x00007fc9631b4000)
</pre>

<p>The searching order is decided by the dynamic linker. <code>man 8 ld.so</code> can see the searching order.</p>

<pre highlight="false">
       The shared libraries needed by the program are searched for in the following order:

       o  (ELF only) Using the directories specified in the DT_RPATH dynamic section attribute of the binary if present and DT_RUNPATH  attribute  does  not  exist.
          Use of DT_RPATH is deprecated.

       o  Using the environment variable LD_LIBRARY_PATH.  Except if the executable is a set-user-ID/set-group-ID binary, in which case it is ignored.

       o  (ELF only) Using the directories specified in the DT_RUNPATH dynamic section attribute of the binary if present.

       o  From  the  cache file /etc/ld.so.cache which contains a compiled list of candidate libraries previously found in the augmented library path.  If, however,
          the binary was linked with the -z nodeflib linker option, libraries in the default library paths are skipped.

       o  In the default path /lib, and then /usr/lib.  If the binary was linked with the -z nodeflib linker option, this step is skipped.


</pre>

<p>To summarise, <strong>the best way to solve the problem</strong>, is the second way described in the man page.</p>

<ul>
<li>add current path to <code>/etc/ld.so.conf</code></li>
<li><code>sudo ldconfig -v</code> to reconfig and shows all the shared library. </li>
<li><code>ldd main</code> again</li>
</ul>

<p>Another way is to add <code>libstack.so</code> to system library. Usually <code>/usr/lib</code>.</p>

<h3 id="i4_3">4.3 Dynamic linking</h3>

<p>Let's look into <code>main</code> to see how it call <code>push()</code> from the shared library.</p>

<pre highlight="false">

$ objdump -dS main

…
Disassembly of section .plt:

00000000004004a0 <__libc_start_main@plt-0x10>:
  4004a0:       ff 35 a2 04 20 00       pushq  0x2004a2(%rip)        # 600948 <_GLOBAL_OFFSET_TABLE_+0x8>
  4004a6:       ff 25 a4 04 20 00       jmpq   *0x2004a4(%rip)        # 600950 <_GLOBAL_OFFSET_TABLE_+0x10>
  4004ac:       0f 1f 40 00             nopl   0x0(%rax)

00000000004004b0 <__libc_start_main@plt>:
  4004b0:       ff 25 a2 04 20 00       jmpq   *0x2004a2(%rip)        # 600958 <_GLOBAL_OFFSET_TABLE_+0x18>
  4004b6:       68 00 00 00 00          pushq  $0x0
  4004bb:       e9 e0 ff ff ff          jmpq   4004a0 <_init+0x18>

00000000004004c0 <push@plt>:
  4004c0:       ff 25 9a 04 20 00       jmpq   *0x20049a(%rip)        # 600960 <_GLOBAL_OFFSET_TABLE_+0x20>
  4004c6:       68 01 00 00 00          pushq  $0x1
  4004cb:       e9 d0 ff ff ff          jmpq   4004a0 <_init+0x18>

…

00000000004005b4 <main>:
#include <stdio.h>
#include "stack.h"

int main(void)
{
  4005b4:       55                      push   %rbp
  4005b5:       48 89 e5                mov    %rsp,%rbp
    push('a');
  4005b8:       bf 61 00 00 00          mov    $0x61,%edi
  4005bd:       e8 fe fe ff ff          callq  4004c0 <push@plt>
    return 0;
  4005c2:       b8 00 00 00 00          mov    $0x0,%eax
}
  4005c7:       c9                      leaveq 
  4005c8:       c3                      retq   
  4005c9:       90                      nop
  4005ca:       90                      nop
  4005cb:       90                      nop
  4005cc:       90                      nop
  4005cd:       90                      nop
  4005ce:       90                      nop
  4005cf:       90                      nop

…
</pre>

<p>In <code>main(void)</code>, <code>push</code> is called by <code>callq  4004c0 &lt;push@plt&gt;</code>. Shared library is location irrelevant code, loaded to any address during runtime.</p>

<p>To see where it is allocated during runtime, we use <code>gdb</code>.</p>

<pre highlight="false">
$ gdb main

GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1)
Copyright (C) 2010 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-redhat-linux-gnu".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from /home/vagrant/proj/blog/linkage/shared_library/main...done.
(gdb) start
Temporary breakpoint 1 at 0x4005b8: file main.c, line 6.
Starting program: /home/vagrant/proj/blog/linkage/shared_library/main 

Temporary breakpoint 1, main () at main.c:6
6           push('a');
Missing separate debuginfos, use: debuginfo-install glibc-2.12-1.107.el6.x86_64
(gdb) si
0x00000000004005bd      6           push('a');
(gdb) si
0x00000000004004c0 in push@plt ()
(gdb) si
0x00000000004004c6 in push@plt ()
(gdb) si
0x00000000004004cb in push@plt ()
(gdb) si
0x00000000004004a0 in ?? ()
(gdb) si
0x00000000004004a6 in ?? ()
(gdb) si
0x00007ffff7df1660 in _dl_runtime_resolve () from /lib64/ld-linux-x86-64.so.2
(gdb) 

</pre>

<p>Use <code>si</code> to go into the assembly code. At last it does into the dynamic linker <code>/lib64/ld-linux-x86-64.so.2</code>. This dynamic linker will find <code>push()</code>, and after that the program can cal <code>push()</code>.</p>

<h3 id="i4_4">4.4 Shared library naming convention</h3>

<p>The name consists of real name, soname and linker name. <strong>Soname</strong> is a symbolic link name, contains only primary version number. Library files with the same soname must have the same interface. <code>libcap.so.1.10</code> and <code>libcap.so.1.11</code> have the same interface. It provides convenience for upgrading. <code>libc-2.8.90.so</code> is special. The primary version number is 6, not <code>2</code> or <code>2.8</code>.</p>

<p>Some linker names are symbolic links to a library, some are linking script.</p>

<pre lang="sh">
$ gcc -shared -Wl,-soname,libstack.so.1 -o libstack.so.1.0 stack.o push.o pop.o is_empty.o

$ gcc --help 

…
  -Wl,<options>            Pass comma-separated <options> on to the linker
...
</pre>

<p><code>-Wl,-soname,libstack.so.1</code> means <code>-soname libstack.so.1</code> is the option passed by gcc to the linker.</p>

<p>Now we have the <code>libstack.so.1.0</code> file. Its real name is <code>libstack.so.1.0</code>, and its soname is <code>libstack.so.1</code></p>

<pre highlight="false">
$ readelf -a libstack.so.1.0

…
Dynamic section at offset 0x7a0 contains 21 entries:
  Tag        Type                         Name/Value
 0x0000000000000001 (NEEDED)             Shared library: [libc.so.6]
 0x000000000000000e (SONAME)             Library soname: [libstack.so.1]
 0x000000000000000c (INIT)               0x4f0
 0x000000000000000d (FINI)               0x6b8
 0x000000006ffffef5 (GNU_HASH)           0x1b8
…

</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1037</wp:post_id>
		<wp:post_date>2013-05-19 15:27:03</wp:post_date>
		<wp:post_date_gmt>2013-05-19 07:27:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>c-essence-3-linkage</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="c"><![CDATA[c]]></category>
		<category domain="category" nicename="programming-language-bian-cheng-yu-yan"><![CDATA[Programming Languages]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1298467699]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>NOTES of Effective Java (8) - Exceptions</title>
		<link>http://allenlsy.com/2013/05/notes-of-effective-java-8-exceptions/</link>
		<pubDate>Mon, 20 May 2013 03:19:21 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=1043</guid>
		<description></description>
		<content:encoded><![CDATA[<p><img src="http://www.crazysmoove.com/memjug/javabooks-slides/images/Effective_Java.jpg" alt="enter image description here" />
<br /></p>

<ul>
<li><a href="#i57">57. Use exceptions only for exceptional conditions</a></li>
<li><a href="#i58">58. Use checked exceptions for recoverable conditions and runtime exceptions for programming errors</a></li>
<li><a href="#i59">59. Avoid unnecessary use of checked exceptions</a></li>
<li><a href="#i60">60. Favor the use of standard exceptions</a></li>
<li><a href="#i61">61. Throw exceptions appropriate to the abstraction</a></li>
<li><a href="#i62">62. Document all exceptions thrown by each method</a></li>
<li><a href="#i63">63. Include failure-capture information in detail messages</a></li>
<li><a href="#i64">64. Strive for failure atomicity</a></li>
<li><a href="#i65">65. Do not ignore exceptions </a></li>
</ul>

<hr />

<h2 id="i57">57. Use exceptions only for exceptional conditions</h2>

<p>Do not use <code>catch</code> block to implement regular control flow.</p>

<p>Actually, executing <code>catch</code> block is 100 times slower than normal block.</p>

<p>A well-designed API must not force its clients to use exceptions for ordinary control flow.</p>

<h2 id="i58">58. Use checked exceptions for recoverable conditions and runtime exceptions for programming errors</h2>

<p>Java provides three throwables:</p>

<h4>Checked exception</h4>

<p>Use <code>try..catch</code> to implement it. If the caller want to recover after failed in the method, then we should use checked exception. It forces programmer to deal with exceptions.</p>

<h4>Unchecked exception: run-time exception</h4>

<p><strong>Unchecked exception should not be catched inside the method. It always means a unrecoverable condition.</strong></p>

<p>If program runs to <strong>precondition violation</strong>, we can throw runtime exception. eg. <code>ArrayIndexOutofBoundsException</code></p>

<p>You'd better extends from <code>RuntimeException</code> if you have a custom exception class.</p>

<h4>Unchecked exception: Error</h4>

<p>Uncatched throwable.</p>

<h2 id="i59">59. Avoid unnecessary use of checked exceptions</h2>

<p>Checked exception will make program more complicated.</p>

<pre lang="java">
// Invocation with state-testing method and unchecked exception
if (obj. actionPermitted(args)) {
    obj.action(args);
} else {
    // Handle exceptional condition
}
</pre>

<h2 id="i60">60. Favor the use of standard exceptions</h2>

<ul>
<li><code>IllegalArgumentException</code></li>
<li><code>IllegalStateException</code></li>
<li><code>NullPointerException</code></li>
<li><code>ConcurrentModificationException</code></li>
<li><code>UnsupportedOperationException</code></li>
</ul>

<h2 id="i61">61. Throw exceptions appropriate to the abstraction</h2>

<p>If the throwing exception has no obvious relation with the executing job, higher level implementation should catch the exception, and throw an exception with good explanation. This is called <strong>exception translation</strong>.</p>

<h4>Example from <code>List&lt;E&gt;</code></h4>

<pre lang="java">
public E get(int index) {
    ListIterator<E> i = listIterator(index);
    try {
        return i.next();
    } catch (NoSuchElementException e) {
        throw new IndexOutOfBoundsException("Index: " + index);
    }
}
</pre>

<h4>Exception chaining</h4>

<p>Pass lower level exception to the constructor of a higher level exception, for the purpose of better debugging.</p>

<p>The custom exception should be like:</p>

<pre lang="java">
class HigherLevelException extends Exception {
    HigherLevelException(Throwable cause) {
        super(cause);
    }
}
</pre>

<p><code>Throwable</code> has <code>initCause()</code> to set cause, and <code>getCause()</code> to access cause.</p>

<h2 id="i62">62. Document all exceptions thrown by each method</h2>

<p>Use <code>@throws</code> to note down the condition that method may throw exception, describe the precondition.</p>

<p>Use <code>@throws</code> to note down the unchecked exception, but do not use <code>throws</code> keyword to declare them in the method prototype.</p>

<h2 id="i63">63. Include failure-capture information in detail messages</h2>

<p>Set good exception message.</p>

<h2 id="i64">64. Strive for failure atomicity</h2>

<p><strong>Failure atomic</strong>: A failed method invocation should leave the object in the state that it was in prior to the invocation.</p>

<p>There are several approaches to implement failure atomicity.</p>

<ul>
<li>Validate parameters before computation.</li>
<li>Compute the result first, to see whether there is an exception. If result is valid, then set it to the object.</li>
<li>Create recovery code, like rollback operation. It is not very recommended.</li>
<li>Create a copy of the object and compute. If valid, replace the original one with the copy.</li>
</ul>

<h2 id="i65">65. Do not ignore exceptions</h2>

<p>Do not write empty catch block. At least comment why the exception can be ignored.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1043</wp:post_id>
		<wp:post_date>2013-05-20 11:19:21</wp:post_date>
		<wp:post_date_gmt>2013-05-20 03:19:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>notes-of-effective-java-8-exceptions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="category" nicename="programming-language-bian-cheng-yu-yan"><![CDATA[Programming Languages]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1300389263]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>59</wp:comment_id>
			<wp:comment_author><![CDATA[高清电视棒]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://soft.syue.com/soft/2/27/2012/2012090592958.html</wp:comment_author_url>
			<wp:comment_author_IP>124.131.172.197</wp:comment_author_IP>
			<wp:comment_date>2013-05-23 02:59:38</wp:comment_date>
			<wp:comment_date_gmt>2013-05-22 18:59:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Null...</strong>

分析的很透彻，很欣赏你的看法，学习了。...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>65</wp:comment_id>
			<wp:comment_author><![CDATA[电视棒软件]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.hicode.cn/software/View-Software-27945.html</wp:comment_author_url>
			<wp:comment_author_IP>221.1.223.3</wp:comment_author_IP>
			<wp:comment_date>2013-05-27 00:33:47</wp:comment_date>
			<wp:comment_date_gmt>2013-05-26 16:33:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Null...</strong>

分析的很透彻，很欣赏你的看法，学习了。...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>NOTES of Effective Java (4) - Generics</title>
		<link>http://allenlsy.com/2013/05/notes-of-effective-java-4-generics/</link>
		<pubDate>Tue, 21 May 2013 02:32:36 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=1046</guid>
		<description></description>
		<content:encoded><![CDATA[<p><img src="http://www.crazysmoove.com/memjug/javabooks-slides/images/Effective_Java.jpg" alt="enter image description here" />
<br /></p>

<ul>
<li><a href="#i23">23. Don't use raw types in new code</a></li>
<li><a href="#i24">24. Eliminate unchecked warnings</a></li>
<li><a href="#i25">25. Prefer <code>List</code> to <code>Array</code></a></li>
<li><a href="#i26">26. Favor generic types</a></li>
<li><a href="#i27">27. Favor generic method</a></li>
<li><a href="#i28">28. Use bounded wildcards to increase API flexibility</a></li>
<li><a href="#i29">29. Consider typesafe heterogeneous containers</a></li>
</ul>

<hr />

<h2 id="i23">23. Don't use raw types in new code</h2>

<p><strong>Raw type</strong> generics is the type without the parameterized type. For example, <code>List</code> is the raw type of <code>List&lt;E&gt;</code>.</p>

<h4>Example: bad</h4>

<pre lang="java">
// DON'T DO THIS
private final Collection stamps = ...;

stamps.add(new Coin());

for (Iterator i = stamps.iterator(); i.hasNext(); ) {
    // HERE COMES THE EXCEPTION
    Stamp s = (Stamp) i.next();
}
</pre>

<p>Replace the first line with:</p>

<pre lang="java">
private final Collection<Stamp> stamps = ...;
</pre>

<p>Using raw type will lose the security advantage of generics. Then why Java allow raw types? For historical reasons.</p>

<h4>Difference between <code>List</code> and <code>List&lt;Object&gt;</code></h4>

<p><code>List</code>, code likes this is avoiding type checking.</p>

<p>If <code>List lst</code>, <code>List&lt;Object&gt; lst1</code>, <code>List&lt;String&gt; lst2</code>, then <code>lst = lst2</code> is valid, but <code>lst1 = lst2</code> is invalid. <code>List&lt;String&gt;</code> is a subclass of <code>List</code>, but is not a subclass of <code>List&lt;Object&gt;</code>.</p>

<pre lang="java">
public static void main(String[] args)
{
    List< String > strings = new ArrayList< String >();
    unsafeAdd(strings, new Integer(42));
    String s = strings.get(0);
}

private static void unsafeAdd(List list, Object o) {
    list.add(o);
}
</pre>

<p>Program will receive a warning at <code>list.add(o)</code>. I know you want to allow the element to be any type. You can use <code>List&lt;?&gt;</code> instead of <code>List</code> in <code>unsafeAdd</code>.</p>

<h4>Difference between <code>List</code> and <code>List&lt;?&gt;</code></h4>

<p><code>?</code>, the <strong>unbounded wildcard type</strong>, is a safe type. <code>null</code> cannot be put into <code>Collection&lt;?&gt;</code>.</p>

<h4>Two exceptions: When to use raw type in new code</h4>

<p>Generics information will be erase at runtime. It only takes effect at compile time.</p>

<ol>
<li>In class literal(like <code>List.class</code>), we must use raw type. <code>List&lt;String&gt;.class</code> and <code>List&lt;?&gt;.class</code> are invalid.</li>
<li><code>instanceof List&lt;String&gt;</code> is invalid.</li>
</ol>

<p>Code below is a way to use <code>instanceof</code> when using generics</p>

<pre lang="java">
if (o instanceof Set) {
    Set<?> m = ( Set<?> ) o;
}
</pre>

<h4>Some types</h4>

<p><strong>Bounded type parameter</strong>: <code>&lt;E extends Number&gt;</code></p>

<p><strong>Recursive type bound</strong>: <code>&lt;T extends Comparable&lt;T&gt;&gt;</code></p>

<p><strong>Bounded wildcard type</strong>: <code>List&lt;? extends Number&gt;</code></p>

<p><strong>Generic method</strong>: <code>static &lt;E&gt; List&lt;E&gt; asList(E[] a)</code></p>

<h2 id="i24">24. Eliminate unchecked warnings</h2>

<p>Eliminate every unchecked warnings that you can.</p>

<p>If the warning cannot be eliminated, and you can prove the code is safe, then you can use a <code>@SuppressWarnings("unchecked")</code> annotation to eliminate the warning.</p>

<h4>Example</h4>

<pre lang="java">
public < T > T[] toArray(T[] a) {
    if (a.length < size) {
        // This cast is correct because the array we're creating
        // is of the same type as the one passed in, which is T[].
        @SuppressWarnings("unchecked")
        T[] result = (T[]) Arrays.copyOf(elements, size, a.getClass());
        return result;
    }
    System.arraycopy(elements, 0, a, 0, size);
    if (a.length > size)
        a.[size] = null;
    return a;
}
</pre>

<p>When using <code>@SuppressWarnings("unchecked")</code> annotation, you must comment why it is correct and safe.</p>

<h2 id="i25">25. Prefer <code>List</code> to <code>Array</code></h2>

<p>Array is <strong>covariant</strong>, which means if <code>Sub</code> is a subclass of <code>Super</code>, then <code>Sub[]</code> is a subclass of <code>Super[]</code>.</p>

<p>List is <strong>invariant</strong>.</p>

<pre lang="java">
/* This compiles */
Object[] objectArray = new Long[1];
objectArray[0] = "I don't fit in"; // Throws ArrayStoreException

/* This will not compile */
List<Object> ol = new ArrayList<Long>(); // compilation error
ol.add("I don't fit in");
</pre>

<p>This actually means, <strong>array has fault, not generics</strong>.</p>

<p><strong>Another difference between array and generics is</strong>, array does type checking during runtime, while generics does that during compilation. Array throws exception if error occurs.</p>

<p>Generics does type checking while compilation, and then use <strong>erasure</strong> to erase the parameterized type information in runtime. After erasure, generics can be used with unbounded generics.</p>

<h4>Creating an array of a generic type, a parameterized type or a type parameter are illegal, because the type of array is not typesafe</h4>

<p>This code is illegal</p>

<pre lang="java">
List<String>[] stringLists = new List<String>[1]; // This one won't compile
List<Integer> intList = Arrays.asList(42);
Object[] object = stringLists;
objects[0] = intList;
String s = stringList[0].get(0);
</pre>

<p>If 1st line is correct, then 3rd line, it is correct, because at runtime, <code>stringList</code> is just <code>List</code> after erasure. Then 4th line, it is equivalent to the first element of <code>List</code> is a <code>List</code>(after erasure, but actually it is <code>List&lt;Integer&gt;</code>. 4th line is legal. But 5th line is illegal, we cannot get s, since it is a <code>Integer</code> 42.</p>

<p>Things like <code>E</code>, <code>List&lt;E&gt;</code>, <code>List&lt;String&gt;</code> is <strong>non-reifiable</strong> type, which is a type that at runtime the information in the memory representation is little than compilation time. <code>List&lt;?&gt;</code> is legal.</p>

<p><strong>Solution</strong> is prefer <code>List&lt;E&gt;</code> instead of <code>E[]</code>. Less performance and simplexity, more secure and flexibility.</p>

<pre lang="java">
static <E> E reduce(List<E> list, Function<E> f, E initVal) {
    E[] snapshot = (E[]) list.toArray(); // Locks list
    E result = initVal;
    for (E e : snapshot)
        result = f.apply(result, e);
    return result;
}
</pre>

<p>It has a warning <code>[unchecked] unchecked cast</code>. <code>toArray()</code> returns a Object[], casting to <code>E[]</code> is dangerous.</p>

<p><strong>Solution</strong> is:</p>

<pre lang="java">
static <E> E reduce(List<E> list, Function<E> f, E initVal) {
    List<E> snapshot;
    synchronized(list) {
        snapshot = new ArrayList<E>(list);
    }

    E result = initVal;
    for (E e : snapshot)
        result = f.apply(result, e);
    return result;
}
</pre>

<h2 id="i26">26. Favor generic types</h2>

<p>We are programming a Stack class, <code>public class Stack&lt;E&gt;</code>.</p>

<p>You may want to store the element in an array like <code>private E[] elements</code> inside the class. In the constructor, when you initialize <code>elements</code>, you will get a warning or error on <code>elements = new E[DEFAULT_INITIAL_CAPACITY]</code>. Because you cannot create a <strong>non-reifiable</strong> type array.</p>

<p>There are two ways to solve this.</p>

<h4>Solution 1</h4>

<p>Initialize <code>elements = (E[]) new Object[DEFAULT_INITIAL_CAPACITY]</code>. You will get another warning says <code>unchecked cast</code>. The compiler cannot guarantee the casting is correct. You can use a <code>@SuppressWarnings("unchecked")</code> to avoid the warning.</p>

<h4>Solution 2</h4>

<p>Change the type of <code>elements</code> to <code>Object[] elements</code>. Then you may get error when you do stack operations like on <code>E result = elements[--size]</code> you will get <code>incompatible types</code>. If you change it to <code>E result = (E) elements[--size]</code>, you will get a warning <code>unchecked cast</code>. Since <code>E</code> is a non-reifiable type, the compiler cannot to type checking when casting. Still you can use <code>@SuppressWarnings("unchecked")</code>.</p>

<h4>Summary</h4>

<p>Both solutions are ok. The difference is that first solution will annotate a whole array as <code>@SuppressWarnings</code>, which is more dangerous than the second solution. Thus the second one is better. But the second solution may require a lot of type casting to <code>E</code>,. That's why the first solution is more common in use.</p>

<p>Final code(using solution 1):</p>

<pre lang="java">
// ... explain why you can suppress the warnings
@SuppressWarnings("unchecked")
public class Stack {
    private Object[] elements;
    private int size = 0;
    private static final int DEFAULT_INITIAL_CAPACITY = 16;

    public Stack () {
        elements = new Object[DEFAULT_INIT_CAPACITY];
    }
    
    public void push(Object e) {
        ensureCapacity();
        elements[size++] = e;
    }

    public Object pop() {
        if (size == 0)
            throw new EmptyStackException();
        Object result = elements[--size];
        elements[size] = null;
        return result;
    }

    public boolean isEmpty() {
        return size == 0;
    }

    private void ensureCapacity() {
        if (elements.length == size)
            elements= Arrays.copyOf(elements, 2*size+1);
    }
}

</pre>

<h2 id="i27">27. Favor generic method</h2>

<h4>Example of generic method</h4>

<pre lang="java">
public static <E> Set<E> union(Set<E> s1, Set<E> s2) {
    Set<E> result = new HashSet<E>(s1);
    result.addAll(s2);
    return result;
}
</pre>

<p>You can use bounded wildcard type to make it more flexible.</p>

<hr />

<p>Generic has a mechanism called <strong>type inference</strong>. It will know what is the generic type you want to use.</p>

<p>There is a redundant in declaration of a generic object. <code>Map&lt;String, List&lt;String&gt;&gt; anagrams = new HashMap&lt;String, List&lt;String&gt;&gt;()</code>, the left side and right side both need the full type parameters. We can have a <strong>generic static factory method</strong> to do it.</p>

<pre lang="java">
public static <K, V> HashMap<K, V> newHashMap() {
    return new HashMap<K, V>
}

// calling the method 

Map<String, List<String>> anagrams = newHashMap(); // The type is inferenced from the return type

</pre>

<h4>Example: generic singleton factory</h4>

<p>If the object we generate from the generic static factory is a singleton, since generics use erasure mechanism, we may need to create many different types of singletons.</p>

<p>Suppose we have an interface</p>

<pre lang="java">
public interface UnaryFunction<T> {
    T apply(T arg);
}
</pre>

<p>Now we need an identity function, implement this <code>UnaryFunction</code>, we may need create a new one every time we use it for a new type.</p>

<p>The whole program:</p>

<pre lang="java">
public interface UnaryFunction<T> {
    T apply(T arg);
}

public class Main
{
    // Generic singleton factory pattern
    private static UnaryFunction<Object> IDENTITY_FUNCTION = 
        new UnaryFunction<Object>() {
            public Object apply(Object arg) { return arg; }
    };

    // IDENTITY_FUNCTION is stateless and its type parameter is
    // unbounded so it's safe to share one instance across all types
    @SuppressWarnings("unchecked")
    public static <T> UnaryFunction<T> identityFunction() {
        return (UnaryFunction<T>) IDENTITY_FUNCTION;
    }
    
    public static void main(String[] args) {
        String[] strings = { "jute", "hemp", "nylon" };
        UnaryFunction<String> sameString = identityFunction();
        for (String s : strings) 
            System.out.println(sameString.apply(s));

        Number[] numbers = { 1, 2.0, 3L };
        UnaryFunction<Number> sameNumber = identityFunction();
        for (Number n : numbers)
            System.out.println(sameNumber.apply(n));
    }
}

</pre>

<p>This one will have an warning, since not all the <code>IDENTITY_FUNCTION</code> can be casted to <code>UnaryFunction&lt;T&gt;</code>. But we know it is safe here.</p>

<h4>Example: recursive type bound</h4>

<p>How to express the constraint that in a list, every element is able to compare with another element in the list. For example, to get the maximum element from this type of list:</p>

<pre lang="java">
public static <T extends Comparable<T>> T max(List<T> list) { 
    Iterator<T> i = list.iterator();
    T result = i.next();
    while (i.hasNext()) {
        T t = i.next();
        if (t.compareTo(result) > 0)
            result = t;
    }
    return result;
}
</pre>

<p>By doing so we ensure that type <code>T</code> is able to compare with the same type object.</p>

<h2 id="i28">28. Use bounded wildcards to increase API flexibility</h2>

<p>We have a piece of code:</p>

<pre lang="java">
Stack<Number> numberstack = new Stack<Number>();
Iterable<Integer> integers = ... ;
numberStack.pushAll(integers);
</pre>

<p>You cannot push <code>integers</code> into <code>numberStack</code> because the types are not match.</p>

<p>After using bounded wildcard:</p>

<pre lang="java">
public void pushAll(Iterable< ? extends E> src) {
    for (E e : src)
        push(e);
}
</pre>

<p>If you also want a <code>popAll</code>:</p>

<pre lang="java">
public void popAll(Collection< ? super E> dst)
{
    while (!isEmpty())
        dst.add(pop());

}
</pre>

<p>Pay attention to <code>Collection&lt; ? super E&gt;</code>.</p>

<p><strong>For maximum flexibility, use wildcard types on input parameters that represent producers or consumers.</strong></p>

<p><strong>PECS</strong>: producer-extends, consumer-super. <em>producer</em> provides things, will not change itself. <em>consumer</em> use things, will change itself. So in previous example,, dst use the object from stack, it is a consumer.</p>

<h4>Example</h4>

<p>Apply PECS to the stack example in section 27:</p>

<pre lang="java">
public static <E> Set<E> union(Set< ? extends E > s1, Set< ? extends E > s2) { .. }

Set<Integer> integers = ...;
Set<Double> doubles = ...;
Set<Number> numbers = union(integers, doubles);
</pre>

<p>Notice that the return type of <code>union</code> is <code>Set&lt;E&gt;</code>.</p>

<p>Unfortunately, You will get an error: <code>incompatible types</code>. Because compiler cannot inference your type <code>E</code>.</p>

<p>The Solution is <strong>explicit type parameter</strong>. If the compiler cannot infer the correct type, we can try this.</p>

<pre lang="java">
Set<Number> numbers = Union.<Number>union(integers, doubles);
</pre>

<h4>More examples: recursive type bound</h4>

<p>Let's look back at the <code>max()</code> int section 27. Apply PECS to that. Previous method is:</p>

<pre lang="java">
public static <T extends Comparable< T > > T max(List< T > list)
</pre>

<p>Now become:</p>

<pre lang="java">
public static <T extends Comparable< ? super T > > T max(List< ? extends T > list) {
    Iterator<T> i = list.iterator();
    T result = i.next();
    while( i.hasNext()) {
        T t = i.next();
        if (t.compareTo(result) > 0)
            result = t;
    }
    return result;
}
</pre>

<p>But it has a compilation error. It says <code>list</code> is not a <code>List&lt;T&gt;</code>. We need to replace the iterator with <code>Iterator&lt; ? extends T &gt; i= list.iterator()</code>.</p>

<h2 id="i29">29. Consider typesafe heterogeneous containers</h2>

<p>In Java 1.5, <code>Class</code> type becomes <code>Class&lt;T&gt;</code>. <code>String.class</code> returns a value of type <code>Class&lt;String&gt;</code>.</p>

<p>We have a <code>Favorites</code> class, to store one single favorite object for each type of things.</p>

<pre lang="java">
public class Favorites {
    private Map< Class< ? >, Object> favorites = new HashMap< Class< ? >, Object>();

    public <T> void putFavorite(Class<T> type, T instance) {
        if (type == null)
            throw new NullPointerException("Type is null");
        favorites.put(type, instance);
    }
    public <T> T getFavorite(Class<T> type) {
        return type.cast(favorites.get(type));
    }
}


public static void main(String[] args) {
    Favorites f = new Favorites();
    f.putFavorite(String.class, "Java");
    f.putFavorite(Integer.class, 0xcafebabe);
    f.putFavorite(Class.class, Favorite.class);

    String favoriteString = f.getFavorite(String.class);

    System.out.println("%s\n", favoriteString);
}
</pre>

<p>We will get <code>Java</code>.</p>

<p>Notice that <code>Map&lt; Class&lt; ? &gt;, Object&gt;</code> can have any type of key.The value is <code>Object</code>, which means it does not guarantee the correct relationship between key and value.</p>

<p>To solve the problem, we can change <code>favorites.put(type, instance)</code> to <code>favorites.put(type, type.cast(instance))</code>.</p>

<p>Another problem of <code>Favorite</code> is, we cannot call something like <code>pushFavorite(List&lt;String&gt;.class, lst)</code>, because <code>List&lt;String&gt;</code> is non-reifiable. Currently it does not have a satisfying solution.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1046</wp:post_id>
		<wp:post_date>2013-05-21 10:32:36</wp:post_date>
		<wp:post_date_gmt>2013-05-21 02:32:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>notes-of-effective-java-4-generics</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="category" nicename="programming-language-bian-cheng-yu-yan"><![CDATA[Programming Languages]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1302820999]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>virtual keyword in C++</title>
		<link>http://allenlsy.com/2013/05/virtual-keyword-in-c/</link>
		<pubDate>Mon, 27 May 2013 07:57:38 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=1058</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I have a program to explain the <strong>static typing</strong> and <strong>dynamic typing</strong> in C++.</p>

<pre lang="cpp">
#include <iostream>
using namespace std;

class A {
public:
    A () {}
    void bark()
    {
        cout << "this is A" << endl;
    }
};

class B: public A
{
public:
    B () {}
    void bark()
    {
        cout << "this is B" << endl;
    }
};

int main(void)
{
    B b;
    A *a = &b;
    a->bark();
    
    return 0;
}
</pre>

<p>This program outputs <code>this is A</code>. If you are a Java programmer, you might thihk this should be <code>this is B</code>. But it is not.</p>

<p><code>bark()</code> in <code>A</code> is static typing now, which means <code>a</code>'s type is always <code>A</code>. <code>a</code> does not know <code>B</code>.</p>

<p>To make it barking <code>this is B</code>, it's easy. Add <code>virtual</code> before the <code>void bark()</code> in <code>A</code>.</p>

<p><code>virtual</code> makes <code>bark()</code> be called based on the real type, which might be the subclass of <code>A</code>, which is <code>B</code> here.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1058</wp:post_id>
		<wp:post_date>2013-05-27 15:57:38</wp:post_date>
		<wp:post_date_gmt>2013-05-27 07:57:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>virtual-keyword-in-c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="c"><![CDATA[c]]></category>
		<category domain="category" nicename="programming-language-bian-cheng-yu-yan"><![CDATA[Programming Languages]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1487291148]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>NOTES of Effective Java (9) - Concurrency</title>
		<link>http://allenlsy.com/2013/05/notes-of-effective-java-9-concurrency/</link>
		<pubDate>Tue, 28 May 2013 06:06:30 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=1062</guid>
		<description></description>
		<content:encoded><![CDATA[<p><img src="http://www.crazysmoove.com/memjug/javabooks-slides/images/Effective_Java.jpg" alt="enter image description here" />
<br /></p>

<ul>
<li><a href="#i66">66. Synchronize access to shared mutable data</a></li>
<li><a href="#i67">67. Avoid excessive synchronization</a></li>
<li><a href="#i68">68. Prefer executors and tasks to threads</a></li>
<li><a href="#i69">69. Prefer concurrency utilities to wait and notify</a></li>
<li><a href="#i70">70. Document thread safety</a></li>
<li><a href="#i71">71. Use lazy initialization judiciously</a></li>
<li><a href="#i72">72. Don't depend on the thread scheduler</a></li>
<li><a href="#i73">73. Avoid thread groups</a></li>
</ul>

<hr />

<blockquote>
  <p><code>synchronized</code> keyword makes sure that at the same time, there is only thread accessing all the synchronized methods in the object.</p>
</blockquote>

<h2 id="i66">66. Synchronize access to shared mutable data</h2>

<p>The way to stop a thread interrupting another thread, the thread should poll a boolean field, which initialized with <code>false</code>, but the second thread can set it to <code>true</code>.</p>

<pre lang="java">
public class StopThread {
    private static boolean stopRequested;

    public static void main(String[] args)
            throws InterruptedException {
        Thread backgroundThread = new Thread(new Runnable() {
            public void run() {
                int i = 0;
                while(!stopRequested)
                    i++;
            }
        });
        backgroundThread.start();

        TimeUnit.SECONDS.sleep(1);
        stopRequested = true;
    }
}
</pre>

<p>Without <code>synchronize</code>, it is not guaranteed that backgoundThread sees the changed <code>stopRequested</code>. The VM will compile the <code>while</code> loop into:</p>

<pre lang="java">
if (!done)
    while (true)
        i++;
</pre>

<p>This is an optimization called <strong>Hoisting</strong>.</p>

<p>When a new thread start, it will first read and load <code>stopRequested</code> from the main memory, which means the threads keeps a copy of <code>stopRequested</code> in the thread working memory. Until the thread finishes, it will only use the copy.</p>

<p><strong>Solution to this is:</strong></p>

<pre lang="java">
public class StopThread {
    private static boolean stopRequested;

    private static synchronized void requestStop() {
        stopRequested = true;
    }

    private static synchronized boolean stopRequested() {
        return stopRequested;
    }

    public static void main(String[] args)
            throws InterruptedException {
        Thread backgroundThread = new Thread(new Runnable() {
            public void run() {
                int i = 0;
                while(!stopRequested)
                    i++;
            }
        });
        backgroundThread.start();

        TimeUnit.SECONDS.sleep(1);
        requestStop();
    }
}
</pre>

<p>We synchronized both reading and writing. Only synchronize writing will not actually work.</p>

<p><strong>Another solution is</strong> to use <code>volatile</code> keyword. It means that the variable in the thread will not use the copy. It will be notified when the variable is updated.</p>

<pre lang="java">
public class StopThread {
    private static volatile boolean stopRequested;

    public static void main(String[] args)
            throws InterruptedException {
        Thread backgroundThread = new Thread(new Runnable() {
            public void run() {
                int i = 0;
                while(!stopRequested)
                    i++;
            }
        });
        backgroundThread.start();

        TimeUnit.SECONDS.sleep(1);
        stopRequested = true;
    }
}
</pre>

<p>But the purpose of <code>volatile</code> is to use the latest value. It does not guarantee synchronization.</p>

<h4>Example: generating sequential number</h4>

<pre lang="java">
private static volatile int nextNumber = 0;
public static int generateNumber() {
    return nextNumber++;
}
</pre>

<p><code>++</code> operation on <code>nextNumber</code> is not atomic. This program may fail.</p>

<p>One solution is to add <code>synchronized</code> to <code>generateNumber()</code>.</p>

<p>Another way is to use Java API <code>java.util.concurrent.atomic.AtomicLong</code>. It is what we want, and it may perform better.</p>

<blockquote>
  <p><strong>Limit variable data in a single thread. Some one calls your program may put it in a multiple threading environment.</strong></p>
</blockquote>

<h2 id="i67">67. Avoid excessive synchronization</h2>

<p>This example uses composite-over-inheritance design to create an observer class.</p>

<pre lang="java">
class ForwardingSet<E> implements Set<E> {
    private final Set<E> s;
    public ForwardingSet(Set<E> s) { this.s = s; }

    public void clear() { s.clear(); }
    public boolean contains(Object o) { return s.contains(o); }
    public boolean isEmpty() { return s.isEmpty(); }
    public int size() { return s.size(); }
    public Iterator<E> iterator() { return s.iterator(); }
    public boolean add(E e) { return s.add(e); }
    public boolean remove(Object o) { return s.remove(o); }
    public boolean containsAll(Collection< ? > c) { return s.containsAll(c); }
    public boolean addAll(Collection< ? extends E> c) { return s.addAll(c); }
    public boolean removeAll(Collection< ? > c) { return s.removeAll(c); }
    public boolean retainAll(Collection< ? > c) { return s.retainAll(c); }

    public Object[] toArray() { return s.toArray(); }
    public < T > T[] toArray(T[] a) { return s.toArray(a); }
    
    @Override
    public boolean equals(Object o) { return s.equals(o); }
    @Override public int hashCode() { return s.hashCode(); }
    @Override public String toString() { return s.toString(); }

    @Override
    public Iterator<E> iterator()
    {
        return null;
    }
}

interface SetObserver<E> {
    // Invoked when an element is added to the observable set
    void added(ObservableSet<E> set, E element);
}

public class ObservableSet<E> extends ForwardingSet<E> {
    public ObservableSet(Set<E> set) { super(set); }

    private final List< SetObserver<E> > observers = new ArrayList< SetObserver<E> >();

    public void addObserver(SetObserver<E> observer) {
        synchronized(observers) {
            observers.add(observer);
        }
    }

    public void removeObserver(SetObserver<E> observer) {
        synchronized(observers) {
            observers.remove(observer);
        }
    }

    private void notifyElementAdded(E element) {
        synchronized(observers) {
            for (SetObserver<E> observer : observers)
                observer.added(this, element);
        }
    }

    @Override
    public boolean add(E element) {
        boolean added = super.add(element);
        if (added) 
            notifyElementAdded(element);
        return added;
    }

    @Override
    public boolean addAll(Collection< ? extends E > c) {
        boolean result = false;
        for ( E element : c)
            result |= add(element);
        return result;
    }

    public static void main(String[] args) {
        ObservableSet<Integer> set = new ObservableSet<Integer>( new HashSet<Integer>() );
        
        set.addObserver(new SetObserver<Integer>() {
            public void added(ObservableSet<Integer> s, Integer e) {
                System.out.println(e);
            }
        });
        
        for (int i = 0; i < 100; i++)
            set.add(i);
    }
}
</pre>

<p>Currently this program works fine. It prints out the numbers from 0 to 99.</p>

<p>If we change the observer in the <code>set</code>:</p>

<pre lang="java">
set.addObserver（new SetObserver<Integer> () {
    public void added(ObservableSet<Integer> s, Integer e) {
        System.out.println(e);
        if (e == 23)
            s.removeObserver(this);
    }
}
</pre>

<p>We expect the program to end after printing 23. This will be illegal, since we are trying to delete an element from the set DURING we are iterating the set. <code>notifyElementAdded</code> is a synchronized block.</p>

<h4>Continue the example</h4>

<p>Now we are trying to unsubscribe the observer using another thread.</p>

<pre lang="java">
set.addObserver( new SetObserver<Integer> () {
    public void added(final ObservableSet<Integer> s, Integer e) {
        System.out.println(e);
        if (e == 23) {
            ExecutorService executor = Executors.newSingleThreadExecutor();
            final SetObserver<Integer> observer = this;
            try {
                executor.submit(new Runnable() {
                    public void run() {
                        s.removeObserver(observer);
                    }
                }).get();
            }
            catch (ExecutionException ex) {
                throw new AssertionError(ex.getCause());
            }
            catch (InterruptedException ex) {
                throw new AssertionError(ex.getCause());
            } finally {
                executor.shutdown();
            }
        }
    }
});

set.addObserver(new SetObserver<Integer>() {
    public void added(ObservableSet<Integer> s, Integer e) {
        System.out.println(e);
        if ( e == 23 )
            s.removeObserver(this);
    }
});

...
        
</pre>

<p><code>Executor</code> service is provided by <code>java.util.concurrent</code> package.</p>

<p>The new observer is added before the previous one. It encounters deadlock. Because in the main thread, <code>add()</code> calls <code>notifyElementAdded()</code>, the later locks <code>observers</code>. And the newly added observer also want to gain the lock.</p>

<p>Calling external method, a method from outside of the containing class, always causes deadlock. We can move the external method out of the synchronized block, by making a snapshot, and operate on the snapshot.</p>

<pre lang="java">
private void notifyElementAdded(E element) {
    List<SetObserver<E>> snapshot = null;
    synchronized(observers) {
        snapshot = new ArrayList<SetObserver<E>>(observers);
    }
    for (SetObserver<E> observer : observers)
        observer.added(this, element);
}
</pre>

<p>A better way to move external method out of synchronized code block is by using <strong>concurrent collection</strong> (since Java 1.5). This is a variant of <code>ArrayList</code>, does all the operations in a copy of the low level array. Therefore it does not require synchronization, and the performance is good. If the program changes the array a lot, the performance will not be good. But for the observer list here, it is very good.</p>

<pre lang="java">
private final List< SetObserver<E> > observers = 
    new CopyOnWriteArrayList< SetObserver<E> >();

public void addObserver( SetObserver<E> observer) {
    observers.add(observer);
}

public boolean removeObserver(SetObserver<E> observer) {
    return observers.remove(observer);
}

private void notifyElementAdded(E element) {
    for (SetObserver<E> observer : observers)
        observer.added(this, element);
}
</pre>

<h2 id="i68">68. Prefer executors and tasks to threads</h2>

<p><strong>Executor</strong> is an interface-based task executor. To use it:</p>

<pre lang="java">
ExecutorService executor = Executors.newSingleThreadExecutor();
executor.execute(runnable);
...
executor.shutdown();
</pre>

<p>If you want to use more than one thread to deal with a task queue, just use a executor service factory(which actually is a <strong>thread pool</strong>), or directly <code>ThreadPoolExecutor</code> class in Java.</p>

<p>For a small project, <code>Executors.newCachedThreadPool</code> is a good choice, but not for a big project. It may make the server overloaded.</p>

<h3>Executor Framework</h3>

<p>Previously, thread is both the working unit and the working mechanism. Now we need toe separate them. Working unit should be <code>Runnable</code> or <code>Callable</code>, <code>Runnable</code> returns value. Working mechanism is executor service.</p>

<p><code>ScheduledThreadPoolExecutor</code> in Executor Framework can replace <code>java.util.Timer</code>.</p>

<p>Please refer to <em>Java Concurrency in Practice</em> for more details on Executor Framework.</p>

<h2 id="i69">69. Prefer concurrency utilities to wait and notify</h2>

<p>From Java 1.5, <code>java.util.concurrent</code> has three kinds of tools: Executor Framework, Concurrent Collection and Synchronizer.</p>

<h3>Concurrent Collection</h3>

<p>It provides high performance concurrency for traditional Collections like <code>List</code> and <code>Queue</code>. If you use concurrent collection, make sure you have concurrent job inside, otherwise you will only slow down your program.</p>

<p><code>ConcurrentMap</code> extends from <code>Map</code>.</p>

<pre lang="java">
private static final ConcurrentMap<String, String> map = 
    new ConcurrentHashMap<String, String>();

public static String intern(String s) {
    String previousValue = map.putIfAbsent(s, s);
    return previousValue == null ? s : previousValue;
}
</pre>

<p><code>ConcurrentHashMap</code> is even better.</p>

<p>Prefer <code>ConcorrentHashMap</code> to <code>Collections.synchronizedMap</code> or <code>Hashtable</code></p>

<p>Most of the <code>ExecutorService</code>s have implemented BlockingQueue. They will be blocked until operation finishes.</p>

<h3>Synchronizer</h3>

<p>It makes thread waiting for another thread, and collaborate. Most common synchronizers are <code>CountDownLatch</code> and <code>Semaphore</code>.</p>

<p><code>CountDown Latch</code> is a single-use barrier, makes threads waiting for other threads.</p>

<h4>Example: CountDown Latch</h4>

<p>Suppose we have a batch of tasks, they need to start at the same time. Before they start, they need to get ready. Once all the tasks are ready, they start together, and a timer starts counting. Once last task finishes, the timer stops counting.</p>

<pre lang="java">
// int concurrency is the concurrency level, means the number of times the countDown() has to be called
public static long time(Executor executor, int concurrency, final Runnable action) throws InterruptedException {
    final CountDownLatch ready = new CountDownLatch(concurrency);
    final CountDownLatch start = new CountDownLatch(concurrency);
    final CountDownLatch done = new CountDownLatch(concurrency);

    for (int i = 0; i < concurrency; i++) {
        executor.execute(new Runnable() {
            public void run() {
                ready.countDown();
                try {
                    start.await();
                    action.run();

                } catch (InterruptedException e) {
                    Thread.currentThread().interrupt();
                } finally {
                    done.countDown();
                }
            }
        });
    }
    ready.await();
    long startNanos = System.nanoTime();
    start.countDown();
    done.await();
    return System.nanoTime() - startNanos;
}
</pre>

<p><code>start.await()</code> means wait here, until the <code>start</code>. <code>done.await()</code> waits there, until it becomes 0, then return the running time.</p>

<p><strong>Use <code>System.nanoTime</code> instead of <code>System.currentTimeMills</code></strong></p>

<h2 id="i70">70. Document thread safety</h2>

<p>A method documented with <code>@synchronized</code> does not mean that it is completely thread-safe.</p>

<p>There are several thread security levels:</p>

<ul>
<li><strong>Immutable</strong>: the instance is immutable, no need external synchronization. eg. <code>String</code>, <code>Long</code>, <code>BigInteger</code></li>
<li><strong>Unconditionally thread-safe</strong>: the instance can be changed, but it has sufficient internal synchronization that its instances can be used concurrently without the need for any external synchronization. eg. <code>Random</code> and <code>ConcurrentHashMap</code> </li>
<li><strong>Conditionally thread-safe</strong>: some methods require external synchronization for safe concurrent use.</li>
<li><strong>Not thread-safe</strong>: instances are mutable. Client must surround each method invocation with external synchronization if the method will be used concurrently.</li>
<li><strong>thread-hostile</strong>: This class is not safe even if all method invocations are surrounded by external synchronization.</li>
</ul>

<p>Thread-safe type should be documented.</p>

<h4>Private lock object</h4>

<p>Private lock object can be an alternative of synchronized block.</p>

<pre lang="java">
private final Object lock = new Object();

public void foo() {
    synchronized(lock) {

    }
}
</pre>

<p>Private lock object can only be applied to unconditional thread-safe. Because in conditional thread-safe method, you must document which lock the user has to gain.</p>

<h2 id="i71">71. Use lazy initialization judiciously</h2>

<p>Lazy initialization is an optimization technique.</p>

<p>Lazy initialization should only be used when the initialization cost is high.</p>

<p>If multiple threads are using a lazy-initialed object, you should be careful about the initialization.</p>

<p>A typical way to initialed an object:</p>

<pre lang="java">
private final FieldType field - conputeFieldValue();
</pre>

<p>If we use lazy initialization, that part needs to be synchronized:</p>

<pre lang="java">
private FieldType field;

synchronized FieldType getField() {
    if (field == null)
        field = computeFieldValue();
    return field;
}
</pre>

<p>If we need to lazy initiate a static field, we can use <strong>lazy initialization holder class</strong>.</p>

<pre lang="java">
private static class FieldHolder {
    static final FieldType field = computerFieldValue();
}
static FieldType getField() { return FieldHolder.field; }
</pre>

<p>When <code>getField()</code> get called for the first time, it accesses <code>FieldHolder.field</code>, which makes <code>FieldHolder</code> class initialized. Later <code>getField()</code> will return the created object. The point is we don't need to add <code>synchronized</code> before <code>getField()</code>, and the code is safe.</p>

<h2 id="i72">72. Don't depend on the thread scheduler</h2>

<p>Any program that replies on the thread scheduler for correctness or performance is likely to be nonportable.</p>

<p>We'd better keep the average number of threads running to be less than the number of CPU cores. To achieve that, we need to make thread do more meaningful tasks. Meanwhile keep thread pool small.</p>

<p>Don't make thread in a <strong>busy-wait</strong> state, repeating checking the state of a shared object.</p>

<p>Don't use <code>Thread.yield</code> to gain more CPU time for a thread. This is nonportable. You should redesign the application and decrease the number of concurrent threads. <code>Thread.yield</code> should only be used in testing.</p>

<h2 id="i73">73. Avoid thread groups</h2>

<p>The <strong>thread group</strong> that Java provided is very insecure.</p>

<p>Try to use thread pool executor instead.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1062</wp:post_id>
		<wp:post_date>2013-05-28 14:06:30</wp:post_date>
		<wp:post_date_gmt>2013-05-28 06:06:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>notes-of-effective-java-9-concurrency</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="category" nicename="programming-language-bian-cheng-yu-yan"><![CDATA[Programming Languages]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1334089528]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>69</wp:comment_id>
			<wp:comment_author><![CDATA[早泄的药]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.zhongyaodadian.com</wp:comment_author_url>
			<wp:comment_author_IP>119.187.113.210</wp:comment_author_IP>
			<wp:comment_date>2013-06-13 10:19:37</wp:comment_date>
			<wp:comment_date_gmt>2013-06-13 02:19:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Null...</strong>

你是怎么想的呢？...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>NOTES of Effective Java (10) - Serialization</title>
		<link>http://allenlsy.com/2013/05/notes-of-effective-java-10-serialization/</link>
		<pubDate>Wed, 29 May 2013 08:54:01 +0000</pubDate>
		<dc:creator>allenlsy</dc:creator>
		<guid isPermaLink="false">http://allenlsy.com/?p=1066</guid>
		<description></description>
		<content:encoded><![CDATA[<p><img src="http://www.crazysmoove.com/memjug/javabooks-slides/images/Effective_Java.jpg" alt="enter image description here" />
<br /></p>

<ul>
<li><a href="#i74">74. implement Serializable judiciously</a></li>
<li><a href="#i75">75. Consider using a custom serialized form</a></li>
<li><a href="#i76">76. Write <code>readObject</code> methods defensively</a></li>
<li><a href="#i77">77. For instance control, prefer enum types to <code>readResolve</code></a></li>
<li><a href="#i78">78. Consider serialization proxies instead of serialized instances</a></li>
</ul>

<hr />

<h2 id="i74">74. implement Serializable judiciously</h2>

<p>Once a <code>Serializable</code> interface is published, it decreases the flexibility to change a class's implementation. You have to support serialization forever.</p>

<p>Serialization and deserialization are normally implemented by <code>ObjectOutputStream.putFields</code> and <code>ObjectInputStream.readFields</code>.</p>

<p>You should design a high quality serialization method, that can be used for a long time.</p>

<p>Every serializable class has a unique ID <code>private static final long serialVersionUID</code>. If you don't have one, system will create a UID based on the structure of this class.</p>

<p>Another cost of implementing <code>Serializable</code> is that <strong>it increases the likelihood of bugs and security holes.</strong> Usually we create an object using constructor. Serialization provides another extralinguistic mechanism to create an object. Deserialization is a hidden constructor. Deserialization constructor must follow all the constraints in the real constructor, otherwise it will be attacked.</p>

<p>The third cost of serialization is, as new version releasing, it increases the testing burden. When new version released, we need to check whether can create an object using new version, and deserialize in the old version.</p>

<h4>Some rules</h4>

<p>If a class is serializable, then all its component classes need to be serializable.</p>

<p><strong>A class designed for inheritance should try best to avoid implementing serializable.</strong></p>

<p>Examples of implementing <code>Serializable</code>: <code>Throwable</code> implements <code>Serializable</code>, therefore RMI exception can be sent from server to client.</p>

<p>For a class that can be serialized and the initial values of instance field are special, then we need to add a <code>readObjectNoData</code> to the class. For more information, please check Java documentation about Serialization.</p>

<p>Serialization requires the implementing class to have all the field serializable, which makes a class designed for inheritance difficult to be serializable. In Addition, if a parent class does not have a parameterless constructor, the subclass is surely not serializable. Therefore, <strong>to make a class designed for inheritance nonserializable, you should have a parameterless constructor.</strong></p>

<p><strong>If you want to have a nonserializable parent class, and a serializable subclass</strong>, you need to make the parent class a <strong>protected parameterless constructor</strong>.</p>

<p>Anyway, you have to cautiously make a decision whether subclass is serializable.</p>

<h2 id="i75">75. Consider using a custom serialized form</h2>

<p><strong>The default serialized form is likely to be appropriate if an object's physical representation is identical to its logical content.</strong> For example, some classes that contain only property fields.</p>

<p>Using the default serialized form when an object's physical representation differs substantially from its logical data content has four disadvantages:</p>

<ul>
<li><strong>It permanently ties the exported API to the current internal representation.</strong> Internal class, field becomes part of the public API. If the internal is changed in the future, the actual class still need to support the old version of internal.</li>
<li><strong>It can consume excessive space.</strong> Redundant information will also be serialized.</li>
<li><strong>It can consume excessive time.</strong> Serialization traverses the topology graph of class relationship.</li>
<li><strong>It can case stack overflows,</strong> due to the traversal of topology graph.</li>
</ul>

<h4>Example: <code>StringList</code></h4>

<p>Suppose <code>StringList</code> is a class store a list of <code>String</code>s. The logical representation should only contains all the elements, and maybe the number of elements. But the physical representation is the list itself, contains the linkage between elements.</p>

<pre lang="java">
public final class StringList implements Serializable
{

    private transient int size = 0;
    private transient Entry head = null;
    
    // No longer serializable
    private static class Entry {
        String data;
        Entry next;
        Entry previous;
    }
    
    public final void add(String s) { 
        // ...
    }
    
    /**
     * Serialize this {@code StringList} instance.
     * 
     * @serialData The size of the list (the number of strings it contains) is emitted ({@code int}), followed
     * by all of its elements (each a {@code String}), in the proper sequence.
     * @params
     * @throws IOException
     */
    private void writeObject(ObjectOutputStream s) throws IOException {
        s.defaultWriteObject();
        s.writeInt(size);
        
        // Write out all elements in the proper order.
        for (Entry e = head; e != null; e = e.next)
            s.writeObject(e.data);
    }
    
    private void readObject(ObjectInputStream s) throws IOException, ClassNotFoundException {
        s.defaultReadObject();
        int numElements = s.readInt();
        
        // Read in all elements and insert them in list
        for (int i = 0; i < numElements; i++)
            add((String) s.readObject() );
    }
    // ...
}

</pre>

<p><code>transient</code> field means to omit it from the default serialization.</p>

<p><code>defaultWriteObject</code> writes the non-static and non-transient fields of the current class to this stream. It may only be called from the <code>writeObject</code> method of the class being serialized.</p>

<p>It is recommended to call <code>defaultWriteObject</code> and <code>defaultReadObject</code>, even when all the fields are transient. It improves the flexibility. In the future if we add non-transient field to the class, the serialization will still be successful.</p>

<p><code>writeObject</code> has commented documentation, because it defines the serialization form. <code>@serialData</code> tells Javadoc to include this part as serialization information.</p>

<h3>Mark fields as <code>transient</code> when needed.</h3>

<p>If you are using the default serialization form, when deserializing, all the transient field will have be assigned the default value: <code>null</code> for objects, <code>0</code> for number, and <code>false</code> for boolean, etc..</p>

<p><code>private static final long serialVersionUID</code> is to avoid the incompatibility of default UID between different versions.</p>

<p>All of our effort here is to resolve the <strong>serialization compatibility</strong> problem.</p>

<h2 id="i76">76. Write <code>readObject</code> methods defensively</h2>

<p><code>readObject</code> method is another public constructor. It must validate the parameters before deserialization, and also do defensive copying. Otherwise, attacker will create an illegal object from it.</p>

<p>Attacker can manually fake a serialized form, by modifying a normal one based on some documentation.</p>

<pre lang="java">
// Example from #39
public final class Period implements Serializable{
    private final Date start;
    private final Date end;

    public Period(Date start, Date end)
    {
        this.start = new Date(start.getTime());
        this.end = new Date(end.getTime());

        if (this.start.compareTo(this.end) > 0)
            throw new IllegalArgumentException( start + " after " + end);

    }

    public Date start() {
        return new Date(start.getTime());
    }

    public Date end() {
        return new Date(end.getTime());
    }

    public String toString() { return start + " - " + end; }
    // ...
}

public class BogusPeriod {
    private static final byte[] serializedForm = new byte[] { 
        // ...
    };

    public static void main(String[] args) {
        Period p = (Period) deserialize(serializedForm);
        System.out.println(p);
    }

    private static Object deserialize(byte[] sf) {
        try {
            InputStream is = new ByteArrayInputStream(sf);
            ObjectInputStream ois = new ObjectInputStream(is);
            return ois.readObject();
        } catch (Exception e) {
            throw new IllegalArgumentException(e);
        }
    }
}
</pre>

<p>To solve the problem, you can provide a <code>readObject</code> method for <code>Period</code>.</p>

<pre lang="java">
private void readObject(ObjectInputStream s) throws IOException, ClassNotFoundException {
    s.defaultReadObject();

    if (start.compareTo(end) > 0)
        throw new InvalidObjectException(start + " after " + end);
}
</pre>

<p>It still has a small but severe problem. Attacker can create a class to modify a valid <code>Period</code> object.</p>

<pre lang="java">
class MutablePeriod {
    public final Period period;
    public final Date start;
    public final Date end;
    
    public MutablePeriod() {
        try
        {
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            ObjectOutputStream out = new ObjectOutputStream(bos);
            
            out.writeObject(new Period( new Date(), new Date()));
            
            byte[] ref = { 0x71, 0, 0x7e, 0, 5 };
            bos.write(ref);
            ref[4] = 4;
            bos.write(ref);
            
            ObjectInputStream in = new ObjectInputStream(new ByteArrayInputStream(bos.toByteArray()));
            period = (Period) in.readObject();
            start = (Date) in.readObject();
            end = (Date) in.readObject();
        }
        catch (Exception e)
        {
            throw new AssertionError(e);
        }
    }
    
}

public class Main
{
    public static void main(String args[]){

        MutablePeriod mp = new MutablePeriod();
        Period p = mp.period;
        Date pEnd = mp.end;
        
        pEnd.setYear(78);
        System.out.println(p);
        
        pEnd.setYear(69);
        System.out.println(p);
    }
}
</pre>

<p>This demo show that a <code>Period</code> object internal can be changed by <code>MutablePeriod</code> object. If attacker creates a <code>MutablePeriod</code> object, and pass the <code>mp.period</code> to your program, and the security of your program depends on the immutability of <code>Period</code>, then you will be hacked.</p>

<p>The problem here is <code>readObject</code> of <code>Period</code> does not provide enough defensive copying. <code>in.readObject()</code> returns the reference of internal.</p>

<p>Add the code to <code>Period</code> class</p>

<pre lang="java">
private void readObject(ObjectInputStream s) throws IOException, ClassNotFoundException {
    s.defaultReadObject();

    // Defensively copy our mutable components
    start = new Date(start.getTime() );
    end = new Date(end. getTime() );

    // Check that our invariants are satisfied
    if (start.compareTo(end) > 0)
    throw new InvalidObjectException(start + " after " + end);  
}
</pre>

<p>To provide defensive copying of final field, we have to remove <code>final</code> keyword.</p>

<p><code>readObject</code> method must implement all the validation that constructor does.</p>

<p>There are some rules for producing a more robust <code>readObject</code> method:</p>

<ul>
<li>For classes with object reference fields that must remain private, defensively copy each object in such a field.</li>
<li>Check any invariants and throw an <code>InvalidObjectException</code> if a check fails. The checks should follow any defensive copying.</li>
<li>If an entire object graph must be validated after it is deserialized, use the <code>ObjectInputValidation</code> interface.</li>
<li>Do not invoke any overrideable methods in the class, directly or indirectly.</li>
</ul>

<h2 id="i77">77. For instance control, prefer enum types to <code>readResolve</code></h2>

<p>If we deserialize a Singleton instance, it will no longer be a Singleton, since deserialization creates another one.</p>

<p><code>readResolve</code> allows you using <code>readObject</code> to create an object to replace another one.</p>

<pre lang="java">
class Single implements Serializable{
    public static Single getInstance() {
        return instance;
    }
    private static final Single instance = new Single("original");
    
    private String name = null;
    private Single(String name) { this.name = name; }
    private Single() {}
    
    public void setName(String name)
    {
        this.name = name;
    }
    
    @Override
    public String toString() {
        return name;
    }
    
    private Object readResolve() {
        System.out.println("read resolve called");
        return instance;
    }
}

public class SerialTest
{
    public static void main(String[] main)
    {
        try
        {
            Single s = Single.getInstance();
            
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            ObjectOutputStream oos = new ObjectOutputStream(bos);
            oos.writeObject(s);
            
            ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bos.toByteArray()));
            Single res = (Single) (ois.readObject());
            
            res.setName("changed");
            
            System.out.println(s);
            System.out.println(res);
            
        }
        catch (IOException e)
        {
            e.printStackTrace();
        }
        catch (ClassNotFoundException e)
        {
            e.printStackTrace();
        }       
    }
}
</pre>

<p>This program output:</p>

<pre highlight="false">
read resolve called
changed
changed
</pre>

<p>Which means the deserialized object is actually the original one. Please compare the result after removing <code>readResolve()</code> method.</p>

<p><code>readResolve</code> will return the original INSTANCE. If the object has reference field, they all should declared as <code>transient</code>.</p>

<h2 id="i78">78. Consider serialization proxies instead of serialized instances</h2>

<p><strong>Serialization Proxy Pattern</strong> means, provide a private nested static class for a serializable class. This class is <strong>serialization proxy</strong>, it has a single constructor, and parameter is its enclosing class object.</p>

<h4>Example: Period class</h4>

<pre lang="java">
// Period class is from #76

// SerializationProxy is inside Period
private static class SerializationProxy implements Serializable{
    private final Date start;
    private final Date end;

    SerializationProxy(Period p) {
        this.start = p.start;
        this.end = p.end;
    }

    private Object readResolve() {
        return new Period(New Date(start.getTime()), new Date(end.getTime()));
    }

    private static final long serialVersionUID = ...;
}
</pre>

<p>Then, add these two methods to <code>Period</code>:</p>

<pre lang="java">
private void readObject(ObjectInputStream stream) throw InvalidObjectException {
    throw new InvalidObjectException("Proxy required");
}

private Object writeReplace() {
    return new SerializationProxy(this);
}
</pre>

<p>When client serialize a <code>Period</code> object:</p>

<pre lang="java">
// oos is a ObjectOutputStream
oos.writeObject(period)
</pre>

<p>Program goes into the <code>writeReplace()</code> of <code>Period</code>. It actually serializes a new <code>SerializationProxy</code> object. But the client doesn't know this. This new <code>SerializationProxy</code> object contains all the information of the <code>Period</code> object.</p>

<p>When client deserialize the <code>Period</code> object, which actually is <code>SerializationProxy</code> object:</p>

<pre lang="java">
// ois is a ObjectInputStream
Period newPeriod = (Period)ois.readObject();
</pre>

<p><code>ois</code> contains the <code>SerializationProxy</code> object. Program goes into the <code>readResolve()</code> of <code>SerializationProxy</code> object, which returns a copy of original <code>Period</code> object.</p>

<p>Now, client cannot call the <code>readObject</code> from <code>Period</code> directly.</p>

<p><strong>Serialization Proxy Pattern</strong> ensures <code>Period</code> is really immutable, the fields are <code>final</code></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1066</wp:post_id>
		<wp:post_date>2013-05-29 16:54:01</wp:post_date>
		<wp:post_date_gmt>2013-05-29 08:54:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>notes-of-effective-java-10-serialization</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="category" nicename="programming-language-bian-cheng-yu-yan"><![CDATA[Programming Languages]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1334323004]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
